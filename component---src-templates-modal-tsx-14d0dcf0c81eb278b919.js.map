{"version":3,"file":"component---src-templates-modal-tsx-14d0dcf0c81eb278b919.js","mappings":"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AGyzB,EAAOhyB,GAAY,GAAGue,MAEjEyT,EAAOxrB,GAAS,GAAKw5B,EAKvB,OADAhO,EAAO5F,KAAK,CAAC,OAAQ4T,EAASxN,IACvBR,CACT,GC3DO,MAAMiO,GAAiB,CAC5B,UACA,UACA,QACA,OACA,WACA,aACA,OACA,UACA,SACA,MACA,WACA,KACA,UACA,SACA,MACA,MACA,KACA,KACA,WACA,aACA,SACA,SACA,OACA,QACA,WACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,KACA,OACA,SACA,SACA,KACA,OACA,OACA,OACA,WACA,MACA,WACA,KACA,WACA,SACA,IACA,QACA,SACA,UACA,UACA,QACA,QACA,KACA,QACA,KACA,QACA,QACA,KACA,QACA,MAeWC,GAAe,CAAC,MAAO,SAAU,QAAS,YC9E1CC,GAAW,CACtB9jC,KAAM,WACNk5B,SAsCF,SAA0BN,EAASC,EAAI2C,GACrC,MAAMjC,EAAOz3B,KAEb,IAAIw+B,EAEAyD,EAEAC,EAEA/hC,EAEAgiC,EACJ,OAYA,SAAeptB,GAEb,OAaF,SAAgBA,GAId,OAHA+hB,EAAQG,MAAM,YACdH,EAAQG,MAAM,gBACdH,EAAQI,QAAQniB,GACTvD,CACT,CAlBSokB,CAAO7gB,EAChB,EAiCA,SAASvD,EAAKuD,GACZ,OAAa,KAATA,GACF+hB,EAAQI,QAAQniB,GACTqtB,GAEI,KAATrtB,GACF+hB,EAAQI,QAAQniB,GAChBktB,GAAa,EACNI,GAEI,KAATttB,GACF+hB,EAAQI,QAAQniB,GAChBypB,EAAS,EAMF/G,EAAKkB,UAAY5B,EAAKuL,GAI3BxM,GAAW/gB,IACb+hB,EAAQI,QAAQniB,GAEhBmtB,EAASvR,OAAOiG,aAAa7hB,GACtBiZ,GAEF0L,EAAI3kB,EACb,CAgBA,SAASqtB,EAAgBrtB,GACvB,OAAa,KAATA,GACF+hB,EAAQI,QAAQniB,GAChBypB,EAAS,EACF+D,GAEI,KAATxtB,GACF+hB,EAAQI,QAAQniB,GAChBypB,EAAS,EACTr+B,EAAQ,EACDqiC,GAIL1M,GAAW/gB,IACb+hB,E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","sources":["webpack://@meese-enterprises/website/./node_modules/extend/index.js","webpack://@meese-enterprises/website/./node_modules/estree-util-is-identifier-name/lib/index.js","webpack://@meese-enterprises/website/./node_modules/hast-util-to-jsx-runtime/node_modules/hast-util-whitespace/lib/index.js","webpack://@meese-enterprises/website/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/schema.js","webpack://@meese-enterprises/website/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/merge.js","webpack://@meese-enterprises/website/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/normalize.js","webpack://@meese-enterprises/website/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/info.js","webpack://@meese-enterprises/website/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/types.js","webpack://@meese-enterprises/website/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/defined-info.js","webpack://@meese-enterprises/website/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/create.js","webpack://@meese-enterprises/website/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/xlink.js","webpack://@meese-enterprises/website/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/xml.js","webpack://@meese-enterprises/website/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/case-sensitive-transform.js","webpack://@meese-enterprises/website/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/case-insensitive-transform.js","webpack://@meese-enterprises/website/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/xmlns.js","webpack://@meese-enterprises/website/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/aria.js","webpack://@meese-enterprises/website/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/html.js","webpack://@meese-enterprises/website/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/svg.js","webpack://@meese-enterprises/website/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/index.js","webpack://@meese-enterprises/website/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/find.js","webpack://@meese-enterprises/website/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/hast-to-react.js","webpack://@meese-enterprises/website/./node_modules/hast-util-to-jsx-runtime/node_modules/style-to-object/esm/index.mjs","webpack://@meese-enterprises/website/./node_modules/hast-util-to-jsx-runtime/node_modules/unist-util-position/lib/index.js","webpack://@meese-enterprises/website/./node_modules/vfile-message/node_modules/unist-util-stringify-position/lib/index.js","webpack://@meese-enterprises/website/./node_modules/vfile-message/lib/index.js","webpack://@meese-enterprises/website/./node_modules/hast-util-to-jsx-runtime/lib/index.js","webpack://@meese-enterprises/website/./node_modules/hast-util-to-jsx-runtime/node_modules/comma-separated-tokens/index.js","webpack://@meese-enterprises/website/./node_modules/hast-util-to-jsx-runtime/node_modules/space-separated-tokens/index.js","webpack://@meese-enterprises/website/./node_modules/html-url-attributes/lib/index.js","webpack://@meese-enterprises/website/./node_modules/mdast-util-from-markdown/node_modules/mdast-util-to-string/lib/index.js","webpack://@meese-enterprises/website/./node_modules/micromark-util-chunked/index.js","webpack://@meese-enterprises/website/./node_modules/micromark-util-subtokenize/lib/splice-buffer.js","webpack://@meese-enterprises/website/./node_modules/micromark-util-subtokenize/index.js","webpack://@meese-enterprises/website/./node_modules/micromark-util-combine-extensions/index.js","webpack://@meese-enterprises/website/./node_modules/micromark-util-character/index.js","webpack://@meese-enterprises/website/./node_modules/micromark-factory-space/index.js","webpack://@meese-enterprises/website/./node_modules/mdast-util-from-markdown/node_modules/micromark/lib/initialize/content.js","webpack://@meese-enterprises/website/./node_modules/mdast-util-from-markdown/node_modules/micromark/lib/initialize/document.js","webpack://@meese-enterprises/website/./node_modules/micromark-core-commonmark/lib/blank-line.js","webpack://@meese-enterprises/website/./node_modules/micromark-core-commonmark/lib/content.js","webpack://@meese-enterprises/website/./node_modules/mdast-util-from-markdown/node_modules/micromark/lib/initialize/flow.js","webpack://@meese-enterprises/website/./node_modules/mdast-util-from-markdown/node_modules/micromark/lib/initialize/text.js","webpack://@meese-enterprises/website/./node_modules/micromark-util-resolve-all/index.js","webpack://@meese-enterprises/website/./node_modules/mdast-util-from-markdown/node_modules/micromark/lib/create-tokenizer.js","webpack://@meese-enterprises/website/./node_modules/micromark-core-commonmark/lib/thematic-break.js","webpack://@meese-enterprises/website/./node_modules/micromark-core-commonmark/lib/list.js","webpack://@meese-enterprises/website/./node_modules/micromark-core-commonmark/lib/block-quote.js","webpack://@meese-enterprises/website/./node_modules/micromark-factory-destination/index.js","webpack://@meese-enterprises/website/./node_modules/micromark-factory-label/index.js","webpack://@meese-enterprises/website/./node_modules/micromark-factory-title/index.js","webpack://@meese-enterprises/website/./node_modules/micromark-factory-whitespace/index.js","webpack://@meese-enterprises/website/./node_modules/micromark-util-normalize-identifier/index.js","webpack://@meese-enterprises/website/./node_modules/micromark-core-commonmark/lib/definition.js","webpack://@meese-enterprises/website/./node_modules/micromark-core-commonmark/lib/code-indented.js","webpack://@meese-enterprises/website/./node_modules/micromark-core-commonmark/lib/heading-atx.js","webpack://@meese-enterprises/website/./node_modules/micromark-core-commonmark/lib/setext-underline.js","webpack://@meese-enterprises/website/./node_modules/micromark-util-html-tag-name/index.js","webpack://@meese-enterprises/website/./node_modules/micromark-core-commonmark/lib/html-flow.js","webpack://@meese-enterprises/website/./node_modules/micromark-core-commonmark/lib/code-fenced.js","webpack://@meese-enterprises/website/./node_modules/decode-named-character-reference/index.dom.js","webpack://@meese-enterprises/website/./node_modules/micromark-core-commonmark/lib/character-reference.js","webpack://@meese-enterprises/website/./node_modules/micromark-core-commonmark/lib/character-escape.js","webpack://@meese-enterprises/website/./node_modules/micromark-core-commonmark/lib/line-ending.js","webpack://@meese-enterprises/website/./node_modules/micromark-core-commonmark/lib/label-end.js","webpack://@meese-enterprises/website/./node_modules/micromark-core-commonmark/lib/label-start-image.js","webpack://@meese-enterprises/website/./node_modules/micromark-util-classify-character/index.js","webpack://@meese-enterprises/website/./node_modules/micromark-core-commonmark/lib/attention.js","webpack://@meese-enterprises/website/./node_modules/micromark-core-commonmark/lib/autolink.js","webpack://@meese-enterprises/website/./node_modules/micromark-core-commonmark/lib/html-text.js","webpack://@meese-enterprises/website/./node_modules/micromark-core-commonmark/lib/label-start-link.js","webpack://@meese-enterprises/website/./node_modules/micromark-core-commonmark/lib/hard-break-escape.js","webpack://@meese-enterprises/website/./node_modules/micromark-core-commonmark/lib/code-text.js","webpack://@meese-enterprises/website/./node_modules/mdast-util-from-markdown/node_modules/micromark/lib/constructs.js","webpack://@meese-enterprises/website/./node_modules/mdast-util-from-markdown/node_modules/micromark/lib/parse.js","webpack://@meese-enterprises/website/./node_modules/mdast-util-from-markdown/node_modules/micromark/lib/preprocess.js","webpack://@meese-enterprises/website/./node_modules/micromark-util-decode-numeric-character-reference/index.js","webpack://@meese-enterprises/website/./node_modules/micromark-util-decode-string/index.js","webpack://@meese-enterprises/website/./node_modules/mdast-util-from-markdown/node_modules/unist-util-stringify-position/lib/index.js","webpack://@meese-enterprises/website/./node_modules/mdast-util-from-markdown/lib/index.js","webpack://@meese-enterprises/website/./node_modules/mdast-util-from-markdown/node_modules/micromark/lib/postprocess.js","webpack://@meese-enterprises/website/./node_modules/react-markdown/node_modules/remark-parse/lib/index.js","webpack://@meese-enterprises/website/./node_modules/@ungap/structured-clone/esm/types.js","webpack://@meese-enterprises/website/./node_modules/@ungap/structured-clone/esm/deserialize.js","webpack://@meese-enterprises/website/./node_modules/@ungap/structured-clone/esm/serialize.js","webpack://@meese-enterprises/website/./node_modules/@ungap/structured-clone/esm/index.js","webpack://@meese-enterprises/website/./node_modules/micromark-util-sanitize-uri/index.js","webpack://@meese-enterprises/website/./node_modules/mdast-util-to-hast/lib/footer.js","webpack://@meese-enterprises/website/./node_modules/mdast-util-to-hast/node_modules/unist-util-is/lib/index.js","webpack://@meese-enterprises/website/./node_modules/mdast-util-to-hast/node_modules/unist-util-visit-parents/lib/index.js","webpack://@meese-enterprises/website/./node_modules/mdast-util-to-hast/node_modules/unist-util-position/lib/index.js","webpack://@meese-enterprises/website/./node_modules/mdast-util-to-hast/lib/revert.js","webpack://@meese-enterprises/website/./node_modules/mdast-util-to-hast/lib/handlers/list-item.js","webpack://@meese-enterprises/website/./node_modules/trim-lines/index.js","webpack://@meese-enterprises/website/./node_modules/mdast-util-to-hast/lib/handlers/index.js","webpack://@meese-enterprises/website/./node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","webpack://@meese-enterprises/website/./node_modules/mdast-util-to-hast/lib/handlers/break.js","webpack://@meese-enterprises/website/./node_modules/mdast-util-to-hast/lib/handlers/code.js","webpack://@meese-enterprises/website/./node_modules/mdast-util-to-hast/lib/handlers/delete.js","webpack://@meese-enterprises/website/./node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","webpack://@meese-enterprises/website/./node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","webpack://@meese-enterprises/website/./node_modules/mdast-util-to-hast/lib/handlers/heading.js","webpack://@meese-enterprises/website/./node_modules/mdast-util-to-hast/lib/handlers/html.js","webpack://@meese-enterprises/website/./node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","webpack://@meese-enterprises/website/./node_modules/mdast-util-to-hast/lib/handlers/image.js","webpack://@meese-enterprises/website/./node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","webpack://@meese-enterprises/website/./node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","webpack://@meese-enterprises/website/./node_modules/mdast-util-to-hast/lib/handlers/link.js","webpack://@meese-enterprises/website/./node_modules/mdast-util-to-hast/lib/handlers/list.js","webpack://@meese-enterprises/website/./node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","webpack://@meese-enterprises/website/./node_modules/mdast-util-to-hast/lib/handlers/root.js","webpack://@meese-enterprises/website/./node_modules/mdast-util-to-hast/lib/handlers/strong.js","webpack://@meese-enterprises/website/./node_modules/mdast-util-to-hast/lib/handlers/table.js","webpack://@meese-enterprises/website/./node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","webpack://@meese-enterprises/website/./node_modules/mdast-util-to-hast/lib/handlers/table-row.js","webpack://@meese-enterprises/website/./node_modules/mdast-util-to-hast/lib/handlers/text.js","webpack://@meese-enterprises/website/./node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","webpack://@meese-enterprises/website/./node_modules/mdast-util-to-hast/lib/state.js","webpack://@meese-enterprises/website/./node_modules/mdast-util-to-hast/node_modules/unist-util-visit/lib/index.js","webpack://@meese-enterprises/website/./node_modules/mdast-util-to-hast/lib/index.js","webpack://@meese-enterprises/website/./node_modules/remark-rehype/lib/index.js","webpack://@meese-enterprises/website/./node_modules/bail/index.js","webpack://@meese-enterprises/website/./node_modules/is-plain-obj/index.js","webpack://@meese-enterprises/website/./node_modules/trough/index.js","webpack://@meese-enterprises/website/./node_modules/vfile/lib/minpath.browser.js","webpack://@meese-enterprises/website/./node_modules/vfile/lib/minproc.browser.js","webpack://@meese-enterprises/website/./node_modules/vfile/lib/minurl.shared.js","webpack://@meese-enterprises/website/./node_modules/vfile/lib/minurl.browser.js","webpack://@meese-enterprises/website/./node_modules/vfile/lib/index.js","webpack://@meese-enterprises/website/./node_modules/unified/lib/callable-instance.js","webpack://@meese-enterprises/website/./node_modules/unified/lib/index.js","webpack://@meese-enterprises/website/./node_modules/react-markdown/node_modules/unist-util-is/lib/index.js","webpack://@meese-enterprises/website/./node_modules/react-markdown/node_modules/unist-util-visit-parents/lib/index.js","webpack://@meese-enterprises/website/./node_modules/react-markdown/lib/index.js","webpack://@meese-enterprises/website/./node_modules/react-markdown/node_modules/unist-util-visit/lib/index.js","webpack://@meese-enterprises/website/./node_modules/rebass/dist/index.esm.js","webpack://@meese-enterprises/website/./src/components/MarkdownComponents.tsx","webpack://@meese-enterprises/website/./src/templates/Modal.tsx","webpack://@meese-enterprises/website/./node_modules/hast-util-to-jsx-runtime/node_modules/inline-style-parser/index.js","webpack://@meese-enterprises/website/./node_modules/hast-util-to-jsx-runtime/node_modules/style-to-object/cjs/index.js","webpack://@meese-enterprises/website/./node_modules/reflexbox/dist/index.js","webpack://@meese-enterprises/website/./node_modules/@emotion/sheet/dist/sheet.browser.esm.js","webpack://@meese-enterprises/website/./node_modules/@emotion/stylis/dist/stylis.browser.esm.js","webpack://@meese-enterprises/website/./node_modules/@emotion/core/node_modules/@emotion/cache/dist/cache.browser.esm.js","webpack://@meese-enterprises/website/./node_modules/@emotion/hash/dist/hash.browser.esm.js","webpack://@meese-enterprises/website/./node_modules/@emotion/unitless/dist/unitless.browser.esm.js","webpack://@meese-enterprises/website/./node_modules/@emotion/serialize/node_modules/@emotion/memoize/dist/memoize.browser.esm.js","webpack://@meese-enterprises/website/./node_modules/@emotion/serialize/dist/serialize.browser.esm.js","webpack://@meese-enterprises/website/./node_modules/@emotion/core/dist/emotion-element-57a3a7a3.browser.esm.js","webpack://@meese-enterprises/website/./node_modules/@emotion/utils/dist/utils.browser.esm.js","webpack://@meese-enterprises/website/./node_modules/@emotion/css/dist/css.browser.esm.js","webpack://@meese-enterprises/website/./node_modules/@emotion/core/dist/core.browser.esm.js","webpack://@meese-enterprises/website/./node_modules/@emotion/styled-base/dist/styled-base.browser.esm.js","webpack://@meese-enterprises/website/./node_modules/reflexbox/node_modules/@emotion/styled/dist/styled.browser.esm.js","webpack://@meese-enterprises/website/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://@meese-enterprises/website/./node_modules/@babel/runtime/helpers/toPrimitive.js","webpack://@meese-enterprises/website/./node_modules/@babel/runtime/helpers/toPropertyKey.js","webpack://@meese-enterprises/website/./node_modules/@babel/runtime/helpers/typeof.js"],"sourcesContent":["'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [jsx=false]\n *   Support JSX identifiers (default: `false`).\n */\n\nconst startRe = /[$_\\p{ID_Start}]/u\nconst contRe = /[$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst contReJsx = /[-$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst nameRe = /^[$_\\p{ID_Start}][$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\nconst nameReJsx = /^[$_\\p{ID_Start}][-$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Checks if the given code point can start an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @returns {boolean}\n *   Whether `code` can start an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function start(code) {\n  return code ? startRe.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given code point can continue an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `code` can continue an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function cont(code, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? contReJsx : contRe\n  return code ? re.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given value is a valid identifier name.\n *\n * @param {string} name\n *   Identifier to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `name` can be an identifier.\n */\nexport function name(name, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? nameReJsx : nameRe\n  return re.test(name)\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nexport function whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Object.<string, Info>} Properties\n * @typedef {Object.<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","import {Schema} from './schema.js'\n\n/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\n/**\n * @param {import('./schema.js').Schema[]} definitions\n * @param {string} space\n * @returns {import('./schema.js').Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  var property = {}\n  /** @type {Normal} */\n  var normal = {}\n  var index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    this.property = property\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.attribute = null\nInfo.prototype.property = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","var powers = 0\n\nexport var boolean = increment()\nexport var booleanish = increment()\nexport var overloadedBoolean = increment()\nexport var number = increment()\nexport var spaceSeparated = increment()\nexport var commaSeparated = increment()\nexport var commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\nvar checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    var index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    while (++index < checks.length) {\n      mark(\n        this,\n        checks[index],\n        (mask & types[checks[index]]) === types[checks[index]]\n      )\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {InstanceType<typeof DefinedInfo>} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    values[key] = value\n  }\n}\n","import {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\n/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n * @typedef {import('./info.js').Info} Info\n */\n\n/**\n * @typedef {Object.<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Object.<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array.<string>} [mustUseProperty]\n */\n\nvar own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {import('./schema.js').Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  var property = {}\n  /** @type {Normal} */\n  var normal = {}\n  /** @type {string} */\n  var prop\n  /** @type {Info} */\n  var info\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes, prop),\n        definition.properties[prop],\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport var xlink = create({\n  space: 'xlink',\n  transform: xlinkTransform,\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n\n/**\n * @param {unknown} _\n * @param {string} prop\n * @returns {string}\n */\nfunction xlinkTransform(_, prop) {\n  return 'xlink:' + prop.slice(5).toLowerCase()\n}\n","import {create} from './util/create.js'\n\nexport var xml = create({\n  space: 'xml',\n  transform: xmlTransform,\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n\n/**\n * @param {unknown} _\n * @param {string} prop\n * @returns {string}\n */\nfunction xmlTransform(_, prop) {\n  return 'xml:' + prop.slice(3).toLowerCase()\n}\n","/**\n * @param {Object.<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Object.<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport var xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport var aria = create({\n  transform: ariaTransform,\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n\n/**\n * @param {unknown} _\n * @param {string} prop\n * @returns {string}\n */\nfunction ariaTransform(_, prop) {\n  return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n}\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport var html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: commaSeparated,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextMenu: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: commaSeparated,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport var svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport var html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport var svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","import {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nvar valid = /^data[-\\w.:]+$/i\nvar dash = /-[a-z]/g\nvar cap = /[A-Z]/g\n\n/**\n * @param {import('./util/schema.js').Schema} schema\n * @param {string} value\n * @returns {import('./util/info.js').Info}\n */\nexport function find(schema, value) {\n  var normal = normalize(value)\n  var prop = value\n  var Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      prop = datasetToProperty(value)\n    } else {\n      value = datasetToAttribute(value)\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} attribute\n * @returns {string}\n */\nfunction datasetToProperty(attribute) {\n  var value = attribute.slice(5).replace(dash, camelcase)\n  return 'data' + value.charAt(0).toUpperCase() + value.slice(1)\n}\n\n/**\n * @param {string} property\n * @returns {string}\n */\nfunction datasetToAttribute(property) {\n  var value = property.slice(4)\n\n  if (dash.test(value)) {\n    return property\n  }\n\n  value = value.replace(cap, kebab)\n\n  if (value.charAt(0) !== '-') {\n    value = '-' + value\n  }\n\n  return 'data' + value\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","export var hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","import StyleToObject from '../cjs/index.js';\n\n// ensure compatibility with rollup umd build\nexport default StyleToObject.default || StyleToObject;\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n","/**\n * @import {Identifier, Literal, MemberExpression} from 'estree'\n * @import {Jsx, JsxDev, Options, Props} from 'hast-util-to-jsx-runtime'\n * @import {Element, Nodes, Parents, Root, Text} from 'hast'\n * @import {MdxFlowExpressionHast, MdxTextExpressionHast} from 'mdast-util-mdx-expression'\n * @import {MdxJsxFlowElementHast, MdxJsxTextElementHast} from 'mdast-util-mdx-jsx'\n * @import {MdxjsEsmHast} from 'mdast-util-mdxjs-esm'\n * @import {Position} from 'unist'\n * @import {Child, Create, Field, State, Style} from './types.js'\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {name as isIdentifierName} from 'estree-util-is-identifier-name'\nimport {whitespace} from 'hast-util-whitespace'\nimport {find, hastToReact, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport styleToObject from 'style-to-object'\nimport {pointStart} from 'unist-util-position'\nimport {VFileMessage} from 'vfile-message'\n\n// To do: next major: `Object.hasOwn`.\nconst own = {}.hasOwnProperty\n\n/** @type {Map<string, number>} */\nconst emptyMap = new Map()\n\nconst cap = /[A-Z]/g\nconst dashSomething = /-([a-z])/g\n\n// `react-dom` triggers a warning for *any* white space in tables.\n// To follow GFM, `mdast-util-to-hast` injects line endings between elements.\n// Other tools might do so too, but they don’t do here, so we remove all of\n// that.\n\n// See: <https://github.com/facebook/react/pull/7081>.\n// See: <https://github.com/facebook/react/pull/7515>.\n// See: <https://github.com/remarkjs/remark-react/issues/64>.\n// See: <https://github.com/rehypejs/rehype-react/pull/29>.\n// See: <https://github.com/rehypejs/rehype-react/pull/32>.\n// See: <https://github.com/rehypejs/rehype-react/pull/45>.\nconst tableElements = new Set(['table', 'tbody', 'thead', 'tfoot', 'tr'])\n\nconst tableCellElement = new Set(['td', 'th'])\n\nconst docs = 'https://github.com/syntax-tree/hast-util-to-jsx-runtime'\n\n/**\n * Transform a hast tree to preact, react, solid, svelte, vue, etc.,\n * with an automatic JSX runtime.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options} options\n *   Configuration (required).\n * @returns {JSX.Element}\n *   JSX element.\n */\n\nexport function toJsxRuntime(tree, options) {\n  if (!options || options.Fragment === undefined) {\n    throw new TypeError('Expected `Fragment` in options')\n  }\n\n  const filePath = options.filePath || undefined\n  /** @type {Create} */\n  let create\n\n  if (options.development) {\n    if (typeof options.jsxDEV !== 'function') {\n      throw new TypeError(\n        'Expected `jsxDEV` in options when `development: true`'\n      )\n    }\n\n    create = developmentCreate(filePath, options.jsxDEV)\n  } else {\n    if (typeof options.jsx !== 'function') {\n      throw new TypeError('Expected `jsx` in production options')\n    }\n\n    if (typeof options.jsxs !== 'function') {\n      throw new TypeError('Expected `jsxs` in production options')\n    }\n\n    create = productionCreate(filePath, options.jsx, options.jsxs)\n  }\n\n  /** @type {State} */\n  const state = {\n    Fragment: options.Fragment,\n    ancestors: [],\n    components: options.components || {},\n    create,\n    elementAttributeNameCase: options.elementAttributeNameCase || 'react',\n    evaluater: options.createEvaluater ? options.createEvaluater() : undefined,\n    filePath,\n    ignoreInvalidStyle: options.ignoreInvalidStyle || false,\n    passKeys: options.passKeys !== false,\n    passNode: options.passNode || false,\n    schema: options.space === 'svg' ? svg : html,\n    stylePropertyNameCase: options.stylePropertyNameCase || 'dom',\n    tableCellAlignToStyle: options.tableCellAlignToStyle !== false\n  }\n\n  const result = one(state, tree, undefined)\n\n  // JSX element.\n  if (result && typeof result !== 'string') {\n    return result\n  }\n\n  // Text node or something that turned into nothing.\n  return state.create(\n    tree,\n    state.Fragment,\n    {children: result || undefined},\n    undefined\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Nodes} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction one(state, node, key) {\n  if (node.type === 'element') {\n    return element(state, node, key)\n  }\n\n  if (node.type === 'mdxFlowExpression' || node.type === 'mdxTextExpression') {\n    return mdxExpression(state, node)\n  }\n\n  if (node.type === 'mdxJsxFlowElement' || node.type === 'mdxJsxTextElement') {\n    return mdxJsxElement(state, node, key)\n  }\n\n  if (node.type === 'mdxjsEsm') {\n    return mdxEsm(state, node)\n  }\n\n  if (node.type === 'root') {\n    return root(state, node, key)\n  }\n\n  if (node.type === 'text') {\n    return text(state, node)\n  }\n}\n\n/**\n * Handle element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction element(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.tagName.toLowerCase() === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type = findComponentFromName(state, node.tagName, false)\n  const props = createElementProps(state, node)\n  let children = createChildren(state, node)\n\n  if (tableElements.has(node.tagName)) {\n    children = children.filter(function (child) {\n      return typeof child === 'string' ? !whitespace(child) : true\n    })\n  }\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle MDX expression.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxFlowExpressionHast | MdxTextExpressionHast} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxExpression(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    const program = node.data.estree\n    const expression = program.body[0]\n    assert(expression.type === 'ExpressionStatement')\n\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateExpression(expression.expression)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX ESM.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxjsEsmHast} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxEsm(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateProgram(node.data.estree)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX JSX.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxJsxElement(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.name === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type =\n    node.name === null\n      ? state.Fragment\n      : findComponentFromName(state, node.name, true)\n  const props = createJsxElementProps(state, node)\n  const children = createChildren(state, node)\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle root.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Root} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction root(state, node, key) {\n  /** @type {Props} */\n  const props = {}\n\n  addChildren(props, createChildren(state, node))\n\n  return state.create(node, state.Fragment, props, key)\n}\n\n/**\n * Handle text.\n *\n * @param {State} _\n *   Info passed around.\n * @param {Text} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction text(_, node) {\n  return node.value\n}\n\n/**\n * Add `node` to props.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Props} props\n *   Props.\n * @param {unknown} type\n *   Type.\n * @param {Element | MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addNode(state, props, type, node) {\n  // If this is swapped out for a component:\n  if (typeof type !== 'string' && type !== state.Fragment && state.passNode) {\n    props.node = node\n  }\n}\n\n/**\n * Add children to props.\n *\n * @param {Props} props\n *   Props.\n * @param {Array<Child>} children\n *   Children.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChildren(props, children) {\n  if (children.length > 0) {\n    const value = children.length > 1 ? children : children[0]\n\n    if (value) {\n      props.children = value\n    }\n  }\n}\n\n/**\n * @param {string | undefined} _\n *   Path to file.\n * @param {Jsx} jsx\n *   Dynamic.\n * @param {Jsx} jsxs\n *   Static.\n * @returns {Create}\n *   Create a production element.\n */\nfunction productionCreate(_, jsx, jsxs) {\n  return create\n  /** @type {Create} */\n  function create(_, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const fn = isStaticChildren ? jsxs : jsx\n    return key ? fn(type, props, key) : fn(type, props)\n  }\n}\n\n/**\n * @param {string | undefined} filePath\n *   Path to file.\n * @param {JsxDev} jsxDEV\n *   Development.\n * @returns {Create}\n *   Create a development element.\n */\nfunction developmentCreate(filePath, jsxDEV) {\n  return create\n  /** @type {Create} */\n  function create(node, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const point = pointStart(node)\n    return jsxDEV(\n      type,\n      props,\n      key,\n      isStaticChildren,\n      {\n        columnNumber: point ? point.column - 1 : undefined,\n        fileName: filePath,\n        lineNumber: point ? point.line : undefined\n      },\n      undefined\n    )\n  }\n}\n\n/**\n * Create props from an element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current element.\n * @returns {Props}\n *   Props.\n */\nfunction createElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n  /** @type {string | undefined} */\n  let alignValue\n  /** @type {string} */\n  let prop\n\n  for (prop in node.properties) {\n    if (prop !== 'children' && own.call(node.properties, prop)) {\n      const result = createProperty(state, prop, node.properties[prop])\n\n      if (result) {\n        const [key, value] = result\n\n        if (\n          state.tableCellAlignToStyle &&\n          key === 'align' &&\n          typeof value === 'string' &&\n          tableCellElement.has(node.tagName)\n        ) {\n          alignValue = value\n        } else {\n          props[key] = value\n        }\n      }\n    }\n  }\n\n  if (alignValue) {\n    // Assume style is an object.\n    const style = /** @type {Style} */ (props.style || (props.style = {}))\n    style[state.stylePropertyNameCase === 'css' ? 'text-align' : 'textAlign'] =\n      alignValue\n  }\n\n  return props\n}\n\n/**\n * Create props from a JSX element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Current JSX element.\n * @returns {Props}\n *   Props.\n */\nfunction createJsxElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n\n  for (const attribute of node.attributes) {\n    if (attribute.type === 'mdxJsxExpressionAttribute') {\n      if (attribute.data && attribute.data.estree && state.evaluater) {\n        const program = attribute.data.estree\n        const expression = program.body[0]\n        assert(expression.type === 'ExpressionStatement')\n        const objectExpression = expression.expression\n        assert(objectExpression.type === 'ObjectExpression')\n        const property = objectExpression.properties[0]\n        assert(property.type === 'SpreadElement')\n\n        Object.assign(\n          props,\n          state.evaluater.evaluateExpression(property.argument)\n        )\n      } else {\n        crashEstree(state, node.position)\n      }\n    } else {\n      // For JSX, the author is responsible of passing in the correct values.\n      const name = attribute.name\n      /** @type {unknown} */\n      let value\n\n      if (attribute.value && typeof attribute.value === 'object') {\n        if (\n          attribute.value.data &&\n          attribute.value.data.estree &&\n          state.evaluater\n        ) {\n          const program = attribute.value.data.estree\n          const expression = program.body[0]\n          assert(expression.type === 'ExpressionStatement')\n          value = state.evaluater.evaluateExpression(expression.expression)\n        } else {\n          crashEstree(state, node.position)\n        }\n      } else {\n        value = attribute.value === null ? true : attribute.value\n      }\n\n      // Assume a prop.\n      props[name] = /** @type {Props[keyof Props]} */ (value)\n    }\n  }\n\n  return props\n}\n\n/**\n * Create children.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Parents} node\n *   Current element.\n * @returns {Array<Child>}\n *   Children.\n */\nfunction createChildren(state, node) {\n  /** @type {Array<Child>} */\n  const children = []\n  let index = -1\n  /** @type {Map<string, number>} */\n  // Note: test this when Solid doesn’t want to merge my upcoming PR.\n  /* c8 ignore next */\n  const countsByName = state.passKeys ? new Map() : emptyMap\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n    /** @type {string | undefined} */\n    let key\n\n    if (state.passKeys) {\n      const name =\n        child.type === 'element'\n          ? child.tagName\n          : child.type === 'mdxJsxFlowElement' ||\n              child.type === 'mdxJsxTextElement'\n            ? child.name\n            : undefined\n\n      if (name) {\n        const count = countsByName.get(name) || 0\n        key = name + '-' + count\n        countsByName.set(name, count + 1)\n      }\n    }\n\n    const result = one(state, child, key)\n    if (result !== undefined) children.push(result)\n  }\n\n  return children\n}\n\n/**\n * Handle a property.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Field | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(state, prop, value) {\n  const info = find(state.schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  // React only accepts `style` as object.\n  if (info.property === 'style') {\n    let styleObject =\n      typeof value === 'object' ? value : parseStyle(state, String(value))\n\n    if (state.stylePropertyNameCase === 'css') {\n      styleObject = transformStylesToCssCasing(styleObject)\n    }\n\n    return ['style', styleObject]\n  }\n\n  return [\n    state.elementAttributeNameCase === 'react' && info.space\n      ? hastToReact[info.property] || info.property\n      : info.attribute,\n    value\n  ]\n}\n\n/**\n * Parse a CSS declaration to an object.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} value\n *   CSS declarations.\n * @returns {Style}\n *   Properties.\n * @throws\n *   Throws `VFileMessage` when CSS cannot be parsed.\n */\nfunction parseStyle(state, value) {\n  /** @type {Style} */\n  const result = {}\n\n  try {\n    styleToObject(value, replacer)\n  } catch (error) {\n    if (!state.ignoreInvalidStyle) {\n      const cause = /** @type {Error} */ (error)\n      const message = new VFileMessage('Cannot parse `style` attribute', {\n        ancestors: state.ancestors,\n        cause,\n        ruleId: 'style',\n        source: 'hast-util-to-jsx-runtime'\n      })\n      message.file = state.filePath || undefined\n      message.url = docs + '#cannot-parse-style-attribute'\n\n      throw message\n    }\n  }\n\n  return result\n\n  /**\n   * Add a CSS property (normal, so with dashes) to `result` as a DOM CSS\n   * property.\n   *\n   * @param {string} name\n   *   Key.\n   * @param {string} value\n   *   Value\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function replacer(name, value) {\n    let key = name\n\n    if (key.slice(0, 2) !== '--') {\n      if (key.slice(0, 4) === '-ms-') key = 'ms-' + key.slice(4)\n      key = key.replace(dashSomething, toCamel)\n    }\n\n    result[key] = value\n  }\n}\n\n/**\n * Create a JSX name from a string.\n *\n * @param {State} state\n *   To do.\n * @param {string} name\n *   Name.\n * @param {boolean} allowExpression\n *   Allow member expressions and identifiers.\n * @returns {unknown}\n *   To do.\n */\nfunction findComponentFromName(state, name, allowExpression) {\n  /** @type {Identifier | Literal | MemberExpression} */\n  let result\n\n  if (!allowExpression) {\n    result = {type: 'Literal', value: name}\n  } else if (name.includes('.')) {\n    const identifiers = name.split('.')\n    let index = -1\n    /** @type {Identifier | Literal | MemberExpression | undefined} */\n    let node\n\n    while (++index < identifiers.length) {\n      /** @type {Identifier | Literal} */\n      const prop = isIdentifierName(identifiers[index])\n        ? {type: 'Identifier', name: identifiers[index]}\n        : {type: 'Literal', value: identifiers[index]}\n      node = node\n        ? {\n            type: 'MemberExpression',\n            object: node,\n            property: prop,\n            computed: Boolean(index && prop.type === 'Literal'),\n            optional: false\n          }\n        : prop\n    }\n\n    assert(node, 'always a result')\n    result = node\n  } else {\n    result =\n      isIdentifierName(name) && !/^[a-z]/.test(name)\n        ? {type: 'Identifier', name}\n        : {type: 'Literal', value: name}\n  }\n\n  // Only literals can be passed in `components` currently.\n  // No identifiers / member expressions.\n  if (result.type === 'Literal') {\n    const name = /** @type {keyof JSX.IntrinsicElements} */ (result.value)\n\n    return own.call(state.components, name) ? state.components[name] : name\n  }\n\n  // Assume component.\n  if (state.evaluater) {\n    return state.evaluater.evaluateExpression(result)\n  }\n\n  crashEstree(state)\n}\n\n/**\n * @param {State} state\n * @param {Position | undefined} [place]\n * @returns {never}\n */\nfunction crashEstree(state, place) {\n  const message = new VFileMessage(\n    'Cannot handle MDX estrees without `createEvaluater`',\n    {\n      ancestors: state.ancestors,\n      place,\n      ruleId: 'mdx-estree',\n      source: 'hast-util-to-jsx-runtime'\n    }\n  )\n  message.file = state.filePath || undefined\n  message.url = docs + '#cannot-handle-mdx-estrees-without-createevaluater'\n\n  throw message\n}\n\n/**\n * Transform a DOM casing style object to a CSS casing style object.\n *\n * @param {Style} domCasing\n * @returns {Style}\n */\nfunction transformStylesToCssCasing(domCasing) {\n  /** @type {Style} */\n  const cssCasing = {}\n  /** @type {string} */\n  let from\n\n  for (from in domCasing) {\n    if (own.call(domCasing, from)) {\n      cssCasing[transformStyleToCssCasing(from)] = domCasing[from]\n    }\n  }\n\n  return cssCasing\n}\n\n/**\n * Transform a DOM casing style field to a CSS casing style field.\n *\n * @param {string} from\n * @returns {string}\n */\nfunction transformStyleToCssCasing(from) {\n  let to = from.replace(cap, toDash)\n  // Handle `ms-xxx` -> `-ms-xxx`.\n  if (to.slice(0, 3) === 'ms-') to = '-' + to\n  return to\n}\n\n/**\n * Make `$1` capitalized.\n *\n * @param {string} _\n *   Whatever.\n * @param {string} $1\n *   Single ASCII alphabetical.\n * @returns {string}\n *   Capitalized `$1`.\n */\nfunction toCamel(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * Make `$0` dash cased.\n *\n * @param {string} $0\n *   Capitalized ASCII leter.\n * @returns {string}\n *   Dash and lower letter.\n */\nfunction toDash($0) {\n  return '-' + $0.toLowerCase()\n}\n","/**\n * @typedef {Object} StringifyOptions\n * @property {boolean} [padLeft=true] Whether to pad a space before a token (`boolean`, default: `true`).\n * @property {boolean} [padRight=false] Whether to pad a space after a token (`boolean`, default: `false`).\n */\n\n/**\n * Parse comma separated tokens to an array.\n *\n * @param {string} value\n * @returns {Array.<string>}\n */\nexport function parse(value) {\n  /** @type {Array.<string>} */\n  var tokens = []\n  var input = String(value || '')\n  var index = input.indexOf(',')\n  var start = 0\n  /** @type {boolean} */\n  var end\n  /** @type {string} */\n  var token\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings to comma separated tokens.\n *\n * @param {Array.<string|number>} values\n * @param {StringifyOptions} [options]\n * @returns {string}\n */\nexport function stringify(values, options) {\n  var settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  if (values[values.length - 1] === '') {\n    values = values.concat('')\n  }\n\n  return values\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space separated tokens to an array of strings.\n *\n * @param {string} value Space separated tokens\n * @returns {Array.<string>} Tokens\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated tokens.\n *\n * @param {Array.<string|number>} values Tokens\n * @returns {string} Space separated tokens\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * HTML URL properties.\n *\n * Each key is a property name and each value is a list of tag names it applies\n * to or `null` if it applies to all elements.\n *\n * @type {Record<string, Array<string> | null>}\n */\nexport const urlAttributes = {\n  action: ['form'],\n  cite: ['blockquote', 'del', 'ins', 'q'],\n  data: ['object'],\n  formAction: ['button', 'input'],\n  href: ['a', 'area', 'base', 'link'],\n  icon: ['menuitem'],\n  itemId: null,\n  manifest: ['html'],\n  ping: ['a', 'area'],\n  poster: ['video'],\n  src: [\n    'audio',\n    'embed',\n    'iframe',\n    'img',\n    'input',\n    'script',\n    'source',\n    'track',\n    'video'\n  ]\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {undefined}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {Array<unknown>} */\n  let parameters\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n  remove = remove > 0 ? remove : 0\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove)\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n  return items\n}\n","/**\n * Some of the internal operations of micromark do lots of editing\n * operations on very large arrays. This runs into problems with two\n * properties of most circa-2020 JavaScript interpreters:\n *\n *  - Array-length modifications at the high end of an array (push/pop) are\n *    expected to be common and are implemented in (amortized) time\n *    proportional to the number of elements added or removed, whereas\n *    other operations (shift/unshift and splice) are much less efficient.\n *  - Function arguments are passed on the stack, so adding tens of thousands\n *    of elements to an array with `arr.push[...newElements]` will frequently\n *    cause stack overflows. (see <https://stackoverflow.com/questions/22123769/rangeerror-maximum-call-stack-size-exceeded-why>)\n *\n * SpliceBuffers are an implementation of gap buffers, which are a\n * generalization of the \"queue made of two stacks\" idea. The splice buffer\n * maintains a cursor, and moving the cursor has cost proportional to the\n * distance the cursor moves, but inserting, deleting, or splicing in\n * new information at the cursor is as efficient as the push/pop operation.\n * This allows for an efficient sequence of splices (or pushes, pops, shifts,\n * or unshifts) as long such edits happen at the same part of the array or\n * generally sweep through the array from the beginning to the end.\n *\n * The interface for splice buffers also supports large numbers of inputs by\n * passing a single array argument rather passing multiple arguments on the\n * function call stack.\n *\n * @template T\n *   Item type.\n */\nexport class SpliceBuffer {\n  /**\n   * @param {ReadonlyArray<T> | null | undefined} [initial]\n   *   Initial items (optional).\n   * @returns\n   *   Splice buffer.\n   */\n  constructor(initial) {\n    /** @type {Array<T>} */\n    this.left = initial ? [...initial] : [];\n    /** @type {Array<T>} */\n    this.right = [];\n  }\n\n  /**\n   * Array access;\n   * does not move the cursor.\n   *\n   * @param {number} index\n   *   Index.\n   * @return {T}\n   *   Item.\n   */\n  get(index) {\n    if (index < 0 || index >= this.left.length + this.right.length) {\n      throw new RangeError('Cannot access index `' + index + '` in a splice buffer of size `' + (this.left.length + this.right.length) + '`');\n    }\n    if (index < this.left.length) return this.left[index];\n    return this.right[this.right.length - index + this.left.length - 1];\n  }\n\n  /**\n   * The length of the splice buffer, one greater than the largest index in the\n   * array.\n   */\n  get length() {\n    return this.left.length + this.right.length;\n  }\n\n  /**\n   * Remove and return `list[0]`;\n   * moves the cursor to `0`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  shift() {\n    this.setCursor(0);\n    return this.right.pop();\n  }\n\n  /**\n   * Slice the buffer to get an array;\n   * does not move the cursor.\n   *\n   * @param {number} start\n   *   Start.\n   * @param {number | null | undefined} [end]\n   *   End (optional).\n   * @returns {Array<T>}\n   *   Array of items.\n   */\n  slice(start, end) {\n    /** @type {number} */\n    const stop = end === null || end === undefined ? Number.POSITIVE_INFINITY : end;\n    if (stop < this.left.length) {\n      return this.left.slice(start, stop);\n    }\n    if (start > this.left.length) {\n      return this.right.slice(this.right.length - stop + this.left.length, this.right.length - start + this.left.length).reverse();\n    }\n    return this.left.slice(start).concat(this.right.slice(this.right.length - stop + this.left.length).reverse());\n  }\n\n  /**\n   * Mimics the behavior of Array.prototype.splice() except for the change of\n   * interface necessary to avoid segfaults when patching in very large arrays.\n   *\n   * This operation moves cursor is moved to `start` and results in the cursor\n   * placed after any inserted items.\n   *\n   * @param {number} start\n   *   Start;\n   *   zero-based index at which to start changing the array;\n   *   negative numbers count backwards from the end of the array and values\n   *   that are out-of bounds are clamped to the appropriate end of the array.\n   * @param {number | null | undefined} [deleteCount=0]\n   *   Delete count (default: `0`);\n   *   maximum number of elements to delete, starting from start.\n   * @param {Array<T> | null | undefined} [items=[]]\n   *   Items to include in place of the deleted items (default: `[]`).\n   * @return {Array<T>}\n   *   Any removed items.\n   */\n  splice(start, deleteCount, items) {\n    /** @type {number} */\n    const count = deleteCount || 0;\n    this.setCursor(Math.trunc(start));\n    const removed = this.right.splice(this.right.length - count, Number.POSITIVE_INFINITY);\n    if (items) chunkedPush(this.left, items);\n    return removed.reverse();\n  }\n\n  /**\n   * Remove and return the highest-numbered item in the array, so\n   * `list[list.length - 1]`;\n   * Moves the cursor to `length`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  pop() {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    return this.left.pop();\n  }\n\n  /**\n   * Inserts a single item to the high-numbered side of the array;\n   * moves the cursor to `length`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  push(item) {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    this.left.push(item);\n  }\n\n  /**\n   * Inserts many items to the high-numbered side of the array.\n   * Moves the cursor to `length`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  pushMany(items) {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    chunkedPush(this.left, items);\n  }\n\n  /**\n   * Inserts a single item to the low-numbered side of the array;\n   * Moves the cursor to `0`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshift(item) {\n    this.setCursor(0);\n    this.right.push(item);\n  }\n\n  /**\n   * Inserts many items to the low-numbered side of the array;\n   * moves the cursor to `0`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshiftMany(items) {\n    this.setCursor(0);\n    chunkedPush(this.right, items.reverse());\n  }\n\n  /**\n   * Move the cursor to a specific position in the array. Requires\n   * time proportional to the distance moved.\n   *\n   * If `n < 0`, the cursor will end up at the beginning.\n   * If `n > length`, the cursor will end up at the end.\n   *\n   * @param {number} n\n   *   Position.\n   * @return {undefined}\n   *   Nothing.\n   */\n  setCursor(n) {\n    if (n === this.left.length || n > this.left.length && this.right.length === 0 || n < 0 && this.left.length === 0) return;\n    if (n < this.left.length) {\n      // Move cursor to the this.left\n      const removed = this.left.splice(n, Number.POSITIVE_INFINITY);\n      chunkedPush(this.right, removed.reverse());\n    } else {\n      // Move cursor to the this.right\n      const removed = this.right.splice(this.left.length + this.right.length - n, Number.POSITIVE_INFINITY);\n      chunkedPush(this.left, removed.reverse());\n    }\n  }\n}\n\n/**\n * Avoid stack overflow by pushing items onto the stack in segments\n *\n * @template T\n *   Item type.\n * @param {Array<T>} list\n *   List to inject into.\n * @param {ReadonlyArray<T>} right\n *   Items to inject.\n * @return {undefined}\n *   Nothing.\n */\nfunction chunkedPush(list, right) {\n  /** @type {number} */\n  let chunkStart = 0;\n  if (right.length < 10000) {\n    list.push(...right);\n  } else {\n    while (chunkStart < right.length) {\n      list.push(...right.slice(chunkStart, chunkStart + 10000));\n      chunkStart += 10000;\n    }\n  }\n}","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n */\n\nimport { splice } from 'micromark-util-chunked';\nimport { SpliceBuffer } from './lib/splice-buffer.js';\n\n// Hidden API exposed for testing.\nexport { SpliceBuffer } from './lib/splice-buffer.js';\n\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} eventsArray\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */\n// eslint-disable-next-line complexity\nexport function subtokenize(eventsArray) {\n  /** @type {Record<string, number>} */\n  const jumps = {};\n  let index = -1;\n  /** @type {Event} */\n  let event;\n  /** @type {number | undefined} */\n  let lineIndex;\n  /** @type {number} */\n  let otherIndex;\n  /** @type {Event} */\n  let otherEvent;\n  /** @type {Array<Event>} */\n  let parameters;\n  /** @type {Array<Event>} */\n  let subevents;\n  /** @type {boolean | undefined} */\n  let more;\n  const events = new SpliceBuffer(eventsArray);\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index];\n    }\n    event = events.get(index);\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (index && event[1].type === \"chunkFlow\" && events.get(index - 1)[1].type === \"listItemPrefix\") {\n      subevents = event[1]._tokenizer.events;\n      otherIndex = 0;\n      if (otherIndex < subevents.length && subevents[otherIndex][1].type === \"lineEndingBlank\") {\n        otherIndex += 2;\n      }\n      if (otherIndex < subevents.length && subevents[otherIndex][1].type === \"content\") {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === \"content\") {\n            break;\n          }\n          if (subevents[otherIndex][1].type === \"chunkText\") {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true;\n            otherIndex++;\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index));\n        index = jumps[index];\n        more = true;\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index;\n      lineIndex = undefined;\n      while (otherIndex--) {\n        otherEvent = events.get(otherIndex);\n        if (otherEvent[1].type === \"lineEnding\" || otherEvent[1].type === \"lineEndingBlank\") {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events.get(lineIndex)[1].type = \"lineEndingBlank\";\n            }\n            otherEvent[1].type = \"lineEnding\";\n            lineIndex = otherIndex;\n          }\n        } else {\n          break;\n        }\n      }\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events.get(lineIndex)[1].start);\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index);\n        parameters.unshift(event);\n        events.splice(lineIndex, index - lineIndex + 1, parameters);\n      }\n    }\n  }\n\n  // The changes to the `events` buffer must be copied back into the eventsArray\n  splice(eventsArray, 0, Number.POSITIVE_INFINITY, events.slice(0));\n  return !more;\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {SpliceBuffer<Event>} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\nfunction subcontent(events, eventIndex) {\n  const token = events.get(eventIndex)[1];\n  const context = events.get(eventIndex)[2];\n  let startPosition = eventIndex - 1;\n  /** @type {Array<number>} */\n  const startPositions = [];\n  const tokenizer = token._tokenizer || context.parser[token.contentType](token.start);\n  const childEvents = tokenizer.events;\n  /** @type {Array<[number, number]>} */\n  const jumps = [];\n  /** @type {Record<string, number>} */\n  const gaps = {};\n  /** @type {Array<Chunk>} */\n  let stream;\n  /** @type {Token | undefined} */\n  let previous;\n  let index = -1;\n  /** @type {Token | undefined} */\n  let current = token;\n  let adjust = 0;\n  let start = 0;\n  const breaks = [start];\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events.get(++startPosition)[1] !== current) {\n      // Empty.\n    }\n    startPositions.push(startPosition);\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current);\n      if (!current.next) {\n        stream.push(null);\n      }\n      if (previous) {\n        tokenizer.defineSkip(current.start);\n      }\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true;\n      }\n      tokenizer.write(stream);\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined;\n      }\n    }\n\n    // Unravel the next token.\n    previous = current;\n    current = current.next;\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token;\n  while (++index < childEvents.length) {\n    if (\n    // Find a void token that includes a break.\n    childEvents[index][0] === 'exit' && childEvents[index - 1][0] === 'enter' && childEvents[index][1].type === childEvents[index - 1][1].type && childEvents[index][1].start.line !== childEvents[index][1].end.line) {\n      start = index + 1;\n      breaks.push(start);\n      // Help GC.\n      current._tokenizer = undefined;\n      current.previous = undefined;\n      current = current.next;\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = [];\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined;\n    current.previous = undefined;\n  } else {\n    breaks.pop();\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length;\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1]);\n    const start = startPositions.pop();\n    jumps.push([start, start + slice.length - 1]);\n    events.splice(start, 2, slice);\n  }\n  jumps.reverse();\n  index = -1;\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1];\n    adjust += jumps[index][1] - jumps[index][0] - 1;\n  }\n  return gaps;\n}","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Handles} Handles\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {Array<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {undefined}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n * @param {Array<unknown>} list\n * @returns {undefined}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {Array<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   A single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {undefined}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownSpace} from 'micromark-util-character'\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n    return ok(code)\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n  let previous\n  return contentStart\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n    if (previous) {\n      previous.next = token\n    }\n    previous = token\n    return data(code)\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    }\n\n    // Data.\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\nexport const document = {\n  tokenize: initializeDocument\n}\n\n/** @type {Construct} */\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext | undefined} */\n  let childFlow\n  /** @type {Token | undefined} */\n  let childToken\n  /** @type {number} */\n  let lineStartOffset\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    }\n\n    // Done.\n    return checkNewContainers(code)\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    continued++\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n      if (childFlow) {\n        closeFlow()\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      let index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n    return start(code)\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    }\n\n    // Check if there is a new container.\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState])\n    // Try another.\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow'))\n      // Get ready for the next line.\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n    effects.consume(code)\n    return flowContinue\n  }\n\n  /**\n   * @param {Token} token\n   * @param {boolean | undefined} [eof]\n   * @returns {undefined}\n   */\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream)\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset &&\n          // …and either is not ended yet…\n          (!childFlow.events[index][1].end ||\n            // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean | undefined} */\n      let seen\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n          seen = true\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n    }\n  }\n\n  /**\n   * @param {number} size\n   * @returns {undefined}\n   */\n  function exitContainers(size) {\n    let index = stack.length\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n    stack.length = size\n  }\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code) ? factorySpace(effects, after, \"linePrefix\")(code) : after(code);\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { subtokenize } from 'micromark-util-subtokenize';\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n};\n\n/** @type {Construct} */\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n};\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous;\n  return chunkStart;\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    effects.enter(\"content\");\n    previous = effects.enter(\"chunkContent\", {\n      contentType: \"content\"\n    });\n    return chunkInside(code);\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === null) {\n      return contentEnd(code);\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(continuationConstruct, contentContinue, contentEnd)(code);\n    }\n\n    // Data.\n    effects.consume(code);\n    return chunkInside;\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit(\"chunkContent\");\n    effects.exit(\"content\");\n    return ok(code);\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    effects.consume(code);\n    effects.exit(\"chunkContent\");\n    previous.next = effects.enter(\"chunkContent\", {\n      contentType: \"content\",\n      previous\n    });\n    previous = previous.next;\n    return chunkInside;\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this;\n  return startLookahead;\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    effects.exit(\"chunkContent\");\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, prefixed, \"linePrefix\");\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n\n    // Always populated by defaults.\n\n    const tail = self.events[self.events.length - 1];\n    if (!self.parser.constructs.disable.null.includes('codeIndented') && tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4) {\n      return ok(code);\n    }\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding,\n    // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n\n/**\n * @param {'string' | 'text'} field\n * @returns {InitialConstruct}\n */\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      }\n\n      // Data.\n      effects.consume(code)\n      return data\n    }\n\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n      const list = constructs[code]\n      let index = -1\n      if (list) {\n        // Always populated by defaults.\n\n        while (++index < list.length) {\n          const item = list[index]\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n      return false\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n * @returns {Resolver}\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number | undefined} */\n    let enter\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n        enter = undefined\n      }\n    }\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean | undefined} */\n      let tabs\n      while (index--) {\n        const chunk = chunks[index]\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n          if (bufferIndex) break\n          bufferIndex = -1\n        }\n        // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n      eventIndex++\n    }\n  }\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {Array<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenType} TokenType\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * @callback Restore\n * @returns {undefined}\n *\n * @typedef Info\n * @property {Restore} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {undefined}\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n  let chunks = []\n  /** @type {Array<Token>} */\n  let stack = []\n  /** @type {boolean | undefined} */\n  let consumed = true\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n\n  /**\n   * The state function.\n   *\n   * @type {State | undefined}\n   */\n  let state = initialize.tokenize.call(context, effects)\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n  return context\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main()\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n    addResult(initialize, 0)\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {line, column, offset, _index, _bufferIndex} = point\n    return {\n      line,\n      column,\n      offset,\n      _index,\n      _bufferIndex\n    }\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {undefined}\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index]\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {undefined}\n   */\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++\n\n      // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code\n\n    // Mark as consumed.\n    consumed = true\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   */\n  function constructFactory(onreturn, fields) {\n    return hook\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | Construct | ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State | undefined} [bogusState]\n     * @returns {State}\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n      let constructIndex\n      /** @type {Construct} */\n      let currentConstruct\n      /** @type {Info} */\n      let info\n      return Array.isArray(constructs) /* c8 ignore next 1 */\n        ? handleListOfConstructs(constructs)\n        : 'tokenize' in constructs\n        ? // @ts-expect-error Looks like a construct.\n          handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n      function handleMapOfConstructs(map) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n        if (list.length === 0) {\n          return bogusState\n        }\n        return handleConstruct(list[constructIndex])\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n      function handleConstruct(construct) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          // Always populated by defaults.\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        consumed = true\n        info.restore()\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n        return bogusState\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {undefined}\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n\n    /**\n     * Restore state.\n     *\n     * @returns {undefined}\n     */\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {undefined}\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'end' | 'start'>} token\n * @returns {Array<Chunk>}\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n  let view\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n    if (startBufferIndex > -1) {\n      const head = view[0]\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex)\n      } else {\n        view.shift()\n      }\n    }\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n  return view\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean | undefined} [expandTabs=false]\n * @returns {string}\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {boolean | undefined} */\n  let atTab\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n    let value\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n        case -4: {\n          value = '\\n'\n          break\n        }\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n    atTab = chunk === -2\n    result.push(value)\n  }\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"thematicBreak\");\n    // To do: parse indent like `markdown-rs`.\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    marker = code;\n    return atBreak(code);\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter(\"thematicBreakSequence\");\n      return sequence(code);\n    }\n    if (size >= 3 && (code === null || markdownLineEnding(code))) {\n      effects.exit(\"thematicBreak\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code);\n      size++;\n      return sequence;\n    }\n    effects.exit(\"thematicBreakSequence\");\n    return markdownSpace(code) ? factorySpace(effects, atBreak, \"whitespace\")(code) : atBreak(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiDigit, markdownSpace } from 'micromark-util-character';\nimport { blankLine } from './blank-line.js';\nimport { thematicBreak } from './thematic-break.js';\n\n/** @type {Construct} */\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n};\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n};\n\n/** @type {Construct} */\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n};\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this;\n  const tail = self.events[self.events.length - 1];\n  let initialSize = tail && tail[1].type === \"linePrefix\" ? tail[2].sliceSerialize(tail[1], true).length : 0;\n  let size = 0;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    const kind = self.containerState.type || (code === 42 || code === 43 || code === 45 ? \"listUnordered\" : \"listOrdered\");\n    if (kind === \"listUnordered\" ? !self.containerState.marker || code === self.containerState.marker : asciiDigit(code)) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind;\n        effects.enter(kind, {\n          _container: true\n        });\n      }\n      if (kind === \"listUnordered\") {\n        effects.enter(\"listItemPrefix\");\n        return code === 42 || code === 45 ? effects.check(thematicBreak, nok, atMarker)(code) : atMarker(code);\n      }\n      if (!self.interrupt || code === 49) {\n        effects.enter(\"listItemPrefix\");\n        effects.enter(\"listItemValue\");\n        return inside(code);\n      }\n    }\n    return nok(code);\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code);\n      return inside;\n    }\n    if ((!self.interrupt || size < 2) && (self.containerState.marker ? code === self.containerState.marker : code === 41 || code === 46)) {\n      effects.exit(\"listItemValue\");\n      return atMarker(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    effects.enter(\"listItemMarker\");\n    effects.consume(code);\n    effects.exit(\"listItemMarker\");\n    self.containerState.marker = self.containerState.marker || code;\n    return effects.check(blankLine,\n    // Can’t be empty when interrupting.\n    self.interrupt ? nok : onBlank, effects.attempt(listItemPrefixWhitespaceConstruct, endOfPrefix, otherPrefix));\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true;\n    initialSize++;\n    return endOfPrefix(code);\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter(\"listItemPrefixWhitespace\");\n      effects.consume(code);\n      effects.exit(\"listItemPrefixWhitespace\");\n      return endOfPrefix;\n    }\n    return nok(code);\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    self.containerState.size = initialSize + self.sliceSerialize(effects.exit(\"listItemPrefix\"), true).length;\n    return ok(code);\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this;\n  self.containerState._closeFlow = undefined;\n  return effects.check(blankLine, onBlank, notBlank);\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.furtherBlankLines = self.containerState.furtherBlankLines || self.containerState.initialBlankLine;\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(effects, ok, \"listItemIndent\", self.containerState.size + 1)(code);\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined;\n      self.containerState.initialBlankLine = undefined;\n      return notInCurrentItem(code);\n    }\n    self.containerState.furtherBlankLines = undefined;\n    self.containerState.initialBlankLine = undefined;\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code);\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true;\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined;\n    // Always populated by defaults.\n\n    return factorySpace(effects, effects.attempt(list, ok, nok), \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this;\n  return factorySpace(effects, afterPrefix, \"listItemIndent\", self.containerState.size + 1);\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"listItemIndent\" && tail[2].sliceSerialize(tail[1], true).length === self.containerState.size ? ok(code) : nok(code);\n  }\n}\n\n/**\n * @type {Exiter}\n * @this {TokenizeContext}\n */\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type);\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this;\n\n  // Always populated by defaults.\n\n  return factorySpace(effects, afterPrefix, \"listItemPrefixWhitespace\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4 + 1);\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return !markdownSpace(code) && tail && tail[1].type === \"listItemPrefixWhitespace\" ? ok(code) : nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState;\n      if (!state.open) {\n        effects.enter(\"blockQuote\", {\n          _container: true\n        });\n        state.open = true;\n      }\n      effects.enter(\"blockQuotePrefix\");\n      effects.enter(\"blockQuoteMarker\");\n      effects.consume(code);\n      effects.exit(\"blockQuoteMarker\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter(\"blockQuotePrefixWhitespace\");\n      effects.consume(code);\n      effects.exit(\"blockQuotePrefixWhitespace\");\n      effects.exit(\"blockQuotePrefix\");\n      return ok;\n    }\n    effects.exit(\"blockQuotePrefix\");\n    return ok(code);\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this;\n  return contStart;\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n\n      return factorySpace(effects, contBefore, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n    }\n    return contBefore(code);\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code);\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit(\"blockQuote\");\n}","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return enclosedBefore\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return raw(code)\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return enclosed(code)\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return enclosedBefore(code)\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? enclosedEscape : enclosed\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return enclosed\n    }\n    return enclosed(code)\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (\n      !balance &&\n      (code === null || code === 41 || markdownLineEndingOrSpace(code))\n    ) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code)\n      balance++\n      return raw\n    }\n    if (code === 41) {\n      effects.consume(code)\n      balance--\n      return raw\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? rawEscape : raw\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return raw\n    }\n    return raw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (\n      size > 999 ||\n      code === null ||\n      code === 91 ||\n      (code === 93 && !seen) ||\n      // To do: remove in the future once we’ve switched from\n      // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n      // which doesn’t need this.\n      // Hidden footnotes hook.\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return labelInside(code)\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    if (!seen) seen = !markdownSpace(code)\n    return code === 92 ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n    return labelInside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      marker = code === 40 ? 41 : code\n      return begin\n    }\n    return nok(code)\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    return atBreak(code)\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return begin(marker)\n    }\n    if (code === null) {\n      return nok(code)\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atBreak, 'linePrefix')\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return inside(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? escape : inside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return inside\n    }\n    return inside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns {State}\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value\n      // Collapse markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ')\n      // Trim.\n      .replace(/^ | $/g, '')\n      // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factorySpace } from 'micromark-factory-space';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n};\n\n/** @type {Construct} */\nconst titleBefore = {\n  tokenize: tokenizeTitleBefore,\n  partial: true\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this;\n  /** @type {string} */\n  let identifier;\n  return start;\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter(\"definition\");\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n\n    return factoryLabel.call(self, effects, labelAfter,\n    // Note: we don’t need to reset the way `markdown-rs` does.\n    nok, \"definitionLabel\", \"definitionLabelMarker\", \"definitionLabelString\")(code);\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1));\n    if (code === 58) {\n      effects.enter(\"definitionMarker\");\n      effects.consume(code);\n      effects.exit(\"definitionMarker\");\n      return markerAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, destinationBefore)(code) : destinationBefore(code);\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(effects, destinationAfter,\n    // Note: we don’t need to reset the way `markdown-rs` does.\n    nok, \"definitionDestination\", \"definitionDestinationLiteral\", \"definitionDestinationLiteralMarker\", \"definitionDestinationRaw\", \"definitionDestinationString\")(code);\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code);\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code) ? factorySpace(effects, afterWhitespace, \"whitespace\")(code) : afterWhitespace(code);\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"definition\");\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier);\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code);\n    }\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore;\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, beforeMarker)(code) : nok(code);\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(effects, titleAfter, nok, \"definitionTitle\", \"definitionTitleMarker\", \"definitionTitleString\")(code);\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code) ? factorySpace(effects, titleAfterOptionalWhitespace, \"whitespace\")(code) : titleAfterOptionalWhitespace(code);\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n};\n\n/** @type {Construct} */\nconst furtherStart = {\n  tokenize: tokenizeFurtherStart,\n  partial: true\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n\n    effects.enter(\"codeIndented\");\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, \"linePrefix\", 4 + 1)(code);\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4 ? atBreak(code) : nok(code);\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === null) {\n      return after(code);\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code);\n    }\n    effects.enter(\"codeFlowValue\");\n    return inside(code);\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFlowValue\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return inside;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit(\"codeIndented\");\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this;\n  return furtherStart;\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return furtherStart;\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, \"linePrefix\", 4 + 1)(code);\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4 ? ok(code) : markdownLineEnding(code) ? furtherStart(code) : nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nimport { splice } from 'micromark-util-chunked';\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n};\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2;\n  let contentStart = 3;\n  /** @type {Token} */\n  let content;\n  /** @type {Token} */\n  let text;\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === \"whitespace\") {\n    contentStart += 2;\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (contentEnd - 2 > contentStart && events[contentEnd][1].type === \"whitespace\") {\n    contentEnd -= 2;\n  }\n  if (events[contentEnd][1].type === \"atxHeadingSequence\" && (contentStart === contentEnd - 1 || contentEnd - 4 > contentStart && events[contentEnd - 2][1].type === \"whitespace\")) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4;\n  }\n  if (contentEnd > contentStart) {\n    content = {\n      type: \"atxHeadingText\",\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    };\n    text = {\n      type: \"chunkText\",\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: \"text\"\n    };\n    splice(events, contentStart, contentEnd - contentStart + 1, [['enter', content, context], ['enter', text, context], ['exit', text, context], ['exit', content, context]]);\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0;\n  return start;\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter(\"atxHeading\");\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"atxHeadingSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code);\n      return sequenceOpen;\n    }\n\n    // Always at least one `#`.\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"atxHeadingSequence\");\n      return atBreak(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === 35) {\n      effects.enter(\"atxHeadingSequence\");\n      return sequenceFurther(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"atxHeading\");\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code);\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, \"whitespace\")(code);\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter(\"atxHeadingText\");\n    return data(code);\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === 35) {\n      effects.consume(code);\n      return sequenceFurther;\n    }\n    effects.exit(\"atxHeadingSequence\");\n    return atBreak(code);\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"atxHeadingText\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n};\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length;\n  /** @type {number | undefined} */\n  let content;\n  /** @type {number | undefined} */\n  let text;\n  /** @type {number | undefined} */\n  let definition;\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === \"content\") {\n        content = index;\n        break;\n      }\n      if (events[index][1].type === \"paragraph\") {\n        text = index;\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === \"content\") {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1);\n      }\n      if (!definition && events[index][1].type === \"definition\") {\n        definition = index;\n      }\n    }\n  }\n  const heading = {\n    type: \"setextHeading\",\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  };\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = \"setextHeadingText\";\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context]);\n    events.splice(definition + 1, 0, ['exit', events[content][1], context]);\n    events[content][1].end = Object.assign({}, events[definition][1].end);\n  } else {\n    events[content][1] = heading;\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context]);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length;\n    /** @type {boolean | undefined} */\n    let paragraph;\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (self.events[index][1].type !== \"lineEnding\" && self.events[index][1].type !== \"linePrefix\" && self.events[index][1].type !== \"content\") {\n        paragraph = self.events[index][1].type === \"paragraph\";\n        break;\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter(\"setextHeadingLine\");\n      marker = code;\n      return before(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"setextHeadingLineSequence\");\n    return inside(code);\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return inside;\n    }\n    effects.exit(\"setextHeadingLineSequence\");\n    return markdownSpace(code) ? factorySpace(effects, after, \"lineSuffix\")(code) : after(code);\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"setextHeadingLine\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n}","/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { asciiAlpha, asciiAlphanumeric, markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nimport { htmlBlockNames, htmlRawNames } from 'micromark-util-html-tag-name';\nimport { blankLine } from './blank-line.js';\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n};\n\n/** @type {Construct} */\nconst blankLineBefore = {\n  tokenize: tokenizeBlankLineBefore,\n  partial: true\n};\nconst nonLazyContinuationStart = {\n  tokenize: tokenizeNonLazyContinuationStart,\n  partial: true\n};\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length;\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === \"htmlFlow\") {\n      break;\n    }\n  }\n  if (index > 1 && events[index - 2][1].type === \"linePrefix\") {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start;\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start;\n    // Remove the line prefix.\n    events.splice(index - 2, 2);\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this;\n  /** @type {number} */\n  let marker;\n  /** @type {boolean} */\n  let closingTag;\n  /** @type {string} */\n  let buffer;\n  /** @type {number} */\n  let index;\n  /** @type {Code} */\n  let markerB;\n  return start;\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code);\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"htmlFlow\");\n    effects.enter(\"htmlFlowData\");\n    effects.consume(code);\n    return open;\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      closingTag = true;\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      marker = 3;\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      marker = 2;\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      marker = 5;\n      index = 0;\n      return cdataOpenInside;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      marker = 4;\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = \"CDATA[\";\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code);\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation;\n      }\n      return cdataOpenInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (code === null || code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      const slash = code === 47;\n      const name = buffer.toLowerCase();\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = 1;\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = 6;\n        if (slash) {\n          effects.consume(code);\n          return basicSelfClosing;\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      marker = 7;\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line] ? nok(code) : closingTag ? completeClosingTagAfter(code) : completeAttributeNameBefore(code);\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      buffer += String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code);\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeClosingTagAfter;\n    }\n    return completeEnd(code);\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return completeEnd;\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameBefore;\n    }\n    return completeEnd(code);\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    return completeAttributeNameAfter(code);\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameAfter;\n    }\n    return completeAttributeNameBefore(code);\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      markerB = code;\n      return completeAttributeValueQuoted;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    return completeAttributeValueUnquoted(code);\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code);\n      markerB = null;\n      return completeAttributeValueQuotedAfter;\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueQuoted;\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 47 || code === 60 || code === 61 || code === 62 || code === 96 || markdownLineEndingOrSpace(code)) {\n      return completeAttributeNameAfter(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueUnquoted;\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === 45 && marker === 2) {\n      effects.consume(code);\n      return continuationCommentInside;\n    }\n    if (code === 60 && marker === 1) {\n      effects.consume(code);\n      return continuationRawTagOpen;\n    }\n    if (code === 62 && marker === 4) {\n      effects.consume(code);\n      return continuationClose;\n    }\n    if (code === 63 && marker === 3) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    if (code === 93 && marker === 5) {\n      effects.consume(code);\n      return continuationCdataInside;\n    }\n    if (markdownLineEnding(code) && (marker === 6 || marker === 7)) {\n      effects.exit(\"htmlFlowData\");\n      return effects.check(blankLineBefore, continuationAfter, continuationStart)(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"htmlFlowData\");\n      return continuationStart(code);\n    }\n    effects.consume(code);\n    return continuation;\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(nonLazyContinuationStart, continuationStartNonLazy, continuationAfter)(code);\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return continuationBefore;\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return continuationStart(code);\n    }\n    effects.enter(\"htmlFlowData\");\n    return continuation(code);\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code);\n      buffer = '';\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === 62) {\n      const name = buffer.toLowerCase();\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code);\n        return continuationClose;\n      }\n      return continuation(code);\n    }\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code);\n      // @ts-expect-error: not null.\n      buffer += String.fromCharCode(code);\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return continuationClose;\n    }\n\n    // More dashes.\n    if (code === 45 && marker === 2) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"htmlFlowData\");\n      return continuationAfter(code);\n    }\n    effects.consume(code);\n    return continuationClose;\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit(\"htmlFlow\");\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start;\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return effects.attempt(blankLine, ok, nok);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  tokenize: tokenizeNonLazyContinuation,\n  partial: true\n};\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this;\n  /** @type {Construct} */\n  const closeStart = {\n    tokenize: tokenizeCloseStart,\n    partial: true\n  };\n  let initialPrefix = 0;\n  let sizeOpen = 0;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code);\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    const tail = self.events[self.events.length - 1];\n    initialPrefix = tail && tail[1].type === \"linePrefix\" ? tail[2].sliceSerialize(tail[1], true).length : 0;\n    marker = code;\n    effects.enter(\"codeFenced\");\n    effects.enter(\"codeFencedFence\");\n    effects.enter(\"codeFencedFenceSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++;\n      effects.consume(code);\n      return sequenceOpen;\n    }\n    if (sizeOpen < 3) {\n      return nok(code);\n    }\n    effects.exit(\"codeFencedFenceSequence\");\n    return markdownSpace(code) ? factorySpace(effects, infoBefore, \"whitespace\")(code) : infoBefore(code);\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFencedFence\");\n      return self.interrupt ? ok(code) : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code);\n    }\n    effects.enter(\"codeFencedFenceInfo\");\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return info(code);\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceInfo\");\n      return infoBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceInfo\");\n      return factorySpace(effects, metaBefore, \"whitespace\")(code);\n    }\n    if (code === 96 && code === marker) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return info;\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return infoBefore(code);\n    }\n    effects.enter(\"codeFencedFenceMeta\");\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return meta(code);\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceMeta\");\n      return infoBefore(code);\n    }\n    if (code === 96 && code === marker) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return meta;\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    return effects.attempt(closeStart, after, contentBefore)(code);\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return contentStart;\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code) ? factorySpace(effects, beforeContentChunk, \"linePrefix\", initialPrefix + 1)(code) : beforeContentChunk(code);\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code);\n    }\n    effects.enter(\"codeFlowValue\");\n    return contentChunk(code);\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFlowValue\");\n      return beforeContentChunk(code);\n    }\n    effects.consume(code);\n    return contentChunk;\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit(\"codeFenced\");\n    return ok(code);\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0;\n    return startBefore;\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return start;\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n\n      // To do: `enter` here or in next state?\n      effects.enter(\"codeFencedFence\");\n      return markdownSpace(code) ? factorySpace(effects, beforeSequenceClose, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code) : beforeSequenceClose(code);\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter(\"codeFencedFenceSequence\");\n        return sequenceClose(code);\n      }\n      return nok(code);\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++;\n        effects.consume(code);\n        return sequenceClose;\n      }\n      if (size >= sizeOpen) {\n        effects.exit(\"codeFencedFenceSequence\");\n        return markdownSpace(code) ? factorySpace(effects, sequenceCloseAfter, \"whitespace\")(code) : sequenceCloseAfter(code);\n      }\n      return nok(code);\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit(\"codeFencedFence\");\n        return ok(code);\n      }\n      return nok(code);\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return lineStart;\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n  }\n}","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { asciiAlphanumeric, asciiDigit, asciiHexDigit } from 'micromark-util-character';\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this;\n  let size = 0;\n  /** @type {number} */\n  let max;\n  /** @type {(code: Code) => boolean} */\n  let test;\n  return start;\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"characterReference\");\n    effects.enter(\"characterReferenceMarker\");\n    effects.consume(code);\n    effects.exit(\"characterReferenceMarker\");\n    return open;\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 35) {\n      effects.enter(\"characterReferenceMarkerNumeric\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarkerNumeric\");\n      return numeric;\n    }\n    effects.enter(\"characterReferenceValue\");\n    max = 31;\n    test = asciiAlphanumeric;\n    return value(code);\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter(\"characterReferenceMarkerHexadecimal\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarkerHexadecimal\");\n      effects.enter(\"characterReferenceValue\");\n      max = 6;\n      test = asciiHexDigit;\n      return value;\n    }\n    effects.enter(\"characterReferenceValue\");\n    max = 7;\n    test = asciiDigit;\n    return value(code);\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === 59 && size) {\n      const token = effects.exit(\"characterReferenceValue\");\n      if (test === asciiAlphanumeric && !decodeNamedCharacterReference(self.sliceSerialize(token))) {\n        return nok(code);\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter(\"characterReferenceMarker\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarker\");\n      effects.exit(\"characterReference\");\n      return ok;\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code);\n      return value;\n    }\n    return nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { asciiPunctuation } from 'micromark-util-character';\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"characterEscape\");\n    effects.enter(\"escapeMarker\");\n    effects.consume(code);\n    effects.exit(\"escapeMarker\");\n    return inside;\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter(\"characterEscapeValue\");\n      effects.consume(code);\n      effects.exit(\"characterEscapeValue\");\n      effects.exit(\"characterEscape\");\n      return ok;\n    }\n    return nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, ok, \"linePrefix\");\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEndingOrSpace } from 'micromark-util-character';\nimport { push, splice } from 'micromark-util-chunked';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n};\n\n/** @type {Construct} */\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n};\n/** @type {Construct} */\nconst referenceFullConstruct = {\n  tokenize: tokenizeReferenceFull\n};\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {\n  tokenize: tokenizeReferenceCollapsed\n};\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1;\n  while (++index < events.length) {\n    const token = events[index][1];\n    if (token.type === \"labelImage\" || token.type === \"labelLink\" || token.type === \"labelEnd\") {\n      // Remove the marker.\n      events.splice(index + 1, token.type === \"labelImage\" ? 4 : 2);\n      token.type = \"data\";\n      index++;\n    }\n  }\n  return events;\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length;\n  let offset = 0;\n  /** @type {Token} */\n  let token;\n  /** @type {number | undefined} */\n  let open;\n  /** @type {number | undefined} */\n  let close;\n  /** @type {Array<Event>} */\n  let media;\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1];\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (token.type === \"link\" || token.type === \"labelLink\" && token._inactive) {\n        break;\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === \"labelLink\") {\n        token._inactive = true;\n      }\n    } else if (close) {\n      if (events[index][0] === 'enter' && (token.type === \"labelImage\" || token.type === \"labelLink\") && !token._balanced) {\n        open = index;\n        if (token.type !== \"labelLink\") {\n          offset = 2;\n          break;\n        }\n      }\n    } else if (token.type === \"labelEnd\") {\n      close = index;\n    }\n  }\n  const group = {\n    type: events[open][1].type === \"labelLink\" ? \"link\" : \"image\",\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  };\n  const label = {\n    type: \"label\",\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  };\n  const text = {\n    type: \"labelText\",\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  };\n  media = [['enter', group, context], ['enter', label, context]];\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3));\n\n  // Text open.\n  media = push(media, [['enter', text, context]]);\n\n  // Always populated by defaults.\n\n  // Between.\n  media = push(media, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + offset + 4, close - 3), context));\n\n  // Text close, marker close, label close.\n  media = push(media, [['exit', text, context], events[close - 2], events[close - 1], ['exit', label, context]]);\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1));\n\n  // Media close.\n  media = push(media, [['exit', group, context]]);\n  splice(events, open, events.length, media);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this;\n  let index = self.events.length;\n  /** @type {Token} */\n  let labelStart;\n  /** @type {boolean} */\n  let defined;\n\n  // Find an opening.\n  while (index--) {\n    if ((self.events[index][1].type === \"labelImage\" || self.events[index][1].type === \"labelLink\") && !self.events[index][1]._balanced) {\n      labelStart = self.events[index][1];\n      break;\n    }\n  }\n  return start;\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code);\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code);\n    }\n    defined = self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize({\n      start: labelStart.end,\n      end: self.now()\n    })));\n    effects.enter(\"labelEnd\");\n    effects.enter(\"labelMarker\");\n    effects.consume(code);\n    effects.exit(\"labelMarker\");\n    effects.exit(\"labelEnd\");\n    return after;\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === 40) {\n      return effects.attempt(resourceConstruct, labelEndOk, defined ? labelEndOk : labelEndNok)(code);\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === 91) {\n      return effects.attempt(referenceFullConstruct, labelEndOk, defined ? referenceNotFull : labelEndNok)(code);\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code);\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(referenceCollapsedConstruct, labelEndOk, labelEndNok)(code);\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code);\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true;\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart;\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    effects.enter(\"resource\");\n    effects.enter(\"resourceMarker\");\n    effects.consume(code);\n    effects.exit(\"resourceMarker\");\n    return resourceBefore;\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceOpen)(code) : resourceOpen(code);\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === 41) {\n      return resourceEnd(code);\n    }\n    return factoryDestination(effects, resourceDestinationAfter, resourceDestinationMissing, \"resourceDestination\", \"resourceDestinationLiteral\", \"resourceDestinationLiteralMarker\", \"resourceDestinationRaw\", \"resourceDestinationString\", 32)(code);\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceBetween)(code) : resourceEnd(code);\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code);\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(effects, resourceTitleAfter, nok, \"resourceTitle\", \"resourceTitleMarker\", \"resourceTitleString\")(code);\n    }\n    return resourceEnd(code);\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceEnd)(code) : resourceEnd(code);\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === 41) {\n      effects.enter(\"resourceMarker\");\n      effects.consume(code);\n      effects.exit(\"resourceMarker\");\n      effects.exit(\"resource\");\n      return ok;\n    }\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this;\n  return referenceFull;\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    return factoryLabel.call(self, effects, referenceFullAfter, referenceFullMissing, \"reference\", \"referenceMarker\", \"referenceString\")(code);\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1))) ? ok(code) : nok(code);\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart;\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n\n    effects.enter(\"reference\");\n    effects.enter(\"referenceMarker\");\n    effects.consume(code);\n    effects.exit(\"referenceMarker\");\n    return referenceCollapsedOpen;\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === 93) {\n      effects.enter(\"referenceMarker\");\n      effects.consume(code);\n      effects.exit(\"referenceMarker\");\n      effects.exit(\"reference\");\n      return ok;\n    }\n    return nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"labelImage\");\n    effects.enter(\"labelImageMarker\");\n    effects.consume(code);\n    effects.exit(\"labelImageMarker\");\n    return open;\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter(\"labelMarker\");\n      effects.consume(code);\n      effects.exit(\"labelMarker\");\n      effects.exit(\"labelImage\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { push, splice } from 'micromark-util-chunked';\nimport { classifyCharacter } from 'micromark-util-classify-character';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n};\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n// eslint-disable-next-line complexity\nfunction resolveAllAttention(events, context) {\n  let index = -1;\n  /** @type {number} */\n  let open;\n  /** @type {Token} */\n  let group;\n  /** @type {Token} */\n  let text;\n  /** @type {Token} */\n  let openingSequence;\n  /** @type {Token} */\n  let closingSequence;\n  /** @type {number} */\n  let use;\n  /** @type {Array<Event>} */\n  let nextEvents;\n  /** @type {number} */\n  let offset;\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (events[index][0] === 'enter' && events[index][1].type === 'attentionSequence' && events[index][1]._close) {\n      open = index;\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (events[open][0] === 'exit' && events[open][1].type === 'attentionSequence' && events[open][1]._open &&\n        // If the markers are the same:\n        context.sliceSerialize(events[open][1]).charCodeAt(0) === context.sliceSerialize(events[index][1]).charCodeAt(0)) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if ((events[open][1]._close || events[index][1]._open) && (events[index][1].end.offset - events[index][1].start.offset) % 3 && !((events[open][1].end.offset - events[open][1].start.offset + events[index][1].end.offset - events[index][1].start.offset) % 3)) {\n            continue;\n          }\n\n          // Number of markers to use from the sequence.\n          use = events[open][1].end.offset - events[open][1].start.offset > 1 && events[index][1].end.offset - events[index][1].start.offset > 1 ? 2 : 1;\n          const start = Object.assign({}, events[open][1].end);\n          const end = Object.assign({}, events[index][1].start);\n          movePoint(start, -use);\n          movePoint(end, use);\n          openingSequence = {\n            type: use > 1 ? \"strongSequence\" : \"emphasisSequence\",\n            start,\n            end: Object.assign({}, events[open][1].end)\n          };\n          closingSequence = {\n            type: use > 1 ? \"strongSequence\" : \"emphasisSequence\",\n            start: Object.assign({}, events[index][1].start),\n            end\n          };\n          text = {\n            type: use > 1 ? \"strongText\" : \"emphasisText\",\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          };\n          group = {\n            type: use > 1 ? \"strong\" : \"emphasis\",\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          };\n          events[open][1].end = Object.assign({}, openingSequence.start);\n          events[index][1].start = Object.assign({}, closingSequence.end);\n          nextEvents = [];\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [['enter', events[open][1], context], ['exit', events[open][1], context]]);\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [['enter', group, context], ['enter', openingSequence, context], ['exit', openingSequence, context], ['enter', text, context]]);\n\n          // Always populated by defaults.\n\n          // Between.\n          nextEvents = push(nextEvents, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + 1, index), context));\n\n          // Closing.\n          nextEvents = push(nextEvents, [['exit', text, context], ['enter', closingSequence, context], ['exit', closingSequence, context], ['exit', group, context]]);\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2;\n            nextEvents = push(nextEvents, [['enter', events[index][1], context], ['exit', events[index][1], context]]);\n          } else {\n            offset = 0;\n          }\n          splice(events, open - 1, index - open + 3, nextEvents);\n          index = open + nextEvents.length - offset - 2;\n          break;\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1;\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data';\n    }\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null;\n  const previous = this.previous;\n  const before = classifyCharacter(previous);\n\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    marker = code;\n    effects.enter('attentionSequence');\n    return inside(code);\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return inside;\n    }\n    const token = effects.exit('attentionSequence');\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code);\n\n    // Always populated by defaults.\n\n    const open = !after || after === 2 && before || attentionMarkers.includes(code);\n    const close = !before || before === 2 && after || attentionMarkers.includes(previous);\n    token._open = Boolean(marker === 42 ? open : open && (before || !close));\n    token._close = Boolean(marker === 42 ? close : close && (after || !open));\n    return ok(code);\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {undefined}\n */\nfunction movePoint(point, offset) {\n  point.column += offset;\n  point.offset += offset;\n  point._bufferIndex += offset;\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { asciiAlpha, asciiAlphanumeric, asciiAtext, asciiControl } from 'micromark-util-character';\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0;\n  return start;\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"autolink\");\n    effects.enter(\"autolinkMarker\");\n    effects.consume(code);\n    effects.exit(\"autolinkMarker\");\n    effects.enter(\"autolinkProtocol\");\n    return open;\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return schemeOrEmailAtext;\n    }\n    if (code === 64) {\n      return nok(code);\n    }\n    return emailAtext(code);\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) {\n      // Count the previous alphabetical from `open` too.\n      size = 1;\n      return schemeInsideOrEmailAtext(code);\n    }\n    return emailAtext(code);\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code);\n      size = 0;\n      return urlInside;\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if ((code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) && size++ < 32) {\n      effects.consume(code);\n      return schemeInsideOrEmailAtext;\n    }\n    size = 0;\n    return emailAtext(code);\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit(\"autolinkProtocol\");\n      effects.enter(\"autolinkMarker\");\n      effects.consume(code);\n      effects.exit(\"autolinkMarker\");\n      effects.exit(\"autolink\");\n      return ok;\n    }\n\n    // ASCII control, space, or `<`.\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return urlInside;\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code);\n      return emailAtSignOrDot;\n    }\n    if (asciiAtext(code)) {\n      effects.consume(code);\n      return emailAtext;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code);\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code);\n      size = 0;\n      return emailAtSignOrDot;\n    }\n    if (code === 62) {\n      // Exit, then change the token type.\n      effects.exit(\"autolinkProtocol\").type = \"autolinkEmail\";\n      effects.enter(\"autolinkMarker\");\n      effects.consume(code);\n      effects.exit(\"autolinkMarker\");\n      effects.exit(\"autolink\");\n      return ok;\n    }\n    return emailValue(code);\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      const next = code === 45 ? emailValue : emailLabel;\n      effects.consume(code);\n      return next;\n    }\n    return nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiAlpha, asciiAlphanumeric, markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this;\n  /** @type {NonNullable<Code> | undefined} */\n  let marker;\n  /** @type {number} */\n  let index;\n  /** @type {State} */\n  let returnState;\n  return start;\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"htmlText\");\n    effects.enter(\"htmlTextData\");\n    effects.consume(code);\n    return open;\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instruction;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      index = 0;\n      return cdataOpenInside;\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return declaration;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentEnd;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 45) {\n      effects.consume(code);\n      return commentClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = comment;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return comment;\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentEnd;\n    }\n    return comment(code);\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === 62 ? end(code) : code === 45 ? commentClose(code) : comment(code);\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = \"CDATA[\";\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code);\n      return index === value.length ? cdata : cdataOpenInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = cdata;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return cdata;\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = declaration;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return declaration;\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instructionClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = instruction;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return instruction;\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code);\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return tagCloseBetween(code);\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagCloseBetween;\n    }\n    return end(code);\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return end;\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenBetween;\n    }\n    return end(code);\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    return tagOpenAttributeNameAfter(code);\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeNameAfter;\n    }\n    return tagOpenBetween(code);\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      marker = code;\n      return tagOpenAttributeValueQuoted;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code);\n      marker = undefined;\n      return tagOpenAttributeValueQuotedAfter;\n    }\n    if (code === null) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueQuoted;\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 60 || code === 61 || code === 96) {\n      return nok(code);\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code);\n      effects.exit(\"htmlTextData\");\n      effects.exit(\"htmlText\");\n      return ok;\n    }\n    return nok(code);\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    effects.exit(\"htmlTextData\");\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return lineEndingAfter;\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n\n    return markdownSpace(code) ? factorySpace(effects, lineEndingAfterPrefix, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code) : lineEndingAfterPrefix(code);\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter(\"htmlTextData\");\n    return returnState(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"labelLink\");\n    effects.enter(\"labelMarker\");\n    effects.consume(code);\n    effects.exit(\"labelMarker\");\n    effects.exit(\"labelLink\");\n    return after;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"hardBreakEscape\");\n    effects.consume(code);\n    return after;\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit(\"hardBreakEscape\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n};\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4;\n  let headEnterIndex = 3;\n  /** @type {number} */\n  let index;\n  /** @type {number | undefined} */\n  let enter;\n\n  // If we start and end with an EOL or a space.\n  if ((events[headEnterIndex][1].type === \"lineEnding\" || events[headEnterIndex][1].type === 'space') && (events[tailExitIndex][1].type === \"lineEnding\" || events[tailExitIndex][1].type === 'space')) {\n    index = headEnterIndex;\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === \"codeTextData\") {\n        // Then we have padding.\n        events[headEnterIndex][1].type = \"codeTextPadding\";\n        events[tailExitIndex][1].type = \"codeTextPadding\";\n        headEnterIndex += 2;\n        tailExitIndex -= 2;\n        break;\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1;\n  tailExitIndex++;\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== \"lineEnding\") {\n        enter = index;\n      }\n    } else if (index === tailExitIndex || events[index][1].type === \"lineEnding\") {\n      events[enter][1].type = \"codeTextData\";\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end;\n        events.splice(enter + 2, index - enter - 2);\n        tailExitIndex -= index - enter - 2;\n        index = enter + 2;\n      }\n      enter = undefined;\n    }\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return code !== 96 || this.events[this.events.length - 1][1].type === \"characterEscape\";\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this;\n  let sizeOpen = 0;\n  /** @type {number} */\n  let size;\n  /** @type {Token} */\n  let token;\n  return start;\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"codeText\");\n    effects.enter(\"codeTextSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 96) {\n      effects.consume(code);\n      sizeOpen++;\n      return sequenceOpen;\n    }\n    effects.exit(\"codeTextSequence\");\n    return between(code);\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code);\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === 32) {\n      effects.enter('space');\n      effects.consume(code);\n      effects.exit('space');\n      return between;\n    }\n\n    // Closing fence? Could also be data.\n    if (code === 96) {\n      token = effects.enter(\"codeTextSequence\");\n      size = 0;\n      return sequenceClose(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return between;\n    }\n\n    // Data.\n    effects.enter(\"codeTextData\");\n    return data(code);\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 32 || code === 96 || markdownLineEnding(code)) {\n      effects.exit(\"codeTextData\");\n      return between(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code);\n      size++;\n      return sequenceClose;\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit(\"codeTextSequence\");\n      effects.exit(\"codeText\");\n      return ok(code);\n    }\n\n    // More or less accents: mark as data.\n    token.type = \"codeTextData\";\n    return data(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\n\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [91]: definition\n}\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Create} Create\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n */\n\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {string, text} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n * @returns {ParseContext}\n */\nexport function parse(options) {\n  const settings = options || {}\n  const constructs =\n    /** @type {FullNormalizedExtension} */\n    combineExtensions([defaultConstructs, ...(settings.extensions || [])])\n\n  /** @type {ParseContext} */\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n\n  /**\n   * @param {InitialConstruct} initial\n   */\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {boolean | null | undefined} [end=false]\n * @returns {Array<Chunk>}\n */\n\nconst search = /[\\0\\t\\n\\r]/g\n\n/**\n * @returns {Preprocessor}\n */\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean | undefined} */\n  let start = true\n  /** @type {boolean | undefined} */\n  let atCarriageReturn\n  return preprocessor\n\n  /** @type {Preprocessor} */\n  // eslint-disable-next-line complexity\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray | null} */\n    let match\n    /** @type {number} */\n    let next\n    /** @type {number} */\n    let startPosition\n    /** @type {number} */\n    let endPosition\n    /** @type {Code} */\n    let code\n    value =\n      buffer +\n      (typeof value === 'string'\n        ? value.toString()\n        : new TextDecoder(encoding || undefined).decode(value))\n    startPosition = 0\n    buffer = ''\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n      start = undefined\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n            while (column++ < next) chunks.push(-1)\n            break\n          }\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n      startPosition = endPosition + 1\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCodePoint(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base);\n  if (\n  // C0 except for HT, LF, FF, CR, space.\n  code < 9 || code === 11 || code > 13 && code < 32 ||\n  // Control character (DEL) of C0, and C1 controls.\n  code > 126 && code < 160 ||\n  // Lone high surrogates and low surrogates.\n  code > 55_295 && code < 57_344 ||\n  // Noncharacters.\n  code > 64_975 && code < 65_008 || /* eslint-disable no-bitwise */\n  (code & 65_535) === 65_535 || (code & 65_535) === 65_534 || /* eslint-enable no-bitwise */\n  // Out of range\n  code > 1_114_111) {\n    return \"\\uFFFD\";\n  }\n  return String.fromCodePoint(code);\n}","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0)\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @import {\n *   Break,\n *   Blockquote,\n *   Code,\n *   Definition,\n *   Emphasis,\n *   Heading,\n *   Html,\n *   Image,\n *   InlineCode,\n *   Link,\n *   ListItem,\n *   List,\n *   Nodes,\n *   Paragraph,\n *   PhrasingContent,\n *   ReferenceType,\n *   Root,\n *   Strong,\n *   Text,\n *   ThematicBreak\n * } from 'mdast'\n * @import {\n *   Encoding,\n *   Event,\n *   Token,\n *   Value\n * } from 'micromark-util-types'\n * @import {Point} from 'unist'\n * @import {\n *   CompileContext,\n *   CompileData,\n *   Config,\n *   Extension,\n *   Handle,\n *   OnEnterError,\n *   Options\n * } from './types.js'\n */\n\nimport { toString } from 'mdast-util-to-string';\nimport { parse, postprocess, preprocess } from 'micromark';\nimport { decodeNumericCharacterReference } from 'micromark-util-decode-numeric-character-reference';\nimport { decodeString } from 'micromark-util-decode-string';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { stringifyPosition } from 'unist-util-stringify-position';\nconst own = {}.hasOwnProperty;\n\n/**\n * Turn markdown into a syntax tree.\n *\n * @overload\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @overload\n * @param {Value} value\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @param {Value} value\n *   Markdown to parse.\n * @param {Encoding | Options | null | undefined} [encoding]\n *   Character encoding for when `value` is `Buffer`.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Root}\n *   mdast tree.\n */\nexport function fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding;\n    encoding = undefined;\n  }\n  return compiler(options)(postprocess(parse(options).document().write(preprocess()(value, encoding, true))));\n}\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      characterReference: onexitcharacterreference,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  };\n  configure(config, (options || {}).mdastExtensions || []);\n\n  /** @type {CompileData} */\n  const data = {};\n  return compile;\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    };\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      data\n    };\n    /** @type {Array<number>} */\n    const listStack = [];\n    let index = -1;\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (events[index][1].type === \"listOrdered\" || events[index][1].type === \"listUnordered\") {\n        if (events[index][0] === 'enter') {\n          listStack.push(index);\n        } else {\n          const tail = listStack.pop();\n          index = prepareList(events, tail, index);\n        }\n      }\n    }\n    index = -1;\n    while (++index < events.length) {\n      const handler = config[events[index][0]];\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(Object.assign({\n          sliceSerialize: events[index][2].sliceSerialize\n        }, context), events[index][1]);\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1];\n      const handler = tail[1] || defaultOnError;\n      handler.call(context, undefined, tail[0]);\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(events.length > 0 ? events[0][1].start : {\n        line: 1,\n        column: 1,\n        offset: 0\n      }),\n      end: point(events.length > 0 ? events[events.length - 2][1].end : {\n        line: 1,\n        column: 1,\n        offset: 0\n      })\n    };\n\n    // Call transforms.\n    index = -1;\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree;\n    }\n    return tree;\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1;\n    let containerBalance = -1;\n    let listSpread = false;\n    /** @type {Token | undefined} */\n    let listItem;\n    /** @type {number | undefined} */\n    let lineIndex;\n    /** @type {number | undefined} */\n    let firstBlankLineIndex;\n    /** @type {boolean | undefined} */\n    let atMarker;\n    while (++index <= length) {\n      const event = events[index];\n      switch (event[1].type) {\n        case \"listUnordered\":\n        case \"listOrdered\":\n        case \"blockQuote\":\n          {\n            if (event[0] === 'enter') {\n              containerBalance++;\n            } else {\n              containerBalance--;\n            }\n            atMarker = undefined;\n            break;\n          }\n        case \"lineEndingBlank\":\n          {\n            if (event[0] === 'enter') {\n              if (listItem && !atMarker && !containerBalance && !firstBlankLineIndex) {\n                firstBlankLineIndex = index;\n              }\n              atMarker = undefined;\n            }\n            break;\n          }\n        case \"linePrefix\":\n        case \"listItemValue\":\n        case \"listItemMarker\":\n        case \"listItemPrefix\":\n        case \"listItemPrefixWhitespace\":\n          {\n            // Empty.\n\n            break;\n          }\n        default:\n          {\n            atMarker = undefined;\n          }\n      }\n      if (!containerBalance && event[0] === 'enter' && event[1].type === \"listItemPrefix\" || containerBalance === -1 && event[0] === 'exit' && (event[1].type === \"listUnordered\" || event[1].type === \"listOrdered\")) {\n        if (listItem) {\n          let tailIndex = index;\n          lineIndex = undefined;\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex];\n            if (tailEvent[1].type === \"lineEnding\" || tailEvent[1].type === \"lineEndingBlank\") {\n              if (tailEvent[0] === 'exit') continue;\n              if (lineIndex) {\n                events[lineIndex][1].type = \"lineEndingBlank\";\n                listSpread = true;\n              }\n              tailEvent[1].type = \"lineEnding\";\n              lineIndex = tailIndex;\n            } else if (tailEvent[1].type === \"linePrefix\" || tailEvent[1].type === \"blockQuotePrefix\" || tailEvent[1].type === \"blockQuotePrefixWhitespace\" || tailEvent[1].type === \"blockQuoteMarker\" || tailEvent[1].type === \"listItemIndent\") {\n              // Empty\n            } else {\n              break;\n            }\n          }\n          if (firstBlankLineIndex && (!lineIndex || firstBlankLineIndex < lineIndex)) {\n            listItem._spread = true;\n          }\n\n          // Fix position.\n          listItem.end = Object.assign({}, lineIndex ? events[lineIndex][1].start : event[1].end);\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]]);\n          index++;\n          length++;\n        }\n\n        // Create a new list item.\n        if (event[1].type === \"listItemPrefix\") {\n          /** @type {Token} */\n          const item = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          };\n          listItem = item;\n          events.splice(index, 0, ['enter', item, event[2]]);\n          index++;\n          length++;\n          firstBlankLineIndex = undefined;\n          atMarker = true;\n        }\n      }\n    }\n    events[start][1]._spread = listSpread;\n    return length;\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Nodes} create\n   *   Create a node.\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open;\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function open(token) {\n      enter.call(this, create(token), token);\n      if (and) and.call(this, token);\n    }\n  }\n\n  /**\n   * @type {CompileContext['buffer']}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    });\n  }\n\n  /**\n   * @type {CompileContext['enter']}\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1];\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children;\n    siblings.push(node);\n    this.stack.push(node);\n    this.tokenStack.push([token, errorHandler || undefined]);\n    node.position = {\n      start: point(token.start),\n      // @ts-expect-error: `end` will be patched later.\n      end: undefined\n    };\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close;\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function close(token) {\n      if (and) and.call(this, token);\n      exit.call(this, token);\n    }\n  }\n\n  /**\n   * @type {CompileContext['exit']}\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop();\n    const open = this.tokenStack.pop();\n    if (!open) {\n      throw new Error('Cannot close `' + token.type + '` (' + stringifyPosition({\n        start: token.start,\n        end: token.end\n      }) + '): it’s not open');\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0]);\n      } else {\n        const handler = open[1] || defaultOnError;\n        handler.call(this, token, open[0]);\n      }\n    }\n    node.position.end = point(token.end);\n  }\n\n  /**\n   * @type {CompileContext['resume']}\n   */\n  function resume() {\n    return toString(this.stack.pop());\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    this.data.expectingFirstListItemValue = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (this.data.expectingFirstListItemValue) {\n      const ancestor = this.stack[this.stack.length - 2];\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10);\n      this.data.expectingFirstListItemValue = undefined;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.lang = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.meta = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (this.data.flowCodeInside) return;\n    this.buffer();\n    this.data.flowCodeInside = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '');\n    this.data.flowCodeInside = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '');\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.label = label;\n    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.title = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.url = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1];\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length;\n      node.depth = depth;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    this.data.setextHeadingSlurpLineEnding = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1];\n    node.depth = this.sliceSerialize(token).codePointAt(0) === 61 ? 1 : 2;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    this.data.setextHeadingSlurpLineEnding = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1];\n    /** @type {Array<Nodes>} */\n    const siblings = node.children;\n    let tail = siblings[siblings.length - 1];\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text();\n      tail.position = {\n        start: point(token.start),\n        // @ts-expect-error: we’ll add `end` later.\n        end: undefined\n      };\n      siblings.push(tail);\n    }\n    this.stack.push(tail);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop();\n    tail.value += this.sliceSerialize(token);\n    tail.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1];\n    // If we’re at a hard break, include the line ending in there.\n    if (this.data.atHardBreak) {\n      const tail = context.children[context.children.length - 1];\n      tail.position.end = point(token.end);\n      this.data.atHardBreak = undefined;\n      return;\n    }\n    if (!this.data.setextHeadingSlurpLineEnding && config.canContainEols.includes(context.type)) {\n      onenterdata.call(this, token);\n      onexitdata.call(this, token);\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    this.data.atHardBreak = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1];\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut';\n      node.type += 'Reference';\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType;\n      // @ts-expect-error: mutate.\n      delete node.url;\n      delete node.title;\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier;\n      // @ts-expect-error: mutate.\n      delete node.label;\n    }\n    this.data.referenceType = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1];\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut';\n      node.type += 'Reference';\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType;\n      // @ts-expect-error: mutate.\n      delete node.url;\n      delete node.title;\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier;\n      // @ts-expect-error: mutate.\n      delete node.label;\n    }\n    this.data.referenceType = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token);\n    const ancestor = this.stack[this.stack.length - 2];\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string);\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase();\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1];\n    const value = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    // Assume a reference.\n    this.data.inReference = true;\n    if (node.type === 'link') {\n      /** @type {Array<PhrasingContent>} */\n      const children = fragment.children;\n      node.children = children;\n    } else {\n      node.alt = value;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.url = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.title = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    this.data.inReference = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    this.data.referenceType = 'collapsed';\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label;\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n    this.data.referenceType = 'full';\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    this.data.characterReferenceType = token.type;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token);\n    const type = this.data.characterReferenceType;\n    /** @type {string} */\n    let value;\n    if (type) {\n      value = decodeNumericCharacterReference(data, type === \"characterReferenceMarkerNumeric\" ? 10 : 16);\n      this.data.characterReferenceType = undefined;\n    } else {\n      const result = decodeNamedCharacterReference(data);\n      value = result;\n    }\n    const tail = this.stack[this.stack.length - 1];\n    tail.value += value;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreference(token) {\n    const tail = this.stack.pop();\n    tail.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token);\n    const node = this.stack[this.stack.length - 1];\n    node.url = this.sliceSerialize(token);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token);\n    const node = this.stack[this.stack.length - 1];\n    node.url = 'mailto:' + this.sliceSerialize(token);\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    };\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    };\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    };\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    };\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    };\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    return {\n      type: 'heading',\n      // @ts-expect-error `depth` will be set later.\n      depth: 0,\n      children: []\n    };\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    };\n  }\n\n  /** @returns {Html} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    };\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    };\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    };\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    };\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    };\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    };\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    };\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    };\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    };\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  };\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Array<Extension> | Extension>} extensions\n * @returns {undefined}\n */\nfunction configure(combined, extensions) {\n  let index = -1;\n  while (++index < extensions.length) {\n    const value = extensions[index];\n    if (Array.isArray(value)) {\n      configure(combined, value);\n    } else {\n      extension(combined, value);\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {undefined}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key;\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      switch (key) {\n        case 'canContainEols':\n          {\n            const right = extension[key];\n            if (right) {\n              combined[key].push(...right);\n            }\n            break;\n          }\n        case 'transforms':\n          {\n            const right = extension[key];\n            if (right) {\n              combined[key].push(...right);\n            }\n            break;\n          }\n        case 'enter':\n        case 'exit':\n          {\n            const right = extension[key];\n            if (right) {\n              Object.assign(combined[key], right);\n            }\n            break;\n          }\n        // No default\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error('Cannot close `' + left.type + '` (' + stringifyPosition({\n      start: left.start,\n      end: left.end\n    }) + '): a different token (`' + right.type + '`, ' + stringifyPosition({\n      start: right.start,\n      end: right.end\n    }) + ') is open');\n  } else {\n    throw new Error('Cannot close document, a token (`' + right.type + '`, ' + stringifyPosition({\n      start: right.start,\n      end: right.end\n    }) + ') is still open');\n  }\n}","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n  return events\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} FromMarkdownOptions\n * @typedef {import('unified').Parser<Root>} Parser\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {Omit<FromMarkdownOptions, 'extensions' | 'mdastExtensions'>} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * Aadd support for parsing from markdown.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkParse(options) {\n  /** @type {Processor} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n\n  self.parser = parser\n\n  /**\n   * @type {Parser}\n   */\n  function parser(doc) {\n    return fromMarkdown(doc, {\n      ...self.data('settings'),\n      ...options,\n      // Note: these options are not in the readme.\n      // The goal is for them to be set by plugins on `data` instead of being\n      // passed by users.\n      extensions: self.data('micromarkExtensions') || [],\n      mdastExtensions: self.data('fromMarkdownExtensions') || []\n    })\n  }\n}\n","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type)\n          return as([type, [...value]], value);\n  \n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | null | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n  if (!protocol) {\n    return value\n  }\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n  return ''\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n    let replace = ''\n\n    // A correct percent encoded value.\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    }\n    // Astral.\n    else if (code > 55_295 && code < 57_344) {\n      const next = value.charCodeAt(index + 1)\n\n      // A correct surrogate pair.\n      if (code < 56_320 && next > 56_319 && next < 57_344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      }\n      // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @callback FootnoteBackContentTemplate\n *   Generate content for the backreference dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent> | ElementContent | string}\n *   Content for the backreference when linking back from definitions to their\n *   reference.\n *\n * @callback FootnoteBackLabelTemplate\n *   Generate a back label dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Back label to use when linking back from definitions to their reference.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate the default content that GitHub uses on backreferences.\n *\n * @param {number} _\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent>}\n *   Content.\n */\nexport function defaultFootnoteBackContent(_, rereferenceIndex) {\n  /** @type {Array<ElementContent>} */\n  const result = [{type: 'text', value: '↩'}]\n\n  if (rereferenceIndex > 1) {\n    result.push({\n      type: 'element',\n      tagName: 'sup',\n      properties: {},\n      children: [{type: 'text', value: String(rereferenceIndex)}]\n    })\n  }\n\n  return result\n}\n\n/**\n * Generate the default label that GitHub uses on backreferences.\n *\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Label.\n */\nexport function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n  return (\n    'Back to reference ' +\n    (referenceIndex + 1) +\n    (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n  )\n}\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\n// eslint-disable-next-line complexity\nexport function footer(state) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const footnoteBackContent =\n    state.options.footnoteBackContent || defaultFootnoteBackContent\n  const footnoteBackLabel =\n    state.options.footnoteBackLabel || defaultFootnoteBackLabel\n  const footnoteLabel = state.options.footnoteLabel || 'Footnotes'\n  const footnoteLabelTagName = state.options.footnoteLabelTagName || 'h2'\n  const footnoteLabelProperties = state.options.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let referenceIndex = -1\n\n  while (++referenceIndex < state.footnoteOrder.length) {\n    const definition = state.footnoteById.get(\n      state.footnoteOrder[referenceIndex]\n    )\n\n    if (!definition) {\n      continue\n    }\n\n    const content = state.all(definition)\n    const id = String(definition.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let rereferenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n    const counts = state.footnoteCounts.get(id)\n\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while (counts !== undefined && ++rereferenceIndex <= counts) {\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      let children =\n        typeof footnoteBackContent === 'string'\n          ? footnoteBackContent\n          : footnoteBackContent(referenceIndex, rereferenceIndex)\n\n      if (typeof children === 'string') {\n        children = {type: 'text', value: children}\n      }\n\n      backReferences.push({\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            clobberPrefix +\n            'fnref-' +\n            safeId +\n            (rereferenceIndex > 1 ? '-' + rereferenceIndex : ''),\n          dataFootnoteBackref: '',\n          ariaLabel:\n            typeof footnoteBackLabel === 'string'\n              ? footnoteBackLabel\n              : footnoteBackLabel(referenceIndex, rereferenceIndex),\n          className: ['data-footnote-backref']\n        },\n        children: Array.isArray(children) ? children : [children]\n      })\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(definition, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: footnoteLabelTagName,\n        properties: {\n          ...structuredClone(footnoteLabelProperties),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Reference} Reference\n *\n * @typedef {import('./state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Extract<Nodes, Reference>} node\n *   Reference node (image, link).\n * @returns {Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return [{type: 'text', value: '![' + node.alt + suffix}]\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === null || spread === undefined\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n *\n * @satisfies {import('../state.js').Handlers}\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  // @ts-expect-error: root is different, but hard to type.\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  /** @type {Properties} */\n  const properties = {}\n\n  if (node.lang) {\n    properties.className = ['language-' + node.lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  let reuseCounter = state.footnoteCounts.get(id)\n\n  if (reuseCounter === undefined) {\n    reuseCounter = 0\n    state.footnoteOrder.push(id)\n    counter = state.footnoteOrder.length\n  } else {\n    counter = index + 1\n  }\n\n  reuseCounter += 1\n  state.footnoteCounts.set(id, reuseCounter)\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + clobberPrefix + 'fn-' + safeId,\n      id:\n        clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Html} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Element | Raw | undefined}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.options.allowDangerousHtml) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(definition.url || ''), alt: node.alt}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(definition.url || '')}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Parents} HastParents\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastParents}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointEnd, pointStart} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start && end) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  // To do: option to use `style`?\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(cell, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastElement | HastText}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').RootContent} HastRootContent\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('mdast').Parents} MdastParents\n *\n * @typedef {import('vfile').VFile} VFile\n *\n * @typedef {import('./footer.js').FootnoteBackContentTemplate} FootnoteBackContentTemplate\n * @typedef {import('./footer.js').FootnoteBackLabelTemplate} FootnoteBackLabelTemplate\n */\n\n/**\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | undefined} parent\n *   Parent of `node`.\n * @returns {Array<HastElementContent> | HastElementContent | undefined}\n *   hast node.\n *\n * @typedef {Partial<Record<MdastNodes['type'], Handler>>} Handlers\n *   Handle nodes.\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree (default:\n *   `false`).\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` property on footnotes to prevent them from\n *   *clobbering* (default: `'user-content-'`).\n *\n *   Pass `''` for trusted markdown and when you are careful with\n *   polyfilling.\n *   You could pass a different prefix.\n *\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=\"x\"></p>\n *   <script>alert(x) // `x` now refers to the `p#x` DOM element</script>\n *   ```\n *\n *   The above example shows that elements are made available by browsers, by\n *   their ID, on the `window` object.\n *   This is a security risk because you might be expecting some other variable\n *   at that place.\n *   It can also break polyfills.\n *   Using a prefix solves these problems.\n * @property {VFile | null | undefined} [file]\n *   Corresponding virtual file representing the input document (optional).\n * @property {FootnoteBackContentTemplate | string | null | undefined} [footnoteBackContent]\n *   Content of the backreference back to references (default: `defaultFootnoteBackContent`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackContent(_, rereferenceIndex) {\n *     const result = [{type: 'text', value: '↩'}]\n *\n *     if (rereferenceIndex > 1) {\n *       result.push({\n *         type: 'element',\n *         tagName: 'sup',\n *         properties: {},\n *         children: [{type: 'text', value: String(rereferenceIndex)}]\n *       })\n *     }\n *\n *     return result\n *   }\n *   ```\n *\n *   This content is used in the `a` element of each backreference (the `↩`\n *   links).\n * @property {FootnoteBackLabelTemplate | string | null | undefined} [footnoteBackLabel]\n *   Label to describe the backreference back to references (default:\n *   `defaultFootnoteBackLabel`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n *    return (\n *      'Back to reference ' +\n *      (referenceIndex + 1) +\n *      (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n *    )\n *   }\n *   ```\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is used in the `ariaLabel` property on each backreference\n *   (the `↩` links).\n *   It affects users of assistive technology.\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Textual label to use for the footnotes section (default: `'Footnotes'`).\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (default: `{className:\n *   ['sr-only']}`).\n *\n *   Change it to show the label and add other properties.\n *\n *   This label is typically hidden visually (assuming an `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass an empty string.\n *   You can also add different properties.\n *\n *   > **Note**: `id: 'footnote-label'` is always added, because footnote\n *   > calls use it with `aria-describedby` to provide an accessible label.\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   HTML tag name to use for the footnote label element (default: `'h2'`).\n *\n *   Change it to match your document structure.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes (optional).\n * @property {Array<MdastNodes['type']> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed)\n *   (optional).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes (optional).\n *\n * @typedef State\n *   Info passed around.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => HastElement | Type} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {Map<string, MdastDefinition>} definitionById\n *   Definitions by their identifier.\n * @property {Map<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Map<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {(node: MdastNodes, parent: MdastParents | undefined) => Array<HastElementContent> | HastElementContent | undefined} one\n *   Transform an mdast node to hast.\n * @property {Options} options\n *   Configuration.\n * @property {(from: MdastNodes, node: HastNodes) => undefined} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastRootContent>(nodes: Array<Type>, loose?: boolean | undefined) => Array<HastText | Type>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {visit} from 'unist-util-visit'\nimport {position} from 'unist-util-position'\nimport {handlers as defaultHandlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || emptyOptions\n  /** @type {Map<string, MdastDefinition>} */\n  const definitionById = new Map()\n  /** @type {Map<string, MdastFootnoteDefinition>} */\n  const footnoteById = new Map()\n  /** @type {Map<string, number>} */\n  const footnoteCounts = new Map()\n  /** @type {Handlers} */\n  // @ts-expect-error: the root handler returns a root.\n  // Hard to type.\n  const handlers = {...defaultHandlers, ...settings.handlers}\n\n  /** @type {State} */\n  const state = {\n    all,\n    applyData,\n    definitionById,\n    footnoteById,\n    footnoteCounts,\n    footnoteOrder: [],\n    handlers,\n    one,\n    options: settings,\n    patch,\n    wrap\n  }\n\n  visit(tree, function (node) {\n    if (node.type === 'definition' || node.type === 'footnoteDefinition') {\n      const map = node.type === 'definition' ? definitionById : footnoteById\n      const id = String(node.identifier).toUpperCase()\n\n      // Mimick CM behavior of link definitions.\n      // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/9032189/lib/index.js#L20-L21>.\n      if (!map.has(id)) {\n        // @ts-expect-error: node type matches map.\n        map.set(id, node)\n      }\n    }\n  })\n\n  return state\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {Array<HastElementContent> | HastElementContent | undefined}\n   *   Resulting hast node.\n   */\n  function one(node, parent) {\n    const type = node.type\n    const handle = state.handlers[type]\n\n    if (own.call(state.handlers, type) && handle) {\n      return handle(state, node, parent)\n    }\n\n    if (state.options.passThrough && state.options.passThrough.includes(type)) {\n      if ('children' in node) {\n        const {children, ...shallow} = node\n        const result = structuredClone(shallow)\n        // @ts-expect-error: TS doesn’t understand…\n        result.children = state.all(node)\n        // @ts-expect-error: TS doesn’t understand…\n        return result\n      }\n\n      // @ts-expect-error: it’s custom.\n      return structuredClone(node)\n    }\n\n    const unknown = state.options.unknownHandler || defaultUnknownHandler\n\n    return unknown(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function all(parent) {\n    /** @type {Array<HastElementContent>} */\n    const values = []\n\n    if ('children' in parent) {\n      const nodes = parent.children\n      let index = -1\n      while (++index < nodes.length) {\n        const result = state.one(nodes[index], parent)\n\n        // To do: see if we van clean this? Can we merge texts?\n        if (result) {\n          if (index && nodes[index - 1].type === 'break') {\n            if (!Array.isArray(result) && result.type === 'text') {\n              result.value = trimMarkdownSpaceStart(result.value)\n            }\n\n            if (!Array.isArray(result) && result.type === 'element') {\n              const head = result.children[0]\n\n              if (head && head.type === 'text') {\n                head.value = trimMarkdownSpaceStart(head.value)\n              }\n            }\n          }\n\n          if (Array.isArray(result)) {\n            values.push(...result)\n          } else {\n            values.push(result)\n          }\n        }\n      }\n    }\n\n    return values\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {HastElement | Type}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {HastElement | Type} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent of `hName` is to create an element, but likely also to keep\n      // the content around (otherwise: pass `hChildren`).\n      else {\n        /** @type {Array<HastElementContent>} */\n        // @ts-expect-error: assume no doctypes in `root`.\n        const children = 'children' in result ? result.children : [result]\n        result = {type: 'element', tagName: hName, properties: {}, children}\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      Object.assign(result.properties, structuredClone(hProperties))\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastElement | HastText}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastElement | HastText} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: state.all(node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastRootContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | undefined} [loose=false]\n *   Whether to add line endings at start and end (default: `false`).\n * @returns {Array<HastText | Type>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<HastText | Type>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n\n/**\n * Trim spaces and tabs at the start of `value`.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Result.\n */\nfunction trimMarkdownSpaceStart(value) {\n  let index = 0\n  let code = value.charCodeAt(index)\n\n  while (code === 9 || code === 32) {\n    index++\n    code = value.charCodeAt(index)\n  }\n\n  return value.slice(index)\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","/**\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('./state.js').Options} Options\n */\n\nimport {ok as assert} from 'devlop'\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {HastNodes}\n *   hast tree.\n */\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, undefined)\n  const foot = footer(state)\n  /** @type {HastNodes} */\n  const result = Array.isArray(node)\n    ? {type: 'root', children: node}\n    : node || {type: 'root', children: []}\n\n  if (foot) {\n    // If there’s a footer, there were definitions, meaning block\n    // content.\n    // So `result` is a parent node.\n    assert('children' in result)\n    result.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  return result\n}\n","// Include `data` fields in mdast and `raw` nodes in hast.\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @import {Root as HastRoot} from 'hast'\n * @import {Root as MdastRoot} from 'mdast'\n * @import {Options as ToHastOptions} from 'mdast-util-to-hast'\n * @import {Processor} from 'unified'\n * @import {VFile} from 'vfile'\n */\n\n/**\n * @typedef {Omit<ToHastOptions, 'file'>} Options\n *\n * @callback TransformBridge\n *   Bridge-mode.\n *\n *   Runs the destination with the new hast tree.\n *   Discards result.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {Promise<undefined>}\n *   Nothing.\n *\n * @callback TransformMutate\n *  Mutate-mode.\n *\n *  Further transformers run on the hast tree.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {HastRoot}\n *   Tree (hast).\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n/**\n * Turn markdown into HTML.\n *\n * ##### Notes\n *\n * ###### Signature\n *\n * *   if a processor is given, runs the (rehype) plugins used on it with a\n *     hast tree, then discards the result (*bridge mode*)\n * *   otherwise, returns a hast tree, the plugins used after `remarkRehype`\n *     are rehype plugins (*mutate mode*)\n *\n * > 👉 **Note**: It’s highly unlikely that you want to pass a `processor`.\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most plugins ignore `raw` nodes but two notable ones don’t:\n *\n * *   `rehype-stringify` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful if\n *     you completely trust authors\n * *   `rehype-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only way\n *     to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `remark-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * *Example: headings (DOM clobbering)* in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @overload\n * @param {Processor} processor\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformBridge}\n *\n * @overload\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformMutate}\n *\n * @param {Readonly<Options> | Processor | null | undefined} [destination]\n *   Processor or configuration (optional).\n * @param {Readonly<Options> | null | undefined} [options]\n *   When a processor was given, configuration (optional).\n * @returns {TransformBridge | TransformMutate}\n *   Transform.\n */\nexport default function remarkRehype(destination, options) {\n  if (destination && 'run' in destination) {\n    /**\n     * @type {TransformBridge}\n     */\n    return async function (tree, file) {\n      // Cast because root in -> root out.\n      const hastTree = /** @type {HastRoot} */ (\n        toHast(tree, {file, ...options})\n      )\n      await destination.run(hastTree, file)\n    }\n  }\n\n  /**\n   * @type {TransformMutate}\n   */\n  return function (tree, file) {\n    // Cast because root in -> root out.\n    // To do: in the future, disallow ` || options` fallback.\n    // With `unified-engine`, `destination` can be `undefined` but\n    // `options` will be the file set.\n    // We should not pass that as `options`.\n    return /** @type {HastRoot} */ (\n      toHast(tree, {file, ...(destination || options)})\n    )\n  }\n}\n","/**\n * Throw a given error.\n *\n * @param {Error | null | undefined} [error]\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (Object.prototype.toString.call(value) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn prototype === null || prototype === Object.prototype;\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: any[]) => void} Callback\n * @typedef {(...input: any[]) => any} Middleware\n *\n * @typedef {(...input: any[]) => void} Run Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Middleware[]} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {any[]} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @param {any[]} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware(...parameters)\n    } catch (error) {\n      /** @type {Error} */\n      const exception = error\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const minpath = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | null | undefined} [extname]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, extname) {\n  if (extname !== undefined && typeof extname !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (\n    extname === undefined ||\n    extname.length === 0 ||\n    extname.length > path.length\n  ) {\n    while (index--) {\n      if (path.codePointAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (extname === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extnameIndex = extname.length - 1\n\n  while (index--) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extnameIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.codePointAt(index) === extname.codePointAt(extnameIndex--)) {\n          if (extnameIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extnameIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.codePointAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.codePointAt(0) === 47 /* `/` */\n      ? '//'\n      : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.codePointAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.codePointAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.codePointAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.codePointAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.codePointAt(result.length - 1) !== 46 /* `.` */ ||\n          result.codePointAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const minproc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron), so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for auth attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js#L720>\nexport function isUrl(fileUrlOrPath) {\n  return Boolean(\n    fileUrlOrPath !== null &&\n      typeof fileUrlOrPath === 'object' &&\n      'href' in fileUrlOrPath &&\n      fileUrlOrPath.href &&\n      'protocol' in fileUrlOrPath &&\n      fileUrlOrPath.protocol &&\n      // @ts-expect-error: indexing is fine.\n      fileUrlOrPath.auth === undefined\n  )\n}\n","import {isUrl} from './minurl.shared.js'\n\nexport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js>\n\n/**\n * @param {URL | string} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.codePointAt(index) === 37 /* `%` */ &&\n      pathname.codePointAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.codePointAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n","/**\n * @import {Node, Point, Position} from 'unist'\n * @import {Options as MessageOptions} from 'vfile-message'\n * @import {Compatible, Data, Map, Options, Value} from 'vfile'\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {VFileMessage} from 'vfile-message'\nimport {minpath} from '#minpath'\nimport {minproc} from '#minproc'\nimport {urlToPath, isUrl} from '#minurl'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n */\nconst order = /** @type {const} */ ([\n  'history',\n  'path',\n  'basename',\n  'stem',\n  'extname',\n  'dirname'\n])\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Uint8Array` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else if (typeof value === 'string' || isUint8Array(value)) {\n      options = {value}\n    } else {\n      options = value\n    }\n\n    /* eslint-disable no-unused-expressions */\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    // Prevent calling `cwd` (which could be expensive) if it’s not needed;\n    // the empty string will be overridden in the next block.\n    this.cwd = 'cwd' in options ? '' : minproc.cwd()\n\n    /**\n     * Place to store custom info (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of file paths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const field = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        field in options &&\n        options[field] !== undefined &&\n        options[field] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[field] = field === 'history' ? [...options[field]] : options[field]\n      }\n    }\n\n    /** @type {string} */\n    let field\n\n    // Set non-path related properties.\n    for (field in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(field)) {\n        // @ts-expect-error: fine to set other things.\n        this[field] = options[field]\n      }\n    }\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   *\n   * @returns {string | undefined}\n   *   Basename.\n   */\n  get basename() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path)\n      : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} basename\n   *   Basename.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = minpath.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   *\n   * @returns {string | undefined}\n   *   Dirname.\n   */\n  get dirname() {\n    return typeof this.path === 'string'\n      ? minpath.dirname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} dirname\n   *   Dirname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = minpath.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   *\n   * @returns {string | undefined}\n   *   Extname.\n   */\n  get extname() {\n    return typeof this.path === 'string'\n      ? minpath.extname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} extname\n   *   Extname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.codePointAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = minpath.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   *   Path.\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {URL | string} path\n   *   Path.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * @returns {string | undefined}\n   *   Stem.\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} stem\n   *   Stem.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = minpath.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  // Normal prototypal methods.\n  /**\n   * Create a fatal message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `true` (error; file not usable)\n   * and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Never.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n\n  /**\n   * Create an info message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `undefined` (info; change\n   * likely not needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = undefined\n\n    return message\n  }\n\n  /**\n   * Create a message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `false` (warning; change may be\n   * needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(causeOrReason, optionsOrParentOrPlace, origin) {\n    const message = new VFileMessage(\n      // @ts-expect-error: the overloads are fine.\n      causeOrReason,\n      optionsOrParentOrPlace,\n      origin\n    )\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * > **Note**: which encodings are supported depends on the engine.\n   * > For info on Node.js, see:\n   * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.\n   *\n   * @param {string | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Uint8Array`\n   *   (default: `'utf-8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    if (this.value === undefined) {\n      return ''\n    }\n\n    if (typeof this.value === 'string') {\n      return this.value\n    }\n\n    const decoder = new TextDecoder(encoding || undefined)\n    return decoder.decode(this.value)\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {undefined}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(minpath.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + minpath.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","export const CallableInstance =\n  /**\n   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}\n   */\n  (\n    /** @type {unknown} */\n    (\n      /**\n       * @this {Function}\n       * @param {string | symbol} property\n       * @returns {(...parameters: Array<unknown>) => unknown}\n       */\n      function (property) {\n        const self = this\n        const constr = self.constructor\n        const proto = /** @type {Record<string | symbol, Function>} */ (\n          // Prototypes do exist.\n          // type-coverage:ignore-next-line\n          constr.prototype\n        )\n        const value = proto[property]\n        /** @type {(...parameters: Array<unknown>) => unknown} */\n        const apply = function () {\n          return value.apply(apply, arguments)\n        }\n\n        Object.setPrototypeOf(apply, proto)\n\n        // Not needed for us in `unified`: we only call this on the `copy`\n        // function,\n        // and we don't need to add its fields (`length`, `name`)\n        // over.\n        // See also: GH-246.\n        // const names = Object.getOwnPropertyNames(value)\n        //\n        // for (const p of names) {\n        //   const descriptor = Object.getOwnPropertyDescriptor(value, p)\n        //   if (descriptor) Object.defineProperty(apply, p, descriptor)\n        // }\n\n        return apply\n      }\n    )\n  )\n","/**\n * @typedef {import('trough').Pipeline} Pipeline\n *\n * @typedef {import('unist').Node} Node\n *\n * @typedef {import('vfile').Compatible} Compatible\n * @typedef {import('vfile').Value} Value\n *\n * @typedef {import('../index.js').CompileResultMap} CompileResultMap\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Settings} Settings\n */\n\n/**\n * @typedef {CompileResultMap[keyof CompileResultMap]} CompileResults\n *   Acceptable results from compilers.\n *\n *   To register custom results, add them to\n *   {@linkcode CompileResultMap}.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the compiler receives (default: `Node`).\n * @template {CompileResults} [Result=CompileResults]\n *   The thing that the compiler yields (default: `CompileResults`).\n * @callback Compiler\n *   A **compiler** handles the compiling of a syntax tree to something else\n *   (in most cases, text) (TypeScript type).\n *\n *   It is used in the stringify phase and called with a {@linkcode Node}\n *   and {@linkcode VFile} representation of the document to compile.\n *   It should return the textual representation of the given tree (typically\n *   `string`).\n *\n *   > **Note**: unified typically compiles by serializing: most compilers\n *   > return `string` (or `Uint8Array`).\n *   > Some compilers, such as the one configured with\n *   > [`rehype-react`][rehype-react], return other values (in this case, a\n *   > React tree).\n *   > If you’re using a compiler that doesn’t serialize, expect different\n *   > result values.\n *   >\n *   > To register custom results in TypeScript, add them to\n *   > {@linkcode CompileResultMap}.\n *\n *   [rehype-react]: https://github.com/rehypejs/rehype-react\n * @param {Tree} tree\n *   Tree to compile.\n * @param {VFile} file\n *   File associated with `tree`.\n * @returns {Result}\n *   New content: compiled text (`string` or `Uint8Array`, for `file.value`) or\n *   something else (for `file.result`).\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the parser yields (default: `Node`)\n * @callback Parser\n *   A **parser** handles the parsing of text to a syntax tree.\n *\n *   It is used in the parse phase and is called with a `string` and\n *   {@linkcode VFile} of the document to parse.\n *   It must return the syntax tree representation of the given file\n *   ({@linkcode Node}).\n * @param {string} document\n *   Document to parse.\n * @param {VFile} file\n *   File associated with `document`.\n * @returns {Tree}\n *   Node representing the given file.\n */\n\n/**\n * @typedef {(\n *   Plugin<Array<any>, any, any> |\n *   PluginTuple<Array<any>, any, any> |\n *   Preset\n * )} Pluggable\n *   Union of the different ways to add plugins and settings.\n */\n\n/**\n * @typedef {Array<Pluggable>} PluggableList\n *   List of plugins and presets.\n */\n\n// Note: we can’t use `callback` yet as it messes up `this`:\n//  <https://github.com/microsoft/TypeScript/issues/55197>.\n/**\n * @template {Array<unknown>} [PluginParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=Node]\n *   Value that is expected as input (default: `Node`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=Input]\n *   Value that is yielded as output (default: `Input`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   (this: Processor, ...parameters: PluginParameters) =>\n *     Input extends string ? // Parser.\n *        Output extends Node | undefined ? undefined | void : never :\n *     Output extends CompileResults ? // Compiler.\n *        Input extends Node | undefined ? undefined | void : never :\n *     Transformer<\n *       Input extends Node ? Input : Node,\n *       Output extends Node ? Output : Node\n *     > | undefined | void\n * )} Plugin\n *   Single plugin.\n *\n *   Plugins configure the processors they are applied on in the following\n *   ways:\n *\n *   *   they change the processor, such as the parser, the compiler, or by\n *       configuring data\n *   *   they specify how to handle trees and files\n *\n *   In practice, they are functions that can receive options and configure the\n *   processor (`this`).\n *\n *   > **Note**: plugins are called when the processor is *frozen*, not when\n *   > they are applied.\n */\n\n/**\n * Tuple of a plugin and its configuration.\n *\n * The first item is a plugin, the rest are its parameters.\n *\n * @template {Array<unknown>} [TupleParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=undefined]\n *   Value that is expected as input (optional).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=undefined] (optional).\n *   Value that is yielded as output.\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   [\n *     plugin: Plugin<TupleParameters, Input, Output>,\n *     ...parameters: TupleParameters\n *   ]\n * )} PluginTuple\n */\n\n/**\n * @typedef Preset\n *   Sharable configuration.\n *\n *   They can contain plugins and settings.\n * @property {PluggableList | undefined} [plugins]\n *   List of plugins and presets (optional).\n * @property {Settings | undefined} [settings]\n *   Shared settings for parsers and compilers (optional).\n */\n\n/**\n * @template {VFile} [File=VFile]\n *   The file that the callback receives (default: `VFile`).\n * @callback ProcessCallback\n *   Callback called when the process is done.\n *\n *   Called with either an error or a result.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {File | undefined} [file]\n *   Processed file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The tree that the callback receives (default: `Node`).\n * @callback RunCallback\n *   Callback called when transformers are done.\n *\n *   Called with either an error or results.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {Tree | undefined} [tree]\n *   Transformed tree (optional).\n * @param {VFile | undefined} [file]\n *   File (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Output=Node]\n *   Node type that the transformer yields (default: `Node`).\n * @callback TransformCallback\n *   Callback passed to transforms.\n *\n *   If the signature of a `transformer` accepts a third argument, the\n *   transformer may perform asynchronous operations, and must call it.\n * @param {Error | undefined} [error]\n *   Fatal error to stop the process (optional).\n * @param {Output | undefined} [tree]\n *   New, changed, tree (optional).\n * @param {VFile | undefined} [file]\n *   New, changed, file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Input=Node]\n *   Node type that the transformer expects (default: `Node`).\n * @template {Node} [Output=Input]\n *   Node type that the transformer yields (default: `Input`).\n * @callback Transformer\n *   Transformers handle syntax trees and files.\n *\n *   They are functions that are called each time a syntax tree and file are\n *   passed through the run phase.\n *   When an error occurs in them (either because it’s thrown, returned,\n *   rejected, or passed to `next`), the process stops.\n *\n *   The run phase is handled by [`trough`][trough], see its documentation for\n *   the exact semantics of these functions.\n *\n *   > **Note**: you should likely ignore `next`: don’t accept it.\n *   > it supports callback-style async work.\n *   > But promises are likely easier to reason about.\n *\n *   [trough]: https://github.com/wooorm/trough#function-fninput-next\n * @param {Input} tree\n *   Tree to handle.\n * @param {VFile} file\n *   File to handle.\n * @param {TransformCallback<Output>} next\n *   Callback.\n * @returns {(\n *   Promise<Output | undefined | void> |\n *   Promise<never> | // For some reason this is needed separately.\n *   Output |\n *   Error |\n *   undefined |\n *   void\n * )}\n *   If you accept `next`, nothing.\n *   Otherwise:\n *\n *   *   `Error` — fatal error to stop the process\n *   *   `Promise<undefined>` or `undefined` — the next transformer keeps using\n *       same tree\n *   *   `Promise<Node>` or `Node` — new, changed, tree\n */\n\n/**\n * @template {Node | undefined} ParseTree\n *   Output of `parse`.\n * @template {Node | undefined} HeadTree\n *   Input for `run`.\n * @template {Node | undefined} TailTree\n *   Output for `run`.\n * @template {Node | undefined} CompileTree\n *   Input of `stringify`.\n * @template {CompileResults | undefined} CompileResult\n *   Output of `stringify`.\n * @template {Node | string | undefined} Input\n *   Input of plugin.\n * @template Output\n *   Output of plugin (optional).\n * @typedef {(\n *   Input extends string\n *     ? Output extends Node | undefined\n *       ? // Parser.\n *         Processor<\n *           Output extends undefined ? ParseTree : Output,\n *           HeadTree,\n *           TailTree,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Output extends CompileResults\n *     ? Input extends Node | undefined\n *       ? // Compiler.\n *         Processor<\n *           ParseTree,\n *           HeadTree,\n *           TailTree,\n *           Input extends undefined ? CompileTree : Input,\n *           Output extends undefined ? CompileResult : Output\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Input extends Node | undefined\n *     ? Output extends Node | undefined\n *       ? // Transform.\n *         Processor<\n *           ParseTree,\n *           HeadTree extends undefined ? Input : HeadTree,\n *           Output extends undefined ? TailTree : Output,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : // Unknown.\n *       Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n * )} UsePlugin\n *   Create a processor based on the input/output of a {@link Plugin plugin}.\n */\n\n/**\n * @template {CompileResults | undefined} Result\n *   Node type that the transformer yields.\n * @typedef {(\n *   Result extends Value | undefined ?\n *     VFile :\n *     VFile & {result: Result}\n *   )} VFileWithOutput\n *   Type to generate a {@linkcode VFile} corresponding to a compiler result.\n *\n *   If a result that is not acceptable on a `VFile` is used, that will\n *   be stored on the `result` field of {@linkcode VFile}.\n */\n\nimport {bail} from 'bail'\nimport extend from 'extend'\nimport {ok as assert} from 'devlop'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\nimport {CallableInstance} from './callable-instance.js'\n\n// To do: next major: drop `Compiler`, `Parser`: prefer lowercase.\n\n// To do: we could start yielding `never` in TS when a parser is missing and\n// `parse` is called.\n// Currently, we allow directly setting `processor.parser`, which is untyped.\n\nconst own = {}.hasOwnProperty\n\n/**\n * @template {Node | undefined} [ParseTree=undefined]\n *   Output of `parse` (optional).\n * @template {Node | undefined} [HeadTree=undefined]\n *   Input for `run` (optional).\n * @template {Node | undefined} [TailTree=undefined]\n *   Output for `run` (optional).\n * @template {Node | undefined} [CompileTree=undefined]\n *   Input of `stringify` (optional).\n * @template {CompileResults | undefined} [CompileResult=undefined]\n *   Output of `stringify` (optional).\n * @extends {CallableInstance<[], Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>>}\n */\nexport class Processor extends CallableInstance {\n  /**\n   * Create a processor.\n   */\n  constructor() {\n    // If `Processor()` is called (w/o new), `copy` is called instead.\n    super('copy')\n\n    /**\n     * Compiler to use (deprecated).\n     *\n     * @deprecated\n     *   Use `compiler` instead.\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.Compiler = undefined\n\n    /**\n     * Parser to use (deprecated).\n     *\n     * @deprecated\n     *   Use `parser` instead.\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.Parser = undefined\n\n    // Note: the following fields are considered private.\n    // However, they are needed for tests, and TSC generates an untyped\n    // `private freezeIndex` field for, which trips `type-coverage` up.\n    // Instead, we use `@deprecated` to visualize that they shouldn’t be used.\n    /**\n     * Internal list of configured plugins.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Array<PluginTuple<Array<unknown>>>}\n     */\n    this.attachers = []\n\n    /**\n     * Compiler to use.\n     *\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.compiler = undefined\n\n    /**\n     * Internal state to track where we are while freezing.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {number}\n     */\n    this.freezeIndex = -1\n\n    /**\n     * Internal state to track whether we’re frozen.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {boolean | undefined}\n     */\n    this.frozen = undefined\n\n    /**\n     * Internal state.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Data}\n     */\n    this.namespace = {}\n\n    /**\n     * Parser to use.\n     *\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.parser = undefined\n\n    /**\n     * Internal list of configured transformers.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Pipeline}\n     */\n    this.transformers = trough()\n  }\n\n  /**\n   * Copy a processor.\n   *\n   * @deprecated\n   *   This is a private internal method and should not be used.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   New *unfrozen* processor ({@linkcode Processor}) that is\n   *   configured to work the same as its ancestor.\n   *   When the descendant processor is configured in the future it does not\n   *   affect the ancestral processor.\n   */\n  copy() {\n    // Cast as the type parameters will be the same after attaching.\n    const destination =\n      /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */ (\n        new Processor()\n      )\n    let index = -1\n\n    while (++index < this.attachers.length) {\n      const attacher = this.attachers[index]\n      destination.use(...attacher)\n    }\n\n    destination.data(extend(true, {}, this.namespace))\n\n    return destination\n  }\n\n  /**\n   * Configure the processor with info available to all plugins.\n   * Information is stored in an object.\n   *\n   * Typically, options can be given to a specific plugin, but sometimes it\n   * makes sense to have information shared with several plugins.\n   * For example, a list of HTML elements that are self-closing, which is\n   * needed during all phases.\n   *\n   * > **Note**: setting information cannot occur on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * > **Note**: to register custom data in TypeScript, augment the\n   * > {@linkcode Data} interface.\n   *\n   * @example\n   *   This example show how to get and set info:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   const processor = unified().data('alpha', 'bravo')\n   *\n   *   processor.data('alpha') // => 'bravo'\n   *\n   *   processor.data() // => {alpha: 'bravo'}\n   *\n   *   processor.data({charlie: 'delta'})\n   *\n   *   processor.data() // => {charlie: 'delta'}\n   *   ```\n   *\n   * @template {keyof Data} Key\n   *\n   * @overload\n   * @returns {Data}\n   *\n   * @overload\n   * @param {Data} dataset\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Key} key\n   * @returns {Data[Key]}\n   *\n   * @overload\n   * @param {Key} key\n   * @param {Data[Key]} value\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @param {Data | Key} [key]\n   *   Key to get or set, or entire dataset to set, or nothing to get the\n   *   entire dataset (optional).\n   * @param {Data[Key]} [value]\n   *   Value to set (optional).\n   * @returns {unknown}\n   *   The current processor when setting, the value at `key` when getting, or\n   *   the entire dataset when getting without key.\n   */\n  data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', this.frozen)\n        this.namespace[key] = value\n        return this\n      }\n\n      // Get `key`.\n      return (own.call(this.namespace, key) && this.namespace[key]) || undefined\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', this.frozen)\n      this.namespace = key\n      return this\n    }\n\n    // Get space.\n    return this.namespace\n  }\n\n  /**\n   * Freeze a processor.\n   *\n   * Frozen processors are meant to be extended and not to be configured\n   * directly.\n   *\n   * When a processor is frozen it cannot be unfrozen.\n   * New processors working the same way can be created by calling the\n   * processor.\n   *\n   * It’s possible to freeze processors explicitly by calling `.freeze()`.\n   * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,\n   * `.stringify()`, `.process()`, or `.processSync()` are called.\n   *\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   The current processor.\n   */\n  freeze() {\n    if (this.frozen) {\n      return this\n    }\n\n    // Cast so that we can type plugins easier.\n    // Plugins are supposed to be usable on different processors, not just on\n    // this exact processor.\n    const self = /** @type {Processor} */ (/** @type {unknown} */ (this))\n\n    while (++this.freezeIndex < this.attachers.length) {\n      const [attacher, ...options] = this.attachers[this.freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      const transformer = attacher.call(self, ...options)\n\n      if (typeof transformer === 'function') {\n        this.transformers.use(transformer)\n      }\n    }\n\n    this.frozen = true\n    this.freezeIndex = Number.POSITIVE_INFINITY\n\n    return this\n  }\n\n  /**\n   * Parse text to a syntax tree.\n   *\n   * > **Note**: `parse` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `parse` performs the parse phase, not the run phase or other\n   * > phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   file to parse (optional); typically `string` or `VFile`; any value\n   *   accepted as `x` in `new VFile(x)`.\n   * @returns {ParseTree extends undefined ? Node : ParseTree}\n   *   Syntax tree representing `file`.\n   */\n  parse(file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const parser = this.parser || this.Parser\n    assertParser('parse', parser)\n    return parser(String(realFile), realFile)\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * > **Note**: `process` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `process` performs the parse, run, and stringify phases.\n   *\n   * @overload\n   * @param {Compatible | undefined} file\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<VFileWithOutput<CompileResult>>}\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`]; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]\n   *   Callback (optional).\n   * @returns {Promise<VFile> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise a promise, rejected with a fatal error or resolved with the\n   *   processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  process(file, done) {\n    const self = this\n\n    this.freeze()\n    assertParser('process', this.parser || this.Parser)\n    assertCompiler('process', this.compiler || this.Compiler)\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {((file: VFileWithOutput<CompileResult>) => undefined | void) | undefined} resolve\n     * @param {(error: Error | undefined) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      const realFile = vfile(file)\n      // Assume `ParseTree` (the result of the parser) matches `HeadTree` (the\n      // input of the first transform).\n      const parseTree =\n        /** @type {HeadTree extends undefined ? Node : HeadTree} */ (\n          /** @type {unknown} */ (self.parse(realFile))\n        )\n\n      self.run(parseTree, realFile, function (error, tree, file) {\n        if (error || !tree || !file) {\n          return realDone(error)\n        }\n\n        // Assume `TailTree` (the output of the last transform) matches\n        // `CompileTree` (the input of the compiler).\n        const compileTree =\n          /** @type {CompileTree extends undefined ? Node : CompileTree} */ (\n            /** @type {unknown} */ (tree)\n          )\n\n        const compileResult = self.stringify(compileTree, file)\n\n        if (looksLikeAValue(compileResult)) {\n          file.value = compileResult\n        } else {\n          file.result = compileResult\n        }\n\n        realDone(error, /** @type {VFileWithOutput<CompileResult>} */ (file))\n      })\n\n      /**\n       * @param {Error | undefined} error\n       * @param {VFileWithOutput<CompileResult> | undefined} [file]\n       * @returns {undefined}\n       */\n      function realDone(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `processSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `processSync` performs the parse, run, and stringify phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @returns {VFileWithOutput<CompileResult>}\n   *   The processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  processSync(file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {VFileWithOutput<CompileResult> | undefined} */\n    let result\n\n    this.freeze()\n    assertParser('processSync', this.parser || this.Parser)\n    assertCompiler('processSync', this.compiler || this.Compiler)\n\n    this.process(file, realDone)\n    assertDone('processSync', 'process', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n\n    return result\n\n    /**\n     * @type {ProcessCallback<VFileWithOutput<CompileResult>>}\n     */\n    function realDone(error, file) {\n      complete = true\n      bail(error)\n      result = file\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * > **Note**: `run` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `run` performs the run phase, not other phases.\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} file\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree>}\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {(\n   *   RunCallback<TailTree extends undefined ? Node : TailTree> |\n   *   Compatible\n   * )} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]\n   *   Callback (optional).\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise, a promise rejected with a fatal error or resolved with the\n   *   transformed tree.\n   */\n  run(tree, file, done) {\n    assertNode(tree)\n    this.freeze()\n\n    const transformers = this.transformers\n\n    if (!done && typeof file === 'function') {\n      done = file\n      file = undefined\n    }\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {(\n     *   ((tree: TailTree extends undefined ? Node : TailTree) => undefined | void) |\n     *   undefined\n     * )} resolve\n     * @param {(error: Error) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      assert(\n        typeof file !== 'function',\n        '`file` can’t be a `done` anymore, we checked'\n      )\n      const realFile = vfile(file)\n      transformers.run(tree, realFile, realDone)\n\n      /**\n       * @param {Error | undefined} error\n       * @param {Node} outputTree\n       * @param {VFile} file\n       * @returns {undefined}\n       */\n      function realDone(error, outputTree, file) {\n        const resultingTree =\n          /** @type {TailTree extends undefined ? Node : TailTree} */ (\n            outputTree || tree\n          )\n\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(resultingTree)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, resultingTree, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `runSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `runSync` performs the run phase, not other phases.\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {TailTree extends undefined ? Node : TailTree}\n   *   Transformed tree.\n   */\n  runSync(tree, file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {(TailTree extends undefined ? Node : TailTree) | undefined} */\n    let result\n\n    this.run(tree, file, realDone)\n\n    assertDone('runSync', 'run', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n    return result\n\n    /**\n     * @type {RunCallback<TailTree extends undefined ? Node : TailTree>}\n     */\n    function realDone(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * Compile a syntax tree.\n   *\n   * > **Note**: `stringify` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `stringify` performs the stringify phase, not the run phase\n   * > or other phases.\n   *\n   * @param {CompileTree extends undefined ? Node : CompileTree} tree\n   *   Tree to compile.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {CompileResult extends undefined ? Value : CompileResult}\n   *   Textual representation of the tree (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most compilers\n   *   > return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  stringify(tree, file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const compiler = this.compiler || this.Compiler\n    assertCompiler('stringify', compiler)\n    assertNode(tree)\n\n    return compiler(tree, realFile)\n  }\n\n  /**\n   * Configure the processor to use a plugin, a list of usable values, or a\n   * preset.\n   *\n   * If the processor is already using a plugin, the previous plugin\n   * configuration is changed based on the options that are passed in.\n   * In other words, the plugin is not added a second time.\n   *\n   * > **Note**: `use` cannot be called on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * @example\n   *   There are many ways to pass plugins to `.use()`.\n   *   This example gives an overview:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   unified()\n   *     // Plugin with options:\n   *     .use(pluginA, {x: true, y: true})\n   *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n   *     .use(pluginA, {y: false, z: true})\n   *     // Plugins:\n   *     .use([pluginB, pluginC])\n   *     // Two plugins, the second with options:\n   *     .use([pluginD, [pluginE, {}]])\n   *     // Preset with plugins and settings:\n   *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n   *     // Settings only:\n   *     .use({settings: {position: false}})\n   *   ```\n   *\n   * @template {Array<unknown>} [Parameters=[]]\n   * @template {Node | string | undefined} [Input=undefined]\n   * @template [Output=Input]\n   *\n   * @overload\n   * @param {Preset | null | undefined} [preset]\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {PluggableList} list\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Plugin<Parameters, Input, Output>} plugin\n   * @param {...(Parameters | [boolean])} parameters\n   * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}\n   *\n   * @param {PluggableList | Plugin | Preset | null | undefined} value\n   *   Usable value.\n   * @param {...unknown} parameters\n   *   Parameters, when a plugin is given as a usable value.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   Current processor.\n   */\n  use(value, ...parameters) {\n    const attachers = this.attachers\n    const namespace = this.namespace\n\n    assertUnfrozen('use', this.frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, parameters)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    return this\n\n    /**\n     * @param {Pluggable} value\n     * @returns {undefined}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value, [])\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...parameters] =\n            /** @type {PluginTuple<Array<unknown>>} */ (value)\n          addPlugin(plugin, parameters)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {undefined}\n     */\n    function addPreset(result) {\n      if (!('plugins' in result) && !('settings' in result)) {\n        throw new Error(\n          'Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither'\n        )\n      }\n\n      addList(result.plugins)\n\n      if (result.settings) {\n        namespace.settings = extend(true, namespace.settings, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList | null | undefined} plugins\n     * @returns {undefined}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {Array<unknown>} parameters\n     * @returns {undefined}\n     */\n    function addPlugin(plugin, parameters) {\n      let index = -1\n      let entryIndex = -1\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entryIndex = index\n          break\n        }\n      }\n\n      if (entryIndex === -1) {\n        attachers.push([plugin, ...parameters])\n      }\n      // Only set if there was at least a `primary` value, otherwise we’d change\n      // `arguments.length`.\n      else if (parameters.length > 0) {\n        let [primary, ...rest] = parameters\n        const currentPrimary = attachers[entryIndex][1]\n        if (isPlainObj(currentPrimary) && isPlainObj(primary)) {\n          primary = extend(true, currentPrimary, primary)\n        }\n\n        attachers[entryIndex] = [plugin, primary, ...rest]\n      }\n    }\n  }\n}\n\n// Note: this returns a *callable* instance.\n// That’s why it’s documented as a function.\n/**\n * Create a new processor.\n *\n * @example\n *   This example shows how a new processor can be created (from `remark`) and linked\n *   to **stdin**(4) and **stdout**(4).\n *\n *   ```js\n *   import process from 'node:process'\n *   import concatStream from 'concat-stream'\n *   import {remark} from 'remark'\n *\n *   process.stdin.pipe(\n *     concatStream(function (buf) {\n *       process.stdout.write(String(remark().processSync(buf)))\n *     })\n *   )\n *   ```\n *\n * @returns\n *   New *unfrozen* processor (`processor`).\n *\n *   This processor is configured to work the same as its ancestor.\n *   When the descendant processor is configured in the future it does not\n *   affect the ancestral processor.\n */\nexport const unified = new Processor().freeze()\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is Value}\n */\nfunction looksLikeAValue(value) {\n  return typeof value === 'string' || isUint8Array(value)\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","// Register `Raw` in tree:\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-to-jsx-runtime').Components} JsxRuntimeComponents\n * @typedef {import('remark-rehype').Options} RemarkRehypeOptions\n * @typedef {import('unist-util-visit').BuildVisitor<Root>} Visitor\n * @typedef {import('unified').PluggableList} PluggableList\n */\n\n/**\n * @callback AllowElement\n *   Filter elements.\n * @param {Readonly<Element>} element\n *   Element to check.\n * @param {number} index\n *   Index of `element` in `parent`.\n * @param {Readonly<Parents> | undefined} parent\n *   Parent of `element`.\n * @returns {boolean | null | undefined}\n *   Whether to allow `element` (default: `false`).\n *\n * @typedef {Partial<JsxRuntimeComponents>} Components\n *   Map tag names to components.\n *\n * @typedef Deprecation\n *   Deprecation.\n * @property {string} from\n *   Old field.\n * @property {string} id\n *   ID in readme.\n * @property {keyof Options} [to]\n *   New field.\n *\n * @typedef Options\n *   Configuration.\n * @property {AllowElement | null | undefined} [allowElement]\n *   Filter elements (optional);\n *   `allowedElements` / `disallowedElements` is used first.\n * @property {ReadonlyArray<string> | null | undefined} [allowedElements]\n *   Tag names to allow (default: all tag names);\n *   cannot combine w/ `disallowedElements`.\n * @property {string | null | undefined} [children]\n *   Markdown.\n * @property {string | null | undefined} [className]\n *   Wrap in a `div` with this class name.\n * @property {Components | null | undefined} [components]\n *   Map tag names to components.\n * @property {ReadonlyArray<string> | null | undefined} [disallowedElements]\n *   Tag names to disallow (default: `[]`);\n *   cannot combine w/ `allowedElements`.\n * @property {PluggableList | null | undefined} [rehypePlugins]\n *   List of rehype plugins to use.\n * @property {PluggableList | null | undefined} [remarkPlugins]\n *   List of remark plugins to use.\n * @property {Readonly<RemarkRehypeOptions> | null | undefined} [remarkRehypeOptions]\n *   Options to pass through to `remark-rehype`.\n * @property {boolean | null | undefined} [skipHtml=false]\n *   Ignore HTML in markdown completely (default: `false`).\n * @property {boolean | null | undefined} [unwrapDisallowed=false]\n *   Extract (unwrap) what’s in disallowed elements (default: `false`);\n *   normally when say `strong` is not allowed, it and it’s children are dropped,\n *   with `unwrapDisallowed` the element itself is replaced by its children.\n * @property {UrlTransform | null | undefined} [urlTransform]\n *   Change URLs (default: `defaultUrlTransform`)\n *\n * @callback UrlTransform\n *   Transform all URLs.\n * @param {string} url\n *   URL.\n * @param {string} key\n *   Property name (example: `'href'`).\n * @param {Readonly<Element>} node\n *   Node.\n * @returns {string | null | undefined}\n *   Transformed URL (optional).\n */\n\nimport {unreachable} from 'devlop'\nimport {toJsxRuntime} from 'hast-util-to-jsx-runtime'\nimport {urlAttributes} from 'html-url-attributes'\n// @ts-expect-error: untyped.\nimport {Fragment, jsx, jsxs} from 'react/jsx-runtime'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport {unified} from 'unified'\nimport {visit} from 'unist-util-visit'\nimport {VFile} from 'vfile'\n\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {PluggableList} */\nconst emptyPlugins = []\n/** @type {Readonly<RemarkRehypeOptions>} */\nconst emptyRemarkRehypeOptions = {allowDangerousHtml: true}\nconst safeProtocol = /^(https?|ircs?|mailto|xmpp)$/i\n\n// Mutable because we `delete` any time it’s used and a message is sent.\n/** @type {ReadonlyArray<Readonly<Deprecation>>} */\nconst deprecations = [\n  {from: 'astPlugins', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'allowDangerousHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {\n    from: 'allowNode',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowElement'\n  },\n  {\n    from: 'allowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowedElements'\n  },\n  {\n    from: 'disallowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'disallowedElements'\n  },\n  {from: 'escapeHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'includeElementIndex', id: '#remove-includeelementindex'},\n  {\n    from: 'includeNodeIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  },\n  {from: 'linkTarget', id: 'remove-linktarget'},\n  {from: 'plugins', id: 'change-plugins-to-remarkplugins', to: 'remarkPlugins'},\n  {from: 'rawSourcePos', id: '#remove-rawsourcepos'},\n  {from: 'renderers', id: 'change-renderers-to-components', to: 'components'},\n  {from: 'source', id: 'change-source-to-children', to: 'children'},\n  {from: 'sourcePos', id: '#remove-sourcepos'},\n  {from: 'transformImageUri', id: '#add-urltransform', to: 'urlTransform'},\n  {from: 'transformLinkUri', id: '#add-urltransform', to: 'urlTransform'}\n]\n\n/**\n * Component to render markdown.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {JSX.Element}\n *   React element.\n */\nexport function Markdown(options) {\n  const allowedElements = options.allowedElements\n  const allowElement = options.allowElement\n  const children = options.children || ''\n  const className = options.className\n  const components = options.components\n  const disallowedElements = options.disallowedElements\n  const rehypePlugins = options.rehypePlugins || emptyPlugins\n  const remarkPlugins = options.remarkPlugins || emptyPlugins\n  const remarkRehypeOptions = options.remarkRehypeOptions\n    ? {...options.remarkRehypeOptions, ...emptyRemarkRehypeOptions}\n    : emptyRemarkRehypeOptions\n  const skipHtml = options.skipHtml\n  const unwrapDisallowed = options.unwrapDisallowed\n  const urlTransform = options.urlTransform || defaultUrlTransform\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(remarkPlugins)\n    .use(remarkRehype, remarkRehypeOptions)\n    .use(rehypePlugins)\n\n  const file = new VFile()\n\n  if (typeof children === 'string') {\n    file.value = children\n  } else {\n    unreachable(\n      'Unexpected value `' +\n        children +\n        '` for `children` prop, expected `string`'\n    )\n  }\n\n  if (allowedElements && disallowedElements) {\n    unreachable(\n      'Unexpected combined `allowedElements` and `disallowedElements`, expected one or the other'\n    )\n  }\n\n  for (const deprecation of deprecations) {\n    if (Object.hasOwn(options, deprecation.from)) {\n      unreachable(\n        'Unexpected `' +\n          deprecation.from +\n          '` prop, ' +\n          (deprecation.to\n            ? 'use `' + deprecation.to + '` instead'\n            : 'remove it') +\n          ' (see <' +\n          changelog +\n          '#' +\n          deprecation.id +\n          '> for more info)'\n      )\n    }\n  }\n\n  const mdastTree = processor.parse(file)\n  /** @type {Nodes} */\n  let hastTree = processor.runSync(mdastTree, file)\n\n  // Wrap in `div` if there’s a class name.\n  if (className) {\n    hastTree = {\n      type: 'element',\n      tagName: 'div',\n      properties: {className},\n      // Assume no doctypes.\n      children: /** @type {Array<ElementContent>} */ (\n        hastTree.type === 'root' ? hastTree.children : [hastTree]\n      )\n    }\n  }\n\n  visit(hastTree, transform)\n\n  return toJsxRuntime(hastTree, {\n    Fragment,\n    components,\n    ignoreInvalidStyle: true,\n    jsx,\n    jsxs,\n    passKeys: true,\n    passNode: true\n  })\n\n  /** @type {Visitor} */\n  function transform(node, index, parent) {\n    if (node.type === 'raw' && parent && typeof index === 'number') {\n      if (skipHtml) {\n        parent.children.splice(index, 1)\n      } else {\n        parent.children[index] = {type: 'text', value: node.value}\n      }\n\n      return index\n    }\n\n    if (node.type === 'element') {\n      /** @type {string} */\n      let key\n\n      for (key in urlAttributes) {\n        if (\n          Object.hasOwn(urlAttributes, key) &&\n          Object.hasOwn(node.properties, key)\n        ) {\n          const value = node.properties[key]\n          const test = urlAttributes[key]\n          if (test === null || test.includes(node.tagName)) {\n            node.properties[key] = urlTransform(String(value || ''), key, node)\n          }\n        }\n      }\n    }\n\n    if (node.type === 'element') {\n      let remove = allowedElements\n        ? !allowedElements.includes(node.tagName)\n        : disallowedElements\n        ? disallowedElements.includes(node.tagName)\n        : false\n\n      if (!remove && allowElement && typeof index === 'number') {\n        remove = !allowElement(node, index, parent)\n      }\n\n      if (remove && parent && typeof index === 'number') {\n        if (unwrapDisallowed && node.children) {\n          parent.children.splice(index, 1, ...node.children)\n        } else {\n          parent.children.splice(index, 1)\n        }\n\n        return index\n      }\n    }\n  }\n}\n\n/**\n * Make a URL safe.\n *\n * @satisfies {UrlTransform}\n * @param {string} value\n *   URL.\n * @returns {string}\n *   Safe URL.\n */\nexport function defaultUrlTransform(value) {\n  // Same as:\n  // <https://github.com/micromark/micromark/blob/929275e/packages/micromark-util-sanitize-uri/dev/index.js#L34>\n  // But without the `encode` part.\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    safeProtocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { forwardRef } from 'react';\nimport { Box, Flex } from 'reflexbox';\nexport { Box, Flex };\nexport var Text = forwardRef(function (props, ref) {\n  return React.createElement(Box, _extends({\n    ref: ref,\n    tx: \"text\"\n  }, props));\n});\nexport var Heading = forwardRef(function (props, ref) {\n  return React.createElement(Box, _extends({\n    ref: ref,\n    as: \"h2\",\n    tx: \"text\",\n    variant: \"heading\"\n  }, props, {\n    __css: {\n      fontSize: 4,\n      fontFamily: 'heading',\n      fontWeight: 'heading',\n      lineHeight: 'heading'\n    }\n  }));\n});\nexport var Link = forwardRef(function (props, ref) {\n  return React.createElement(Box, _extends({\n    ref: ref,\n    as: \"a\",\n    variant: \"link\"\n  }, props));\n});\nexport var Button = forwardRef(function (props, ref) {\n  return React.createElement(Box, _extends({\n    ref: ref,\n    as: \"button\",\n    tx: \"buttons\",\n    variant: \"primary\"\n  }, props, {\n    __css: {\n      appearance: 'none',\n      display: 'inline-block',\n      textAlign: 'center',\n      lineHeight: 'inherit',\n      textDecoration: 'none',\n      fontSize: 'inherit',\n      px: 3,\n      py: 2,\n      color: 'white',\n      bg: 'primary',\n      border: 0,\n      borderRadius: 4\n    }\n  }));\n});\nexport var Image = forwardRef(function (props, ref) {\n  return React.createElement(Box, _extends({\n    ref: ref,\n    as: \"img\"\n  }, props, {\n    __css: {\n      maxWidth: '100%',\n      height: 'auto'\n    }\n  }));\n});\nexport var Card = forwardRef(function (props, ref) {\n  return React.createElement(Box, _extends({\n    ref: ref,\n    variant: \"card\"\n  }, props));\n});\n","import React, { ReactNode } from \"react\";\nimport { Text } from \"rebass\";\nimport { Components as MarkdownComponents } from \"react-markdown\";\nimport styled from \"styled-components\";\n\nconst StyledLink = styled.a`\n\tdisplay: inline-block;\n\ttransition: color 250ms, text-shadow 250ms;\n\tcolor: ${({ theme }) => theme.colors.darkPrimary};\n\tcursor: pointer;\n\tposition: relative;\n\ttext-decoration: none;\n\n\t&:after {\n\t\tposition: absolute;\n\t\tz-index: -1;\n\t\tbottom: 0px;\n\t\tleft: 50%;\n\t\ttransform: translateX(-50%);\n\t\tcontent: \"\";\n\t\twidth: 100%;\n\t\theight: 3px;\n\t\tbackground-color: ${({ theme }) => theme.colors.primaryAccent};\n\t\ttransition: all 250ms;\n\t}\n\n\t&:hover {\n\t\tcolor: ${({ theme }) => theme.colors.lightPrimary};\n\n\t\t&::after {\n\t\t\theight: 105%;\n\t\t\twidth: 105%;\n\t\t}\n\t}\n`;\n\nconst MarkdownParagraph: React.FC = styled(Text)`\n\tpadding-bottom: 1em;\n\tfont-size: large;\n\tline-height: 2em;\n\n\t@media (max-width: 600px) {\n\t\tline-height: 1.5em;\n\t\tfont-size: medium;\n\t}\n`;\n\nconst MarkdownList = styled.ul`\n\tmargin: 0;\n`;\n\nconst MarkdownListItem = styled.li`\n\tmargin-bottom: 1em;\n\n\tfont-size: large;\n\tline-height: 2em;\n\n\t@media (max-width: 600px) {\n\t\tline-height: 1.5em;\n\t\tfont-size: medium;\n\t}\n`;\n\ntype LinkProps = {\n\thref?: string;\n\tchildren: ReactNode;\n};\n\nconst MarkdownLink = ({ href, children }: LinkProps) => {\n\tconst isInnerLink = href?.startsWith(\"#\");\n\n\treturn isInnerLink ? (\n\t\t<StyledLink href={href}>{children}</StyledLink>\n\t) : (\n\t\t<StyledLink href={href} target=\"_blank\" rel=\"noreferrer\">\n\t\t\t{children}\n\t\t</StyledLink>\n\t);\n};\n\nconst Components: MarkdownComponents = {\n\tp: MarkdownParagraph,\n\tul: MarkdownList,\n\tli: MarkdownListItem,\n\ta: MarkdownLink,\n};\n\nexport default Components;\n","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport components from \"../components/MarkdownComponents\";\nimport { Link } from \"gatsby\";\nimport ModalRoutingContext from \"../components/ModalRoutingContext\";\nimport { ThemeProvider } from \"styled-components\";\nimport { theme } from \"../theme\";\nimport { Theme } from \"@rebass/preset\";\n\n// @ts-ignore\nconst Modal = ({ location }) => {\n\tif (!location.state) return <></>;\n\tconst content = <ReactMarkdown children={location.state.description} components={components} />;\n\n\treturn <ThemeProvider theme={theme as Theme}>\n\t\t<ModalRoutingContext.Consumer>\n\t\t\t{/* @ts-ignore */}\n\t\t\t{({ modal, closeTo }) => (\n\t\t\t\tmodal ? (\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<Link to={closeTo!}>\n\t\t\t\t\t\t\t<button className=\"closeButton\"></button>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t{content}\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{content}\n\t\t\t\t\t</>\n\t\t\t\t)\n\t\t\t)}\n  \t</ModalRoutingContext.Consumer>\n\t</ThemeProvider>;\n}\n\n\nexport default Modal;\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function (style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function (node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = StyleToObject;\nvar inline_style_parser_1 = __importDefault(require(\"inline-style-parser\"));\n/**\n * Parses inline style to object.\n *\n * @param style - Inline style.\n * @param iterator - Iterator.\n * @returns - Style object or null.\n *\n * @example Parsing inline style to object:\n *\n * ```js\n * import parse from 'style-to-object';\n * parse('line-height: 42;'); // { 'line-height': '42' }\n * ```\n */\nfunction StyleToObject(style, iterator) {\n    var styleObject = null;\n    if (!style || typeof style !== 'string') {\n        return styleObject;\n    }\n    var declarations = (0, inline_style_parser_1.default)(style);\n    var hasIterator = typeof iterator === 'function';\n    declarations.forEach(function (declaration) {\n        if (declaration.type !== 'declaration') {\n            return;\n        }\n        var property = declaration.property, value = declaration.value;\n        if (hasIterator) {\n            iterator(property, value, declaration);\n        }\n        else if (value) {\n            styleObject = styleObject || {};\n            styleObject[property] = value;\n        }\n    });\n    return styleObject;\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Flex = exports.Box = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _styled = _interopRequireDefault(require(\"@emotion/styled\"));\n\nvar _styledSystem = require(\"styled-system\");\n\nvar _css = _interopRequireWildcard(require(\"@styled-system/css\"));\n\nvar _shouldForwardProp = _interopRequireDefault(require(\"@styled-system/should-forward-prop\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar sx = function sx(props) {\n  return (0, _css[\"default\"])(props.sx)(props.theme);\n};\n\nvar base = function base(props) {\n  return (0, _css[\"default\"])(props.__css)(props.theme);\n};\n\nvar variant = function variant(_ref) {\n  var theme = _ref.theme,\n      variant = _ref.variant,\n      _ref$tx = _ref.tx,\n      tx = _ref$tx === void 0 ? 'variants' : _ref$tx;\n  return (0, _css[\"default\"])((0, _css.get)(theme, tx + '.' + variant, (0, _css.get)(theme, variant)))(theme);\n};\n\nvar Box = (0, _styled[\"default\"])('div', {\n  shouldForwardProp: _shouldForwardProp[\"default\"]\n})({\n  boxSizing: 'border-box',\n  margin: 0,\n  minWidth: 0\n}, base, variant, sx, function (props) {\n  return props.css;\n}, (0, _styledSystem.compose)(_styledSystem.space, _styledSystem.layout, _styledSystem.typography, _styledSystem.color, _styledSystem.flexbox));\nexports.Box = Box;\nvar Flex = (0, _styled[\"default\"])(Box)({\n  display: 'flex'\n});\nexports.Flex = Flex;","/*\n\nBased off glamor's StyleSheet, thanks Sunil ❤️\n\nhigh performance StyleSheet for css-in-js systems\n\n- uses multiple style tags behind the scenes for millions of rules\n- uses `insertRule` for appending in production for *much* faster performance\n\n// usage\n\nimport { StyleSheet } from '@emotion/sheet'\n\nlet styleSheet = new StyleSheet({ key: '', container: document.head })\n\nstyleSheet.insert('#box { border: 1px solid red; }')\n- appends a css rule into the stylesheet\n\nstyleSheet.flush()\n- empties the stylesheet of all its contents\n\n*/\n// $FlowFixMe\nfunction sheetForTag(tag) {\n  if (tag.sheet) {\n    // $FlowFixMe\n    return tag.sheet;\n  } // this weirdness brought to you by firefox\n\n  /* istanbul ignore next */\n\n\n  for (var i = 0; i < document.styleSheets.length; i++) {\n    if (document.styleSheets[i].ownerNode === tag) {\n      // $FlowFixMe\n      return document.styleSheets[i];\n    }\n  }\n}\n\nfunction createStyleElement(options) {\n  var tag = document.createElement('style');\n  tag.setAttribute('data-emotion', options.key);\n\n  if (options.nonce !== undefined) {\n    tag.setAttribute('nonce', options.nonce);\n  }\n\n  tag.appendChild(document.createTextNode(''));\n  return tag;\n}\n\nvar StyleSheet =\n/*#__PURE__*/\nfunction () {\n  function StyleSheet(options) {\n    this.isSpeedy = options.speedy === undefined ? process.env.NODE_ENV === 'production' : options.speedy;\n    this.tags = [];\n    this.ctr = 0;\n    this.nonce = options.nonce; // key is the value of the data-emotion attribute, it's used to identify different sheets\n\n    this.key = options.key;\n    this.container = options.container;\n    this.before = null;\n  }\n\n  var _proto = StyleSheet.prototype;\n\n  _proto.insert = function insert(rule) {\n    // the max length is how many rules we have per style tag, it's 65000 in speedy mode\n    // it's 1 in dev because we insert source maps that map a single rule to a location\n    // and you can only have one source map per style tag\n    if (this.ctr % (this.isSpeedy ? 65000 : 1) === 0) {\n      var _tag = createStyleElement(this);\n\n      var before;\n\n      if (this.tags.length === 0) {\n        before = this.before;\n      } else {\n        before = this.tags[this.tags.length - 1].nextSibling;\n      }\n\n      this.container.insertBefore(_tag, before);\n      this.tags.push(_tag);\n    }\n\n    var tag = this.tags[this.tags.length - 1];\n\n    if (this.isSpeedy) {\n      var sheet = sheetForTag(tag);\n\n      try {\n        // this is a really hot path\n        // we check the second character first because having \"i\"\n        // as the second character will happen less often than\n        // having \"@\" as the first character\n        var isImportRule = rule.charCodeAt(1) === 105 && rule.charCodeAt(0) === 64; // this is the ultrafast version, works across browsers\n        // the big drawback is that the css won't be editable in devtools\n\n        sheet.insertRule(rule, // we need to insert @import rules before anything else\n        // otherwise there will be an error\n        // technically this means that the @import rules will\n        // _usually_(not always since there could be multiple style tags)\n        // be the first ones in prod and generally later in dev\n        // this shouldn't really matter in the real world though\n        // @import is generally only used for font faces from google fonts and etc.\n        // so while this could be technically correct then it would be slower and larger\n        // for a tiny bit of correctness that won't matter in the real world\n        isImportRule ? 0 : sheet.cssRules.length);\n      } catch (e) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.warn(\"There was a problem inserting the following rule: \\\"\" + rule + \"\\\"\", e);\n        }\n      }\n    } else {\n      tag.appendChild(document.createTextNode(rule));\n    }\n\n    this.ctr++;\n  };\n\n  _proto.flush = function flush() {\n    // $FlowFixMe\n    this.tags.forEach(function (tag) {\n      return tag.parentNode.removeChild(tag);\n    });\n    this.tags = [];\n    this.ctr = 0;\n  };\n\n  return StyleSheet;\n}();\n\nexport { StyleSheet };\n","function stylis_min (W) {\n  function M(d, c, e, h, a) {\n    for (var m = 0, b = 0, v = 0, n = 0, q, g, x = 0, K = 0, k, u = k = q = 0, l = 0, r = 0, I = 0, t = 0, B = e.length, J = B - 1, y, f = '', p = '', F = '', G = '', C; l < B;) {\n      g = e.charCodeAt(l);\n      l === J && 0 !== b + n + v + m && (0 !== b && (g = 47 === b ? 10 : 47), n = v = m = 0, B++, J++);\n\n      if (0 === b + n + v + m) {\n        if (l === J && (0 < r && (f = f.replace(N, '')), 0 < f.trim().length)) {\n          switch (g) {\n            case 32:\n            case 9:\n            case 59:\n            case 13:\n            case 10:\n              break;\n\n            default:\n              f += e.charAt(l);\n          }\n\n          g = 59;\n        }\n\n        switch (g) {\n          case 123:\n            f = f.trim();\n            q = f.charCodeAt(0);\n            k = 1;\n\n            for (t = ++l; l < B;) {\n              switch (g = e.charCodeAt(l)) {\n                case 123:\n                  k++;\n                  break;\n\n                case 125:\n                  k--;\n                  break;\n\n                case 47:\n                  switch (g = e.charCodeAt(l + 1)) {\n                    case 42:\n                    case 47:\n                      a: {\n                        for (u = l + 1; u < J; ++u) {\n                          switch (e.charCodeAt(u)) {\n                            case 47:\n                              if (42 === g && 42 === e.charCodeAt(u - 1) && l + 2 !== u) {\n                                l = u + 1;\n                                break a;\n                              }\n\n                              break;\n\n                            case 10:\n                              if (47 === g) {\n                                l = u + 1;\n                                break a;\n                              }\n\n                          }\n                        }\n\n                        l = u;\n                      }\n\n                  }\n\n                  break;\n\n                case 91:\n                  g++;\n\n                case 40:\n                  g++;\n\n                case 34:\n                case 39:\n                  for (; l++ < J && e.charCodeAt(l) !== g;) {\n                  }\n\n              }\n\n              if (0 === k) break;\n              l++;\n            }\n\n            k = e.substring(t, l);\n            0 === q && (q = (f = f.replace(ca, '').trim()).charCodeAt(0));\n\n            switch (q) {\n              case 64:\n                0 < r && (f = f.replace(N, ''));\n                g = f.charCodeAt(1);\n\n                switch (g) {\n                  case 100:\n                  case 109:\n                  case 115:\n                  case 45:\n                    r = c;\n                    break;\n\n                  default:\n                    r = O;\n                }\n\n                k = M(c, r, k, g, a + 1);\n                t = k.length;\n                0 < A && (r = X(O, f, I), C = H(3, k, r, c, D, z, t, g, a, h), f = r.join(''), void 0 !== C && 0 === (t = (k = C.trim()).length) && (g = 0, k = ''));\n                if (0 < t) switch (g) {\n                  case 115:\n                    f = f.replace(da, ea);\n\n                  case 100:\n                  case 109:\n                  case 45:\n                    k = f + '{' + k + '}';\n                    break;\n\n                  case 107:\n                    f = f.replace(fa, '$1 $2');\n                    k = f + '{' + k + '}';\n                    k = 1 === w || 2 === w && L('@' + k, 3) ? '@-webkit-' + k + '@' + k : '@' + k;\n                    break;\n\n                  default:\n                    k = f + k, 112 === h && (k = (p += k, ''));\n                } else k = '';\n                break;\n\n              default:\n                k = M(c, X(c, f, I), k, h, a + 1);\n            }\n\n            F += k;\n            k = I = r = u = q = 0;\n            f = '';\n            g = e.charCodeAt(++l);\n            break;\n\n          case 125:\n          case 59:\n            f = (0 < r ? f.replace(N, '') : f).trim();\n            if (1 < (t = f.length)) switch (0 === u && (q = f.charCodeAt(0), 45 === q || 96 < q && 123 > q) && (t = (f = f.replace(' ', ':')).length), 0 < A && void 0 !== (C = H(1, f, c, d, D, z, p.length, h, a, h)) && 0 === (t = (f = C.trim()).length) && (f = '\\x00\\x00'), q = f.charCodeAt(0), g = f.charCodeAt(1), q) {\n              case 0:\n                break;\n\n              case 64:\n                if (105 === g || 99 === g) {\n                  G += f + e.charAt(l);\n                  break;\n                }\n\n              default:\n                58 !== f.charCodeAt(t - 1) && (p += P(f, q, g, f.charCodeAt(2)));\n            }\n            I = r = u = q = 0;\n            f = '';\n            g = e.charCodeAt(++l);\n        }\n      }\n\n      switch (g) {\n        case 13:\n        case 10:\n          47 === b ? b = 0 : 0 === 1 + q && 107 !== h && 0 < f.length && (r = 1, f += '\\x00');\n          0 < A * Y && H(0, f, c, d, D, z, p.length, h, a, h);\n          z = 1;\n          D++;\n          break;\n\n        case 59:\n        case 125:\n          if (0 === b + n + v + m) {\n            z++;\n            break;\n          }\n\n        default:\n          z++;\n          y = e.charAt(l);\n\n          switch (g) {\n            case 9:\n            case 32:\n              if (0 === n + m + b) switch (x) {\n                case 44:\n                case 58:\n                case 9:\n                case 32:\n                  y = '';\n                  break;\n\n                default:\n                  32 !== g && (y = ' ');\n              }\n              break;\n\n            case 0:\n              y = '\\\\0';\n              break;\n\n            case 12:\n              y = '\\\\f';\n              break;\n\n            case 11:\n              y = '\\\\v';\n              break;\n\n            case 38:\n              0 === n + b + m && (r = I = 1, y = '\\f' + y);\n              break;\n\n            case 108:\n              if (0 === n + b + m + E && 0 < u) switch (l - u) {\n                case 2:\n                  112 === x && 58 === e.charCodeAt(l - 3) && (E = x);\n\n                case 8:\n                  111 === K && (E = K);\n              }\n              break;\n\n            case 58:\n              0 === n + b + m && (u = l);\n              break;\n\n            case 44:\n              0 === b + v + n + m && (r = 1, y += '\\r');\n              break;\n\n            case 34:\n            case 39:\n              0 === b && (n = n === g ? 0 : 0 === n ? g : n);\n              break;\n\n            case 91:\n              0 === n + b + v && m++;\n              break;\n\n            case 93:\n              0 === n + b + v && m--;\n              break;\n\n            case 41:\n              0 === n + b + m && v--;\n              break;\n\n            case 40:\n              if (0 === n + b + m) {\n                if (0 === q) switch (2 * x + 3 * K) {\n                  case 533:\n                    break;\n\n                  default:\n                    q = 1;\n                }\n                v++;\n              }\n\n              break;\n\n            case 64:\n              0 === b + v + n + m + u + k && (k = 1);\n              break;\n\n            case 42:\n            case 47:\n              if (!(0 < n + m + v)) switch (b) {\n                case 0:\n                  switch (2 * g + 3 * e.charCodeAt(l + 1)) {\n                    case 235:\n                      b = 47;\n                      break;\n\n                    case 220:\n                      t = l, b = 42;\n                  }\n\n                  break;\n\n                case 42:\n                  47 === g && 42 === x && t + 2 !== l && (33 === e.charCodeAt(t + 2) && (p += e.substring(t, l + 1)), y = '', b = 0);\n              }\n          }\n\n          0 === b && (f += y);\n      }\n\n      K = x;\n      x = g;\n      l++;\n    }\n\n    t = p.length;\n\n    if (0 < t) {\n      r = c;\n      if (0 < A && (C = H(2, p, r, d, D, z, t, h, a, h), void 0 !== C && 0 === (p = C).length)) return G + p + F;\n      p = r.join(',') + '{' + p + '}';\n\n      if (0 !== w * E) {\n        2 !== w || L(p, 2) || (E = 0);\n\n        switch (E) {\n          case 111:\n            p = p.replace(ha, ':-moz-$1') + p;\n            break;\n\n          case 112:\n            p = p.replace(Q, '::-webkit-input-$1') + p.replace(Q, '::-moz-$1') + p.replace(Q, ':-ms-input-$1') + p;\n        }\n\n        E = 0;\n      }\n    }\n\n    return G + p + F;\n  }\n\n  function X(d, c, e) {\n    var h = c.trim().split(ia);\n    c = h;\n    var a = h.length,\n        m = d.length;\n\n    switch (m) {\n      case 0:\n      case 1:\n        var b = 0;\n\n        for (d = 0 === m ? '' : d[0] + ' '; b < a; ++b) {\n          c[b] = Z(d, c[b], e).trim();\n        }\n\n        break;\n\n      default:\n        var v = b = 0;\n\n        for (c = []; b < a; ++b) {\n          for (var n = 0; n < m; ++n) {\n            c[v++] = Z(d[n] + ' ', h[b], e).trim();\n          }\n        }\n\n    }\n\n    return c;\n  }\n\n  function Z(d, c, e) {\n    var h = c.charCodeAt(0);\n    33 > h && (h = (c = c.trim()).charCodeAt(0));\n\n    switch (h) {\n      case 38:\n        return c.replace(F, '$1' + d.trim());\n\n      case 58:\n        return d.trim() + c.replace(F, '$1' + d.trim());\n\n      default:\n        if (0 < 1 * e && 0 < c.indexOf('\\f')) return c.replace(F, (58 === d.charCodeAt(0) ? '' : '$1') + d.trim());\n    }\n\n    return d + c;\n  }\n\n  function P(d, c, e, h) {\n    var a = d + ';',\n        m = 2 * c + 3 * e + 4 * h;\n\n    if (944 === m) {\n      d = a.indexOf(':', 9) + 1;\n      var b = a.substring(d, a.length - 1).trim();\n      b = a.substring(0, d).trim() + b + ';';\n      return 1 === w || 2 === w && L(b, 1) ? '-webkit-' + b + b : b;\n    }\n\n    if (0 === w || 2 === w && !L(a, 1)) return a;\n\n    switch (m) {\n      case 1015:\n        return 97 === a.charCodeAt(10) ? '-webkit-' + a + a : a;\n\n      case 951:\n        return 116 === a.charCodeAt(3) ? '-webkit-' + a + a : a;\n\n      case 963:\n        return 110 === a.charCodeAt(5) ? '-webkit-' + a + a : a;\n\n      case 1009:\n        if (100 !== a.charCodeAt(4)) break;\n\n      case 969:\n      case 942:\n        return '-webkit-' + a + a;\n\n      case 978:\n        return '-webkit-' + a + '-moz-' + a + a;\n\n      case 1019:\n      case 983:\n        return '-webkit-' + a + '-moz-' + a + '-ms-' + a + a;\n\n      case 883:\n        if (45 === a.charCodeAt(8)) return '-webkit-' + a + a;\n        if (0 < a.indexOf('image-set(', 11)) return a.replace(ja, '$1-webkit-$2') + a;\n        break;\n\n      case 932:\n        if (45 === a.charCodeAt(4)) switch (a.charCodeAt(5)) {\n          case 103:\n            return '-webkit-box-' + a.replace('-grow', '') + '-webkit-' + a + '-ms-' + a.replace('grow', 'positive') + a;\n\n          case 115:\n            return '-webkit-' + a + '-ms-' + a.replace('shrink', 'negative') + a;\n\n          case 98:\n            return '-webkit-' + a + '-ms-' + a.replace('basis', 'preferred-size') + a;\n        }\n        return '-webkit-' + a + '-ms-' + a + a;\n\n      case 964:\n        return '-webkit-' + a + '-ms-flex-' + a + a;\n\n      case 1023:\n        if (99 !== a.charCodeAt(8)) break;\n        b = a.substring(a.indexOf(':', 15)).replace('flex-', '').replace('space-between', 'justify');\n        return '-webkit-box-pack' + b + '-webkit-' + a + '-ms-flex-pack' + b + a;\n\n      case 1005:\n        return ka.test(a) ? a.replace(aa, ':-webkit-') + a.replace(aa, ':-moz-') + a : a;\n\n      case 1e3:\n        b = a.substring(13).trim();\n        c = b.indexOf('-') + 1;\n\n        switch (b.charCodeAt(0) + b.charCodeAt(c)) {\n          case 226:\n            b = a.replace(G, 'tb');\n            break;\n\n          case 232:\n            b = a.replace(G, 'tb-rl');\n            break;\n\n          case 220:\n            b = a.replace(G, 'lr');\n            break;\n\n          default:\n            return a;\n        }\n\n        return '-webkit-' + a + '-ms-' + b + a;\n\n      case 1017:\n        if (-1 === a.indexOf('sticky', 9)) break;\n\n      case 975:\n        c = (a = d).length - 10;\n        b = (33 === a.charCodeAt(c) ? a.substring(0, c) : a).substring(d.indexOf(':', 7) + 1).trim();\n\n        switch (m = b.charCodeAt(0) + (b.charCodeAt(7) | 0)) {\n          case 203:\n            if (111 > b.charCodeAt(8)) break;\n\n          case 115:\n            a = a.replace(b, '-webkit-' + b) + ';' + a;\n            break;\n\n          case 207:\n          case 102:\n            a = a.replace(b, '-webkit-' + (102 < m ? 'inline-' : '') + 'box') + ';' + a.replace(b, '-webkit-' + b) + ';' + a.replace(b, '-ms-' + b + 'box') + ';' + a;\n        }\n\n        return a + ';';\n\n      case 938:\n        if (45 === a.charCodeAt(5)) switch (a.charCodeAt(6)) {\n          case 105:\n            return b = a.replace('-items', ''), '-webkit-' + a + '-webkit-box-' + b + '-ms-flex-' + b + a;\n\n          case 115:\n            return '-webkit-' + a + '-ms-flex-item-' + a.replace(ba, '') + a;\n\n          default:\n            return '-webkit-' + a + '-ms-flex-line-pack' + a.replace('align-content', '').replace(ba, '') + a;\n        }\n        break;\n\n      case 973:\n      case 989:\n        if (45 !== a.charCodeAt(3) || 122 === a.charCodeAt(4)) break;\n\n      case 931:\n      case 953:\n        if (!0 === la.test(d)) return 115 === (b = d.substring(d.indexOf(':') + 1)).charCodeAt(0) ? P(d.replace('stretch', 'fill-available'), c, e, h).replace(':fill-available', ':stretch') : a.replace(b, '-webkit-' + b) + a.replace(b, '-moz-' + b.replace('fill-', '')) + a;\n        break;\n\n      case 962:\n        if (a = '-webkit-' + a + (102 === a.charCodeAt(5) ? '-ms-' + a : '') + a, 211 === e + h && 105 === a.charCodeAt(13) && 0 < a.indexOf('transform', 10)) return a.substring(0, a.indexOf(';', 27) + 1).replace(ma, '$1-webkit-$2') + a;\n    }\n\n    return a;\n  }\n\n  function L(d, c) {\n    var e = d.indexOf(1 === c ? ':' : '{'),\n        h = d.substring(0, 3 !== c ? e : 10);\n    e = d.substring(e + 1, d.length - 1);\n    return R(2 !== c ? h : h.replace(na, '$1'), e, c);\n  }\n\n  function ea(d, c) {\n    var e = P(c, c.charCodeAt(0), c.charCodeAt(1), c.charCodeAt(2));\n    return e !== c + ';' ? e.replace(oa, ' or ($1)').substring(4) : '(' + c + ')';\n  }\n\n  function H(d, c, e, h, a, m, b, v, n, q) {\n    for (var g = 0, x = c, w; g < A; ++g) {\n      switch (w = S[g].call(B, d, x, e, h, a, m, b, v, n, q)) {\n        case void 0:\n        case !1:\n        case !0:\n        case null:\n          break;\n\n        default:\n          x = w;\n      }\n    }\n\n    if (x !== c) return x;\n  }\n\n  function T(d) {\n    switch (d) {\n      case void 0:\n      case null:\n        A = S.length = 0;\n        break;\n\n      default:\n        if ('function' === typeof d) S[A++] = d;else if ('object' === typeof d) for (var c = 0, e = d.length; c < e; ++c) {\n          T(d[c]);\n        } else Y = !!d | 0;\n    }\n\n    return T;\n  }\n\n  function U(d) {\n    d = d.prefix;\n    void 0 !== d && (R = null, d ? 'function' !== typeof d ? w = 1 : (w = 2, R = d) : w = 0);\n    return U;\n  }\n\n  function B(d, c) {\n    var e = d;\n    33 > e.charCodeAt(0) && (e = e.trim());\n    V = e;\n    e = [V];\n\n    if (0 < A) {\n      var h = H(-1, c, e, e, D, z, 0, 0, 0, 0);\n      void 0 !== h && 'string' === typeof h && (c = h);\n    }\n\n    var a = M(O, e, c, 0, 0);\n    0 < A && (h = H(-2, a, e, e, D, z, a.length, 0, 0, 0), void 0 !== h && (a = h));\n    V = '';\n    E = 0;\n    z = D = 1;\n    return a;\n  }\n\n  var ca = /^\\0+/g,\n      N = /[\\0\\r\\f]/g,\n      aa = /: */g,\n      ka = /zoo|gra/,\n      ma = /([,: ])(transform)/g,\n      ia = /,\\r+?/g,\n      F = /([\\t\\r\\n ])*\\f?&/g,\n      fa = /@(k\\w+)\\s*(\\S*)\\s*/,\n      Q = /::(place)/g,\n      ha = /:(read-only)/g,\n      G = /[svh]\\w+-[tblr]{2}/,\n      da = /\\(\\s*(.*)\\s*\\)/g,\n      oa = /([\\s\\S]*?);/g,\n      ba = /-self|flex-/g,\n      na = /[^]*?(:[rp][el]a[\\w-]+)[^]*/,\n      la = /stretch|:\\s*\\w+\\-(?:conte|avail)/,\n      ja = /([^-])(image-set\\()/,\n      z = 1,\n      D = 1,\n      E = 0,\n      w = 1,\n      O = [],\n      S = [],\n      A = 0,\n      R = null,\n      Y = 0,\n      V = '';\n  B.use = T;\n  B.set = U;\n  void 0 !== W && U(W);\n  return B;\n}\n\nexport default stylis_min;\n","import { StyleSheet } from '@emotion/sheet';\nimport Stylis from '@emotion/stylis';\nimport '@emotion/weak-memoize';\n\n// https://github.com/thysultan/stylis.js/tree/master/plugins/rule-sheet\n// inlined to avoid umd wrapper and peerDep warnings/installing stylis\n// since we use stylis after closure compiler\nvar delimiter = '/*|*/';\nvar needle = delimiter + '}';\n\nfunction toSheet(block) {\n  if (block) {\n    Sheet.current.insert(block + '}');\n  }\n}\n\nvar Sheet = {\n  current: null\n};\nvar ruleSheet = function ruleSheet(context, content, selectors, parents, line, column, length, ns, depth, at) {\n  switch (context) {\n    // property\n    case 1:\n      {\n        switch (content.charCodeAt(0)) {\n          case 64:\n            {\n              // @import\n              Sheet.current.insert(content + ';');\n              return '';\n            }\n          // charcode for l\n\n          case 108:\n            {\n              // charcode for b\n              // this ignores label\n              if (content.charCodeAt(2) === 98) {\n                return '';\n              }\n            }\n        }\n\n        break;\n      }\n    // selector\n\n    case 2:\n      {\n        if (ns === 0) return content + delimiter;\n        break;\n      }\n    // at-rule\n\n    case 3:\n      {\n        switch (ns) {\n          // @font-face, @page\n          case 102:\n          case 112:\n            {\n              Sheet.current.insert(selectors[0] + content);\n              return '';\n            }\n\n          default:\n            {\n              return content + (at === 0 ? delimiter : '');\n            }\n        }\n      }\n\n    case -2:\n      {\n        content.split(needle).forEach(toSheet);\n      }\n  }\n};\n\nvar createCache = function createCache(options) {\n  if (options === undefined) options = {};\n  var key = options.key || 'css';\n  var stylisOptions;\n\n  if (options.prefix !== undefined) {\n    stylisOptions = {\n      prefix: options.prefix\n    };\n  }\n\n  var stylis = new Stylis(stylisOptions);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // $FlowFixMe\n    if (/[^a-z-]/.test(key)) {\n      throw new Error(\"Emotion key must only contain lower case alphabetical characters and - but \\\"\" + key + \"\\\" was passed\");\n    }\n  }\n\n  var inserted = {}; // $FlowFixMe\n\n  var container;\n\n  {\n    container = options.container || document.head;\n    var nodes = document.querySelectorAll(\"style[data-emotion-\" + key + \"]\");\n    Array.prototype.forEach.call(nodes, function (node) {\n      var attrib = node.getAttribute(\"data-emotion-\" + key); // $FlowFixMe\n\n      attrib.split(' ').forEach(function (id) {\n        inserted[id] = true;\n      });\n\n      if (node.parentNode !== container) {\n        container.appendChild(node);\n      }\n    });\n  }\n\n  var _insert;\n\n  {\n    stylis.use(options.stylisPlugins)(ruleSheet);\n\n    _insert = function insert(selector, serialized, sheet, shouldCache) {\n      var name = serialized.name;\n      Sheet.current = sheet;\n\n      if (process.env.NODE_ENV !== 'production' && serialized.map !== undefined) {\n        var map = serialized.map;\n        Sheet.current = {\n          insert: function insert(rule) {\n            sheet.insert(rule + map);\n          }\n        };\n      }\n\n      stylis(selector, serialized.styles);\n\n      if (shouldCache) {\n        cache.inserted[name] = true;\n      }\n    };\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    // https://esbench.com/bench/5bf7371a4cd7e6009ef61d0a\n    var commentStart = /\\/\\*/g;\n    var commentEnd = /\\*\\//g;\n    stylis.use(function (context, content) {\n      switch (context) {\n        case -1:\n          {\n            while (commentStart.test(content)) {\n              commentEnd.lastIndex = commentStart.lastIndex;\n\n              if (commentEnd.test(content)) {\n                commentStart.lastIndex = commentEnd.lastIndex;\n                continue;\n              }\n\n              throw new Error('Your styles have an unterminated comment (\"/*\" without corresponding \"*/\").');\n            }\n\n            commentStart.lastIndex = 0;\n            break;\n          }\n      }\n    });\n    stylis.use(function (context, content, selectors) {\n      switch (context) {\n        case -1:\n          {\n            var flag = 'emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason';\n            var unsafePseudoClasses = content.match(/(:first|:nth|:nth-last)-child/g);\n\n            if (unsafePseudoClasses && cache.compat !== true) {\n              unsafePseudoClasses.forEach(function (unsafePseudoClass) {\n                var ignoreRegExp = new RegExp(unsafePseudoClass + \".*\\\\/\\\\* \" + flag + \" \\\\*\\\\/\");\n                var ignore = ignoreRegExp.test(content);\n\n                if (unsafePseudoClass && !ignore) {\n                  console.error(\"The pseudo class \\\"\" + unsafePseudoClass + \"\\\" is potentially unsafe when doing server-side rendering. Try changing it to \\\"\" + unsafePseudoClass.split('-child')[0] + \"-of-type\\\".\");\n                }\n              });\n            }\n\n            break;\n          }\n      }\n    });\n  }\n\n  var cache = {\n    key: key,\n    sheet: new StyleSheet({\n      key: key,\n      container: container,\n      nonce: options.nonce,\n      speedy: options.speedy\n    }),\n    nonce: options.nonce,\n    inserted: inserted,\n    registered: {},\n    insert: _insert\n  };\n  return cache;\n};\n\nexport default createCache;\n","/* eslint-disable */\n// Inspired by https://github.com/garycourt/murmurhash-js\n// Ported from https://github.com/aappleby/smhasher/blob/61a0530f28277f2e850bfc39600ce61d02b518de/src/MurmurHash2.cpp#L37-L86\nfunction murmur2(str) {\n  // 'm' and 'r' are mixing constants generated offline.\n  // They're not really 'magic', they just happen to work well.\n  // const m = 0x5bd1e995;\n  // const r = 24;\n  // Initialize the hash\n  var h = 0; // Mix 4 bytes at a time into the hash\n\n  var k,\n      i = 0,\n      len = str.length;\n\n  for (; len >= 4; ++i, len -= 4) {\n    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;\n    k =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16);\n    k ^=\n    /* k >>> r: */\n    k >>> 24;\n    h =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16) ^\n    /* Math.imul(h, m): */\n    (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Handle the last few bytes of the input array\n\n\n  switch (len) {\n    case 3:\n      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n\n    case 2:\n      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n\n    case 1:\n      h ^= str.charCodeAt(i) & 0xff;\n      h =\n      /* Math.imul(h, m): */\n      (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Do a few final mixes of the hash to ensure the last few\n  // bytes are well-incorporated.\n\n\n  h ^= h >>> 13;\n  h =\n  /* Math.imul(h, m): */\n  (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  return ((h ^ h >>> 15) >>> 0).toString(36);\n}\n\nexport default murmur2;\n","var unitlessKeys = {\n  animationIterationCount: 1,\n  borderImageOutset: 1,\n  borderImageSlice: 1,\n  borderImageWidth: 1,\n  boxFlex: 1,\n  boxFlexGroup: 1,\n  boxOrdinalGroup: 1,\n  columnCount: 1,\n  columns: 1,\n  flex: 1,\n  flexGrow: 1,\n  flexPositive: 1,\n  flexShrink: 1,\n  flexNegative: 1,\n  flexOrder: 1,\n  gridRow: 1,\n  gridRowEnd: 1,\n  gridRowSpan: 1,\n  gridRowStart: 1,\n  gridColumn: 1,\n  gridColumnEnd: 1,\n  gridColumnSpan: 1,\n  gridColumnStart: 1,\n  msGridRow: 1,\n  msGridRowSpan: 1,\n  msGridColumn: 1,\n  msGridColumnSpan: 1,\n  fontWeight: 1,\n  lineHeight: 1,\n  opacity: 1,\n  order: 1,\n  orphans: 1,\n  tabSize: 1,\n  widows: 1,\n  zIndex: 1,\n  zoom: 1,\n  WebkitLineClamp: 1,\n  // SVG-related properties\n  fillOpacity: 1,\n  floodOpacity: 1,\n  stopOpacity: 1,\n  strokeDasharray: 1,\n  strokeDashoffset: 1,\n  strokeMiterlimit: 1,\n  strokeOpacity: 1,\n  strokeWidth: 1\n};\n\nexport default unitlessKeys;\n","function memoize(fn) {\n  var cache = {};\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\n\nexport default memoize;\n","import hashString from '@emotion/hash';\nimport unitless from '@emotion/unitless';\nimport memoize from '@emotion/memoize';\n\nvar ILLEGAL_ESCAPE_SEQUENCE_ERROR = \"You have illegal escape sequence in your template literal, most likely inside content's property value.\\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \\\"content: '\\\\00d7';\\\" should become \\\"content: '\\\\\\\\00d7';\\\".\\nYou can read more about this here:\\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences\";\nvar UNDEFINED_AS_OBJECT_KEY_ERROR = \"You have passed in falsy value as style object's key (can happen when in example you pass unexported component as computed key).\";\nvar hyphenateRegex = /[A-Z]|^ms/g;\nvar animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;\n\nvar isCustomProperty = function isCustomProperty(property) {\n  return property.charCodeAt(1) === 45;\n};\n\nvar isProcessableValue = function isProcessableValue(value) {\n  return value != null && typeof value !== 'boolean';\n};\n\nvar processStyleName = memoize(function (styleName) {\n  return isCustomProperty(styleName) ? styleName : styleName.replace(hyphenateRegex, '-$&').toLowerCase();\n});\n\nvar processStyleValue = function processStyleValue(key, value) {\n  switch (key) {\n    case 'animation':\n    case 'animationName':\n      {\n        if (typeof value === 'string') {\n          return value.replace(animationRegex, function (match, p1, p2) {\n            cursor = {\n              name: p1,\n              styles: p2,\n              next: cursor\n            };\n            return p1;\n          });\n        }\n      }\n  }\n\n  if (unitless[key] !== 1 && !isCustomProperty(key) && typeof value === 'number' && value !== 0) {\n    return value + 'px';\n  }\n\n  return value;\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  var contentValuePattern = /(attr|calc|counters?|url)\\(/;\n  var contentValues = ['normal', 'none', 'counter', 'open-quote', 'close-quote', 'no-open-quote', 'no-close-quote', 'initial', 'inherit', 'unset'];\n  var oldProcessStyleValue = processStyleValue;\n  var msPattern = /^-ms-/;\n  var hyphenPattern = /-(.)/g;\n  var hyphenatedCache = {};\n\n  processStyleValue = function processStyleValue(key, value) {\n    if (key === 'content') {\n      if (typeof value !== 'string' || contentValues.indexOf(value) === -1 && !contentValuePattern.test(value) && (value.charAt(0) !== value.charAt(value.length - 1) || value.charAt(0) !== '\"' && value.charAt(0) !== \"'\")) {\n        console.error(\"You seem to be using a value for 'content' without quotes, try replacing it with `content: '\\\"\" + value + \"\\\"'`\");\n      }\n    }\n\n    var processed = oldProcessStyleValue(key, value);\n\n    if (processed !== '' && !isCustomProperty(key) && key.indexOf('-') !== -1 && hyphenatedCache[key] === undefined) {\n      hyphenatedCache[key] = true;\n      console.error(\"Using kebab-case for css properties in objects is not supported. Did you mean \" + key.replace(msPattern, 'ms-').replace(hyphenPattern, function (str, _char) {\n        return _char.toUpperCase();\n      }) + \"?\");\n    }\n\n    return processed;\n  };\n}\n\nvar shouldWarnAboutInterpolatingClassNameFromCss = true;\n\nfunction handleInterpolation(mergedProps, registered, interpolation, couldBeSelectorInterpolation) {\n  if (interpolation == null) {\n    return '';\n  }\n\n  if (interpolation.__emotion_styles !== undefined) {\n    if (process.env.NODE_ENV !== 'production' && interpolation.toString() === 'NO_COMPONENT_SELECTOR') {\n      throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');\n    }\n\n    return interpolation;\n  }\n\n  switch (typeof interpolation) {\n    case 'boolean':\n      {\n        return '';\n      }\n\n    case 'object':\n      {\n        if (interpolation.anim === 1) {\n          cursor = {\n            name: interpolation.name,\n            styles: interpolation.styles,\n            next: cursor\n          };\n          return interpolation.name;\n        }\n\n        if (interpolation.styles !== undefined) {\n          var next = interpolation.next;\n\n          if (next !== undefined) {\n            // not the most efficient thing ever but this is a pretty rare case\n            // and there will be very few iterations of this generally\n            while (next !== undefined) {\n              cursor = {\n                name: next.name,\n                styles: next.styles,\n                next: cursor\n              };\n              next = next.next;\n            }\n          }\n\n          var styles = interpolation.styles + \";\";\n\n          if (process.env.NODE_ENV !== 'production' && interpolation.map !== undefined) {\n            styles += interpolation.map;\n          }\n\n          return styles;\n        }\n\n        return createStringFromObject(mergedProps, registered, interpolation);\n      }\n\n    case 'function':\n      {\n        if (mergedProps !== undefined) {\n          var previousCursor = cursor;\n          var result = interpolation(mergedProps);\n          cursor = previousCursor;\n          return handleInterpolation(mergedProps, registered, result, couldBeSelectorInterpolation);\n        } else if (process.env.NODE_ENV !== 'production') {\n          console.error('Functions that are interpolated in css calls will be stringified.\\n' + 'If you want to have a css call based on props, create a function that returns a css call like this\\n' + 'let dynamicStyle = (props) => css`color: ${props.color}`\\n' + 'It can be called directly with props or interpolated in a styled call like this\\n' + \"let SomeComponent = styled('div')`${dynamicStyle}`\");\n        }\n\n        break;\n      }\n\n    case 'string':\n      if (process.env.NODE_ENV !== 'production') {\n        var matched = [];\n        var replaced = interpolation.replace(animationRegex, function (match, p1, p2) {\n          var fakeVarName = \"animation\" + matched.length;\n          matched.push(\"const \" + fakeVarName + \" = keyframes`\" + p2.replace(/^@keyframes animation-\\w+/, '') + \"`\");\n          return \"${\" + fakeVarName + \"}\";\n        });\n\n        if (matched.length) {\n          console.error('`keyframes` output got interpolated into plain string, please wrap it with `css`.\\n\\n' + 'Instead of doing this:\\n\\n' + [].concat(matched, [\"`\" + replaced + \"`\"]).join('\\n') + '\\n\\nYou should wrap it with `css` like this:\\n\\n' + (\"css`\" + replaced + \"`\"));\n        }\n      }\n\n      break;\n  } // finalize string values (regular strings and functions interpolated into css calls)\n\n\n  if (registered == null) {\n    return interpolation;\n  }\n\n  var cached = registered[interpolation];\n\n  if (process.env.NODE_ENV !== 'production' && couldBeSelectorInterpolation && shouldWarnAboutInterpolatingClassNameFromCss && cached !== undefined) {\n    console.error('Interpolating a className from css`` is not recommended and will cause problems with composition.\\n' + 'Interpolating a className from css`` will be completely unsupported in a future major version of Emotion');\n    shouldWarnAboutInterpolatingClassNameFromCss = false;\n  }\n\n  return cached !== undefined && !couldBeSelectorInterpolation ? cached : interpolation;\n}\n\nfunction createStringFromObject(mergedProps, registered, obj) {\n  var string = '';\n\n  if (Array.isArray(obj)) {\n    for (var i = 0; i < obj.length; i++) {\n      string += handleInterpolation(mergedProps, registered, obj[i], false);\n    }\n  } else {\n    for (var _key in obj) {\n      var value = obj[_key];\n\n      if (typeof value !== 'object') {\n        if (registered != null && registered[value] !== undefined) {\n          string += _key + \"{\" + registered[value] + \"}\";\n        } else if (isProcessableValue(value)) {\n          string += processStyleName(_key) + \":\" + processStyleValue(_key, value) + \";\";\n        }\n      } else {\n        if (_key === 'NO_COMPONENT_SELECTOR' && process.env.NODE_ENV !== 'production') {\n          throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');\n        }\n\n        if (Array.isArray(value) && typeof value[0] === 'string' && (registered == null || registered[value[0]] === undefined)) {\n          for (var _i = 0; _i < value.length; _i++) {\n            if (isProcessableValue(value[_i])) {\n              string += processStyleName(_key) + \":\" + processStyleValue(_key, value[_i]) + \";\";\n            }\n          }\n        } else {\n          var interpolated = handleInterpolation(mergedProps, registered, value, false);\n\n          switch (_key) {\n            case 'animation':\n            case 'animationName':\n              {\n                string += processStyleName(_key) + \":\" + interpolated + \";\";\n                break;\n              }\n\n            default:\n              {\n                if (process.env.NODE_ENV !== 'production' && _key === 'undefined') {\n                  console.error(UNDEFINED_AS_OBJECT_KEY_ERROR);\n                }\n\n                string += _key + \"{\" + interpolated + \"}\";\n              }\n          }\n        }\n      }\n    }\n  }\n\n  return string;\n}\n\nvar labelPattern = /label:\\s*([^\\s;\\n{]+)\\s*;/g;\nvar sourceMapPattern;\n\nif (process.env.NODE_ENV !== 'production') {\n  sourceMapPattern = /\\/\\*#\\ssourceMappingURL=data:application\\/json;\\S+\\s+\\*\\//;\n} // this is the cursor for keyframes\n// keyframes are stored on the SerializedStyles object as a linked list\n\n\nvar cursor;\nvar serializeStyles = function serializeStyles(args, registered, mergedProps) {\n  if (args.length === 1 && typeof args[0] === 'object' && args[0] !== null && args[0].styles !== undefined) {\n    return args[0];\n  }\n\n  var stringMode = true;\n  var styles = '';\n  cursor = undefined;\n  var strings = args[0];\n\n  if (strings == null || strings.raw === undefined) {\n    stringMode = false;\n    styles += handleInterpolation(mergedProps, registered, strings, false);\n  } else {\n    if (process.env.NODE_ENV !== 'production' && strings[0] === undefined) {\n      console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n    }\n\n    styles += strings[0];\n  } // we start at 1 since we've already handled the first arg\n\n\n  for (var i = 1; i < args.length; i++) {\n    styles += handleInterpolation(mergedProps, registered, args[i], styles.charCodeAt(styles.length - 1) === 46);\n\n    if (stringMode) {\n      if (process.env.NODE_ENV !== 'production' && strings[i] === undefined) {\n        console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n      }\n\n      styles += strings[i];\n    }\n  }\n\n  var sourceMap;\n\n  if (process.env.NODE_ENV !== 'production') {\n    styles = styles.replace(sourceMapPattern, function (match) {\n      sourceMap = match;\n      return '';\n    });\n  } // using a global regex with .exec is stateful so lastIndex has to be reset each time\n\n\n  labelPattern.lastIndex = 0;\n  var identifierName = '';\n  var match; // https://esbench.com/bench/5b809c2cf2949800a0f61fb5\n\n  while ((match = labelPattern.exec(styles)) !== null) {\n    identifierName += '-' + // $FlowFixMe we know it's not null\n    match[1];\n  }\n\n  var name = hashString(styles) + identifierName;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // $FlowFixMe SerializedStyles type doesn't have toString property (and we don't want to add it)\n    return {\n      name: name,\n      styles: styles,\n      map: sourceMap,\n      next: cursor,\n      toString: function toString() {\n        return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";\n      }\n    };\n  }\n\n  return {\n    name: name,\n    styles: styles,\n    next: cursor\n  };\n};\n\nexport { serializeStyles };\n","import '@babel/runtime/helpers/inheritsLoose';\nimport { createContext, forwardRef, createElement } from 'react';\nimport createCache from '@emotion/cache';\nimport { getRegisteredStyles, insertStyles } from '@emotion/utils';\nimport { serializeStyles } from '@emotion/serialize';\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar EmotionCacheContext = /*#__PURE__*/createContext( // we're doing this to avoid preconstruct's dead code elimination in this one case\n// because this module is primarily intended for the browser and node\n// but it's also required in react native and similar environments sometimes\n// and we could have a special build just for that\n// but this is much easier and the native packages\n// might use a different theme context in the future anyway\ntypeof HTMLElement !== 'undefined' ? createCache() : null);\nvar ThemeContext = /*#__PURE__*/createContext({});\nvar CacheProvider = EmotionCacheContext.Provider;\n\nvar withEmotionCache = function withEmotionCache(func) {\n  var render = function render(props, ref) {\n    return /*#__PURE__*/createElement(EmotionCacheContext.Consumer, null, function (cache) {\n      return func(props, cache, ref);\n    });\n  }; // $FlowFixMe\n\n\n  return /*#__PURE__*/forwardRef(render);\n};\n\n// thus we only need to replace what is a valid character for JS, but not for CSS\n\nvar sanitizeIdentifier = function sanitizeIdentifier(identifier) {\n  return identifier.replace(/\\$/g, '-');\n};\n\nvar typePropName = '__EMOTION_TYPE_PLEASE_DO_NOT_USE__';\nvar labelPropName = '__EMOTION_LABEL_PLEASE_DO_NOT_USE__';\nvar createEmotionProps = function createEmotionProps(type, props) {\n  if (process.env.NODE_ENV !== 'production' && typeof props.css === 'string' && // check if there is a css declaration\n  props.css.indexOf(':') !== -1) {\n    throw new Error(\"Strings are not allowed as css prop values, please wrap it in a css template literal from '@emotion/css' like this: css`\" + props.css + \"`\");\n  }\n\n  var newProps = {};\n\n  for (var key in props) {\n    if (hasOwnProperty.call(props, key)) {\n      newProps[key] = props[key];\n    }\n  }\n\n  newProps[typePropName] = type; // TODO: check if this still works with all of those different JSX functions\n\n  if (process.env.NODE_ENV !== 'production') {\n    var error = new Error();\n\n    if (error.stack) {\n      // chrome\n      var match = error.stack.match(/at (?:Object\\.|Module\\.|)(?:jsx|createEmotionProps).*\\n\\s+at (?:Object\\.|)([A-Z][A-Za-z$]+) /);\n\n      if (!match) {\n        // safari and firefox\n        match = error.stack.match(/.*\\n([A-Z][A-Za-z$]+)@/);\n      }\n\n      if (match) {\n        newProps[labelPropName] = sanitizeIdentifier(match[1]);\n      }\n    }\n  }\n\n  return newProps;\n};\n\nvar render = function render(cache, props, theme, ref) {\n  var cssProp = theme === null ? props.css : props.css(theme); // so that using `css` from `emotion` and passing the result to the css prop works\n  // not passing the registered cache to serializeStyles because it would\n  // make certain babel optimisations not possible\n\n  if (typeof cssProp === 'string' && cache.registered[cssProp] !== undefined) {\n    cssProp = cache.registered[cssProp];\n  }\n\n  var type = props[typePropName];\n  var registeredStyles = [cssProp];\n  var className = '';\n\n  if (typeof props.className === 'string') {\n    className = getRegisteredStyles(cache.registered, registeredStyles, props.className);\n  } else if (props.className != null) {\n    className = props.className + \" \";\n  }\n\n  var serialized = serializeStyles(registeredStyles);\n\n  if (process.env.NODE_ENV !== 'production' && serialized.name.indexOf('-') === -1) {\n    var labelFromStack = props[labelPropName];\n\n    if (labelFromStack) {\n      serialized = serializeStyles([serialized, 'label:' + labelFromStack + ';']);\n    }\n  }\n\n  var rules = insertStyles(cache, serialized, typeof type === 'string');\n  className += cache.key + \"-\" + serialized.name;\n  var newProps = {};\n\n  for (var key in props) {\n    if (hasOwnProperty.call(props, key) && key !== 'css' && key !== typePropName && (process.env.NODE_ENV === 'production' || key !== labelPropName)) {\n      newProps[key] = props[key];\n    }\n  }\n\n  newProps.ref = ref;\n  newProps.className = className;\n  var ele = /*#__PURE__*/createElement(type, newProps);\n\n  return ele;\n}; // eslint-disable-next-line no-undef\n\n\nvar Emotion = /* #__PURE__ */withEmotionCache(function (props, cache, ref) {\n  if (typeof props.css === 'function') {\n    return /*#__PURE__*/createElement(ThemeContext.Consumer, null, function (theme) {\n      return render(cache, props, theme, ref);\n    });\n  }\n\n  return render(cache, props, null, ref);\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Emotion.displayName = 'EmotionCssPropInternal';\n}\n\nexport { CacheProvider as C, Emotion as E, ThemeContext as T, createEmotionProps as c, hasOwnProperty as h, withEmotionCache as w };\n","var isBrowser = \"object\" !== 'undefined';\nfunction getRegisteredStyles(registered, registeredStyles, classNames) {\n  var rawClassName = '';\n  classNames.split(' ').forEach(function (className) {\n    if (registered[className] !== undefined) {\n      registeredStyles.push(registered[className]);\n    } else {\n      rawClassName += className + \" \";\n    }\n  });\n  return rawClassName;\n}\nvar insertStyles = function insertStyles(cache, serialized, isStringTag) {\n  var className = cache.key + \"-\" + serialized.name;\n\n  if ( // we only need to add the styles to the registered cache if the\n  // class name could be used further down\n  // the tree but if it's a string tag, we know it won't\n  // so we don't have to add it to registered cache.\n  // this improves memory usage since we can avoid storing the whole style string\n  (isStringTag === false || // we need to always store it if we're in compat mode and\n  // in node since emotion-server relies on whether a style is in\n  // the registered cache to know whether a style is global or not\n  // also, note that this check will be dead code eliminated in the browser\n  isBrowser === false && cache.compat !== undefined) && cache.registered[className] === undefined) {\n    cache.registered[className] = serialized.styles;\n  }\n\n  if (cache.inserted[serialized.name] === undefined) {\n    var current = serialized;\n\n    do {\n      var maybeStyles = cache.insert(\".\" + className, current, cache.sheet, true);\n\n      current = current.next;\n    } while (current !== undefined);\n  }\n};\n\nexport { getRegisteredStyles, insertStyles };\n","import { serializeStyles } from '@emotion/serialize';\n\nfunction css() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return serializeStyles(args);\n}\n\nexport default css;\n","import _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport { createElement, Component } from 'react';\nimport '@emotion/cache';\nimport { h as hasOwnProperty, E as Emotion, c as createEmotionProps, w as withEmotionCache, T as ThemeContext } from './emotion-element-57a3a7a3.browser.esm.js';\nexport { C as CacheProvider, T as ThemeContext, w as withEmotionCache } from './emotion-element-57a3a7a3.browser.esm.js';\nimport { insertStyles, getRegisteredStyles } from '@emotion/utils';\nimport { serializeStyles } from '@emotion/serialize';\nimport { StyleSheet } from '@emotion/sheet';\nimport css from '@emotion/css';\nexport { default as css } from '@emotion/css';\n\nvar jsx = function jsx(type, props) {\n  var args = arguments;\n\n  if (props == null || !hasOwnProperty.call(props, 'css')) {\n    // $FlowFixMe\n    return createElement.apply(undefined, args);\n  }\n\n  var argsLength = args.length;\n  var createElementArgArray = new Array(argsLength);\n  createElementArgArray[0] = Emotion;\n  createElementArgArray[1] = createEmotionProps(type, props);\n\n  for (var i = 2; i < argsLength; i++) {\n    createElementArgArray[i] = args[i];\n  } // $FlowFixMe\n\n\n  return createElement.apply(null, createElementArgArray);\n};\n\nvar warnedAboutCssPropForGlobal = false;\nvar Global = /* #__PURE__ */withEmotionCache(function (props, cache) {\n  if (process.env.NODE_ENV !== 'production' && !warnedAboutCssPropForGlobal && ( // check for className as well since the user is\n  // probably using the custom createElement which\n  // means it will be turned into a className prop\n  // $FlowFixMe I don't really want to add it to the type since it shouldn't be used\n  props.className || props.css)) {\n    console.error(\"It looks like you're using the css prop on Global, did you mean to use the styles prop instead?\");\n    warnedAboutCssPropForGlobal = true;\n  }\n\n  var styles = props.styles;\n\n  if (typeof styles === 'function') {\n    return /*#__PURE__*/createElement(ThemeContext.Consumer, null, function (theme) {\n      var serialized = serializeStyles([styles(theme)]);\n      return /*#__PURE__*/createElement(InnerGlobal, {\n        serialized: serialized,\n        cache: cache\n      });\n    });\n  }\n\n  var serialized = serializeStyles([styles]);\n  return /*#__PURE__*/createElement(InnerGlobal, {\n    serialized: serialized,\n    cache: cache\n  });\n});\n\n// maintain place over rerenders.\n// initial render from browser, insertBefore context.sheet.tags[0] or if a style hasn't been inserted there yet, appendChild\n// initial client-side render from SSR, use place of hydrating tag\nvar InnerGlobal = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(InnerGlobal, _React$Component);\n\n  function InnerGlobal(props, context, updater) {\n    return _React$Component.call(this, props, context, updater) || this;\n  }\n\n  var _proto = InnerGlobal.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.sheet = new StyleSheet({\n      key: this.props.cache.key + \"-global\",\n      nonce: this.props.cache.sheet.nonce,\n      container: this.props.cache.sheet.container\n    }); // $FlowFixMe\n\n    var node = document.querySelector(\"style[data-emotion-\" + this.props.cache.key + \"=\\\"\" + this.props.serialized.name + \"\\\"]\");\n\n    if (node !== null) {\n      this.sheet.tags.push(node);\n    }\n\n    if (this.props.cache.sheet.tags.length) {\n      this.sheet.before = this.props.cache.sheet.tags[0];\n    }\n\n    this.insertStyles();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (prevProps.serialized.name !== this.props.serialized.name) {\n      this.insertStyles();\n    }\n  };\n\n  _proto.insertStyles = function insertStyles$1() {\n    if (this.props.serialized.next !== undefined) {\n      // insert keyframes\n      insertStyles(this.props.cache, this.props.serialized.next, true);\n    }\n\n    if (this.sheet.tags.length) {\n      // if this doesn't exist then it will be null so the style element will be appended\n      var element = this.sheet.tags[this.sheet.tags.length - 1].nextElementSibling;\n      this.sheet.before = element;\n      this.sheet.flush();\n    }\n\n    this.props.cache.insert(\"\", this.props.serialized, this.sheet, false);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.sheet.flush();\n  };\n\n  _proto.render = function render() {\n\n    return null;\n  };\n\n  return InnerGlobal;\n}(Component);\n\nvar keyframes = function keyframes() {\n  var insertable = css.apply(void 0, arguments);\n  var name = \"animation-\" + insertable.name; // $FlowFixMe\n\n  return {\n    name: name,\n    styles: \"@keyframes \" + name + \"{\" + insertable.styles + \"}\",\n    anim: 1,\n    toString: function toString() {\n      return \"_EMO_\" + this.name + \"_\" + this.styles + \"_EMO_\";\n    }\n  };\n};\n\nvar classnames = function classnames(args) {\n  var len = args.length;\n  var i = 0;\n  var cls = '';\n\n  for (; i < len; i++) {\n    var arg = args[i];\n    if (arg == null) continue;\n    var toAdd = void 0;\n\n    switch (typeof arg) {\n      case 'boolean':\n        break;\n\n      case 'object':\n        {\n          if (Array.isArray(arg)) {\n            toAdd = classnames(arg);\n          } else {\n            toAdd = '';\n\n            for (var k in arg) {\n              if (arg[k] && k) {\n                toAdd && (toAdd += ' ');\n                toAdd += k;\n              }\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          toAdd = arg;\n        }\n    }\n\n    if (toAdd) {\n      cls && (cls += ' ');\n      cls += toAdd;\n    }\n  }\n\n  return cls;\n};\n\nfunction merge(registered, css, className) {\n  var registeredStyles = [];\n  var rawClassName = getRegisteredStyles(registered, registeredStyles, className);\n\n  if (registeredStyles.length < 2) {\n    return className;\n  }\n\n  return rawClassName + css(registeredStyles);\n}\n\nvar ClassNames = withEmotionCache(function (props, context) {\n  return /*#__PURE__*/createElement(ThemeContext.Consumer, null, function (theme) {\n    var hasRendered = false;\n\n    var css = function css() {\n      if (hasRendered && process.env.NODE_ENV !== 'production') {\n        throw new Error('css can only be used during render');\n      }\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var serialized = serializeStyles(args, context.registered);\n\n      {\n        insertStyles(context, serialized, false);\n      }\n\n      return context.key + \"-\" + serialized.name;\n    };\n\n    var cx = function cx() {\n      if (hasRendered && process.env.NODE_ENV !== 'production') {\n        throw new Error('cx can only be used during render');\n      }\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return merge(context.registered, css, classnames(args));\n    };\n\n    var content = {\n      css: css,\n      cx: cx,\n      theme: theme\n    };\n    var ele = props.children(content);\n    hasRendered = true;\n\n    return ele;\n  });\n});\n\nexport { ClassNames, Global, jsx as createElement, jsx, keyframes };\n","import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { createElement } from 'react';\nimport isPropValid from '@emotion/is-prop-valid';\nimport { withEmotionCache, ThemeContext } from '@emotion/core';\nimport { getRegisteredStyles, insertStyles } from '@emotion/utils';\nimport { serializeStyles } from '@emotion/serialize';\n\nvar testOmitPropsOnStringTag = isPropValid;\n\nvar testOmitPropsOnComponent = function testOmitPropsOnComponent(key) {\n  return key !== 'theme' && key !== 'innerRef';\n};\n\nvar getDefaultShouldForwardProp = function getDefaultShouldForwardProp(tag) {\n  return typeof tag === 'string' && // 96 is one less than the char code\n  // for \"a\" so this is checking that\n  // it's a lowercase character\n  tag.charCodeAt(0) > 96 ? testOmitPropsOnStringTag : testOmitPropsOnComponent;\n};\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\nvar ILLEGAL_ESCAPE_SEQUENCE_ERROR = \"You have illegal escape sequence in your template literal, most likely inside content's property value.\\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \\\"content: '\\\\00d7';\\\" should become \\\"content: '\\\\\\\\00d7';\\\".\\nYou can read more about this here:\\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences\";\n\nvar createStyled = function createStyled(tag, options) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (tag === undefined) {\n      throw new Error('You are trying to create a styled element with an undefined component.\\nYou may have forgotten to import it.');\n    }\n  }\n\n  var identifierName;\n  var shouldForwardProp;\n  var targetClassName;\n\n  if (options !== undefined) {\n    identifierName = options.label;\n    targetClassName = options.target;\n    shouldForwardProp = tag.__emotion_forwardProp && options.shouldForwardProp ? function (propName) {\n      return tag.__emotion_forwardProp(propName) && // $FlowFixMe\n      options.shouldForwardProp(propName);\n    } : options.shouldForwardProp;\n  }\n\n  var isReal = tag.__emotion_real === tag;\n  var baseTag = isReal && tag.__emotion_base || tag;\n\n  if (typeof shouldForwardProp !== 'function' && isReal) {\n    shouldForwardProp = tag.__emotion_forwardProp;\n  }\n\n  var defaultShouldForwardProp = shouldForwardProp || getDefaultShouldForwardProp(baseTag);\n  var shouldUseAs = !defaultShouldForwardProp('as');\n  return function () {\n    var args = arguments;\n    var styles = isReal && tag.__emotion_styles !== undefined ? tag.__emotion_styles.slice(0) : [];\n\n    if (identifierName !== undefined) {\n      styles.push(\"label:\" + identifierName + \";\");\n    }\n\n    if (args[0] == null || args[0].raw === undefined) {\n      styles.push.apply(styles, args);\n    } else {\n      if (process.env.NODE_ENV !== 'production' && args[0][0] === undefined) {\n        console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n      }\n\n      styles.push(args[0][0]);\n      var len = args.length;\n      var i = 1;\n\n      for (; i < len; i++) {\n        if (process.env.NODE_ENV !== 'production' && args[0][i] === undefined) {\n          console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n        }\n\n        styles.push(args[i], args[0][i]);\n      }\n    } // $FlowFixMe: we need to cast StatelessFunctionalComponent to our PrivateStyledComponent class\n\n\n    var Styled = withEmotionCache(function (props, context, ref) {\n      return createElement(ThemeContext.Consumer, null, function (theme) {\n        var finalTag = shouldUseAs && props.as || baseTag;\n        var className = '';\n        var classInterpolations = [];\n        var mergedProps = props;\n\n        if (props.theme == null) {\n          mergedProps = {};\n\n          for (var key in props) {\n            mergedProps[key] = props[key];\n          }\n\n          mergedProps.theme = theme;\n        }\n\n        if (typeof props.className === 'string') {\n          className = getRegisteredStyles(context.registered, classInterpolations, props.className);\n        } else if (props.className != null) {\n          className = props.className + \" \";\n        }\n\n        var serialized = serializeStyles(styles.concat(classInterpolations), context.registered, mergedProps);\n        var rules = insertStyles(context, serialized, typeof finalTag === 'string');\n        className += context.key + \"-\" + serialized.name;\n\n        if (targetClassName !== undefined) {\n          className += \" \" + targetClassName;\n        }\n\n        var finalShouldForwardProp = shouldUseAs && shouldForwardProp === undefined ? getDefaultShouldForwardProp(finalTag) : defaultShouldForwardProp;\n        var newProps = {};\n\n        for (var _key in props) {\n          if (shouldUseAs && _key === 'as') continue;\n\n          if ( // $FlowFixMe\n          finalShouldForwardProp(_key)) {\n            newProps[_key] = props[_key];\n          }\n        }\n\n        newProps.className = className;\n        newProps.ref = ref || props.innerRef;\n\n        if (process.env.NODE_ENV !== 'production' && props.innerRef) {\n          console.error('`innerRef` is deprecated and will be removed in a future major version of Emotion, please use the `ref` prop instead' + (identifierName === undefined ? '' : \" in the usage of `\" + identifierName + \"`\"));\n        }\n\n        var ele = createElement(finalTag, newProps);\n\n        return ele;\n      });\n    });\n    Styled.displayName = identifierName !== undefined ? identifierName : \"Styled(\" + (typeof baseTag === 'string' ? baseTag : baseTag.displayName || baseTag.name || 'Component') + \")\";\n    Styled.defaultProps = tag.defaultProps;\n    Styled.__emotion_real = Styled;\n    Styled.__emotion_base = baseTag;\n    Styled.__emotion_styles = styles;\n    Styled.__emotion_forwardProp = shouldForwardProp;\n    Object.defineProperty(Styled, 'toString', {\n      value: function value() {\n        if (targetClassName === undefined && process.env.NODE_ENV !== 'production') {\n          return 'NO_COMPONENT_SELECTOR';\n        } // $FlowFixMe: coerce undefined to string\n\n\n        return \".\" + targetClassName;\n      }\n    });\n\n    Styled.withComponent = function (nextTag, nextOptions) {\n      return createStyled(nextTag, nextOptions !== undefined ? _objectSpread({}, options || {}, {}, nextOptions) : options).apply(void 0, styles);\n    };\n\n    return Styled;\n  };\n};\n\nexport default createStyled;\n","import styled from '@emotion/styled-base';\n\nvar tags = ['a', 'abbr', 'address', 'area', 'article', 'aside', 'audio', 'b', 'base', 'bdi', 'bdo', 'big', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'cite', 'code', 'col', 'colgroup', 'data', 'datalist', 'dd', 'del', 'details', 'dfn', 'dialog', 'div', 'dl', 'dt', 'em', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'keygen', 'label', 'legend', 'li', 'link', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meta', 'meter', 'nav', 'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p', 'param', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'track', 'u', 'ul', 'var', 'video', 'wbr', // SVG\n'circle', 'clipPath', 'defs', 'ellipse', 'foreignObject', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'svg', 'text', 'tspan'];\n\nvar newStyled = styled.bind();\ntags.forEach(function (tagName) {\n  newStyled[tagName] = newStyled(tagName);\n});\n\nexport default newStyled;\n","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nmodule.exports = toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nmodule.exports = toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports, _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["hasOwn","Object","prototype","hasOwnProperty","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","name","enumerable","configurable","value","newValue","writable","getProperty","module","exports","extend","src","copy","copyIsArray","clone","arguments","i","length","deep","nameRe","nameReJsx","emptyOptions","jsx","test","re","empty","replace","Schema","property","normal","space","this","merge","definitions","index","assign","normalize","toLowerCase","Info","attribute","boolean","booleanish","overloadedBoolean","number","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","defined","powers","increment","checks","keys","DefinedInfo","mask","super","mark","values","own","create","definition","prop","info","properties","transform","attributes","includes","xlink","_","slice","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","html","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","alt","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","checked","cite","className","cols","colSpan","content","contentEditable","controls","controlsList","coords","crossOrigin","data","dateTime","decoding","default","defer","dir","dirName","disabled","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","href","hrefLang","htmlFor","httpEquiv","id","imageSizes","imageSrcSet","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","kind","label","lang","language","list","loading","loop","low","manifest","max","maxLength","media","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextMenu","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","open","optimum","pattern","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rows","rowSpan","sandbox","scope","scoped","seamless","selected","shape","size","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","start","step","style","tabIndex","title","translate","type","typeMustMatch","useMap","width","wrap","align","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","char","charOff","classId","clear","code","codeBase","codeType","color","compact","declare","event","face","frame","frameBorder","hSpace","leftMargin","link","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","rules","scheme","scrolling","standby","summary","text","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","prefix","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","d","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","end","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","format","fr","from","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","handler","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","offset","opacity","operator","order","orient","orientation","origin","overflow","overlay","path","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","r","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","resource","restart","result","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","string","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","valid","dash","cap","find","schema","Type","charAt","camelcase","toUpperCase","datasetToProperty","kebab","datasetToAttribute","$0","hastToReact","point","pointStart","node","position","line","column","undefined","pos","VFileMessage","Error","causeOrReason","optionsOrParentOrPlace","reason","legacyCause","place","ancestors","cause","message","ruleId","source","indexOf","parent","fatal","file","stack","actual","expected","note","url","emptyMap","Map","dashSomething","tableElements","Set","tableCellElement","docs","toJsxRuntime","tree","Fragment","TypeError","filePath","development","jsxDEV","props","isStaticChildren","children","columnNumber","fileName","lineNumber","developmentCreate","jsxs","fn","productionCreate","state","components","elementAttributeNameCase","evaluater","createEvaluater","ignoreInvalidStyle","passKeys","passNode","stylePropertyNameCase","tableCellAlignToStyle","one","parentSchema","tagName","push","findComponentFromName","alignValue","createProperty","has","createElementProps","createChildren","child","thing","addNode","addChildren","pop","estree","expression","body","evaluateExpression","crashEstree","mdxExpression","objectExpression","argument","createJsxElementProps","mdxJsxElement","evaluateProgram","mdxEsm","root","countsByName","count","get","set","Number","isNaN","settings","concat","join","padRight","padLeft","trim","styleObject","replacer","error","toCamel","parseStyle","String","domCasing","cssCasing","transformStyleToCssCasing","transformStylesToCssCasing","allowExpression","identifiers","split","computed","Boolean","optional","toDash","$1","urlAttributes","icon","includeImageAlt","includeHtml","splice","remove","items","parameters","chunkStart","unshift","SpliceBuffer","initial","left","right","RangeError","shift","setCursor","stop","POSITIVE_INFINITY","reverse","deleteCount","Math","trunc","removed","chunkedPush","item","pushMany","unshiftMany","n","subtokenize","eventsArray","jumps","lineIndex","otherIndex","otherEvent","subevents","more","events","_tokenizer","_isInFirstContentOfListItem","contentType","subcontent","_container","eventIndex","token","context","startPosition","startPositions","tokenizer","parser","childEvents","gaps","stream","previous","current","adjust","breaks","sliceStream","next","defineSkip","_gfmTasklistFirstContentOfListItem","write","syntaxExtension","all","extension","hook","constructs","existing","before","add","asciiAlpha","regexCheck","asciiAlphanumeric","asciiAtext","asciiControl","asciiDigit","asciiHexDigit","asciiPunctuation","markdownLineEnding","markdownLineEndingOrSpace","markdownSpace","unicodePunctuation","unicodeWhitespace","regex","fromCharCode","factorySpace","effects","ok","limit","enter","consume","exit","tokenize","contentStart","attempt","contentInitial","lineStart","self","childFlow","childToken","lineStartOffset","continued","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","check","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","containerContinue","flow","flowContinue","writeToChild","eof","seen","entry","nok","document","disable","null","blankLine","after","partial","chunkInside","contentEnd","continuationConstruct","contentContinue","resolve","prefixed","tail","sliceSerialize","flowInitial","afterConstruct","resolver","resolveAll","createResolver","initializeFactory","field","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","tabs","bufferIndex","chunk","charCodeAt","_index","_bufferIndex","called","createTokenizer","initialize","columnStart","resolveAllConstructs","consumed","accountForPotentialSkip","fields","constructFactory","construct","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","expectedCode","startIndex","startBufferIndex","endIndex","endBufferIndex","view","head","sliceChunks","chunkIndex","go","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","map","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","resolveTo","thematicBreak","marker","sequence","initialSize","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","notBlank","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","contBefore","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","enclosedBefore","raw","enclosed","enclosedEscape","rawEscape","factoryLabel","markerType","labelInside","labelEscape","factoryTitle","escape","factoryWhitespace","normalizeIdentifier","identifier","labelAfter","markerAfter","destinationBefore","destinationAfter","titleBefore","afterWhitespace","beforeMarker","titleAfter","titleAfterOptionalWhitespace","codeIndented","afterPrefix","furtherStart","headingAtx","sequenceOpen","sequenceFurther","setextUnderline","paragraph","heading","htmlBlockNames","htmlRawNames","htmlFlow","closingTag","buffer","markerB","declarationOpen","tagCloseStart","continuationDeclarationInside","commentOpenInside","cdataOpenInside","slash","basicSelfClosing","completeClosingTagAfter","completeAttributeNameBefore","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCdataInside","continuationStart","blankLineBefore","continuationAfter","nonLazyContinuationStart","continuationStartNonLazy","continuationBefore","continuationRawEndTag","nonLazyContinuation","codeFenced","closeStart","startBefore","beforeSequenceClose","sequenceClose","sizeOpen","sequenceCloseAfter","initialPrefix","beforeSequenceOpen","infoBefore","atNonLazyBreak","metaBefore","meta","contentBefore","beforeContentChunk","contentChunk","createElement","decodeNamedCharacterReference","characterReference","innerHTML","textContent","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","labelEndNok","resourceConstruct","labelEndOk","referenceFullConstruct","referenceNotFull","referenceCollapsedConstruct","close","group","insideSpan","resourceBefore","resourceOpen","resourceEnd","resourceDestinationAfter","resourceDestinationMissing","resourceBetween","resourceTitleAfter","referenceFullAfter","referenceFullMissing","referenceCollapsedOpen","labelStartImage","classifyCharacter","attention","attentionMarkers","_open","_close","openingSequence","closingSequence","use","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","instruction","tagOpen","declaration","commentEnd","comment","commentClose","lineEndingBefore","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","lineEndingAfter","lineEndingAfterPrefix","labelStartLink","hardBreakEscape","codeText","between","tailExitIndex","headEnterIndex","extensions","combineExtensions","search","decodeNumericCharacterReference","base","parseInt","fromCodePoint","characterEscapeOrReference","decode","$2","hex","fromMarkdown","encoding","config","transforms","canContainEols","opener","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcharacterreference","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","configure","mdastExtensions","compile","tokenStack","resume","listStack","prepareList","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","expectingFirstListItemValue","flowCodeInside","depth","setextHeadingSlurpLineEnding","codePointAt","siblings","atHardBreak","inReference","referenceType","ancestor","decodeString","fragment","characterReferenceType","ordered","spread","compiler","postprocess","atCarriageReturn","match","endPosition","TextDecoder","lastIndex","exec","ceil","preprocess","combined","remarkParse","doc","env","globalThis","deserialize","serialized","$","out","unpair","Date","flags","RegExp","BigInt","deserializer","EMPTY","asString","shouldSkip","TYPE","serialize","json","lossy","strict","pair","valueOf","toJSON","entries","toISOString","serializer","structuredClone","any","normalizeUri","skip","encodeURIComponent","defaultFootnoteBackContent","rereferenceIndex","defaultFootnoteBackLabel","referenceIndex","convert","castFactory","tests","apply","anyFactory","checkAsRecord","nodeAsRecord","propsFactory","typeFactory","testFunction","looksLikeANode","CONTINUE","EXIT","visitParents","visitor","factory","parents","visit","subresult","grandparents","toResult","nodeAsParent","revert","subtype","suffix","contents","listItemLoose","trimLines","last","lines","trimLine","blockquote","patch","applyData","break","delete","footnoteReference","clobberPrefix","safeId","footnoteOrder","counter","reuseCounter","footnoteCounts","dataFootnoteRef","sup","allowDangerousHtml","imageReference","definitionById","inlineCode","linkReference","loose","listLoose","table","firstRow","tableContent","tableCell","tableRow","cellIndex","cells","cell","toml","ignore","yaml","footnoteDefinition","createState","footnoteById","handlers","nodes","trimMarkdownSpaceStart","handle","passThrough","shallow","unknownHandler","defaultUnknownHandler","testOrVisitor","visitorOrReverse","maybeReverse","hName","hChildren","hProperties","toHast","foot","footnoteBackContent","footnoteBackLabel","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","listItems","backReferences","counts","dataFootnoteBackref","tailTail","dataFootnotes","footer","remarkRehype","destination","hastTree","run","bail","getPrototypeOf","trough","fns","pipeline","middlewareIndex","callback","output","middleware","wrapped","fnExpectsCallback","done","Promise","then","middelware","minpath","basename","extname","assertPath","seenNonSlash","firstNonSlashEnd","extnameIndex","dirname","unmatchedSlash","startPart","startDot","preDotState","segments","joined","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","lastIndexOf","normalizeString","sep","JSON","stringify","minproc","cwd","isUrl","fileUrlOrPath","protocol","auth","urlToPath","URL","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","VFile","isUint8Array","history","messages","stored","assertNonEmpty","assertPart","stem","fail","part","CallableInstance","proto","setPrototypeOf","Processor","Compiler","Parser","attachers","freezeIndex","frozen","namespace","transformers","attacher","assertUnfrozen","freeze","transformer","parse","realFile","vfile","assertParser","process","assertCompiler","executor","reject","parseTree","realDone","compileTree","compileResult","processSync","complete","assertDone","assertNode","outputTree","resultingTree","runSync","addPlugin","addList","addPreset","plugin","plugins","entryIndex","primary","rest","currentPrimary","unified","asyncName","looksLikeAVFile","emptyPlugins","emptyRemarkRehypeOptions","safeProtocol","deprecations","Markdown","allowedElements","allowElement","disallowedElements","rehypePlugins","remarkPlugins","remarkRehypeOptions","skipHtml","unwrapDisallowed","urlTransform","defaultUrlTransform","processor","deprecation","mdastTree","colon","questionMark","numberSign","_extends","Text","forwardRef","ref","tx","variant","__css","lineHeight","appearance","textAlign","px","py","bg","borderRadius","maxWidth","StyledLink","styled","a","withConfig","displayName","componentId","_ref","theme","colors","darkPrimary","_ref2","primaryAccent","_ref3","lightPrimary","p","ul","li","_ref4","startsWith","React","location","ReactMarkdown","description","ThemeProvider","ModalRoutingContext","Consumer","modal","closeTo","Link","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","str","lineno","updatePosition","Position","whitespace","errorsList","msg","err","filename","silent","m","comments","c","val","ret","decl","decls","declarations","__importDefault","mod","__esModule","iterator","inline_style_parser_1","hasIterator","forEach","_interopRequireDefault","_styled","_styledSystem","_css","cache","_getRequireWildcardCache","newObj","hasPropertyDescriptor","desc","_interopRequireWildcard","_shouldForwardProp","WeakMap","Box","shouldForwardProp","boxSizing","margin","minWidth","_ref$tx","sx","css","compose","layout","typography","flexbox","StyleSheet","isSpeedy","speedy","tags","ctr","container","_proto","insert","rule","_tag","tag","setAttribute","appendChild","createTextNode","createStyleElement","nextSibling","insertBefore","sheet","styleSheets","ownerNode","sheetForTag","isImportRule","insertRule","cssRules","e","flush","parentNode","removeChild","W","M","h","q","g","C","b","v","K","u","l","I","t","B","J","f","F","G","N","substring","ca","O","A","H","X","D","da","ea","fa","w","L","P","Y","E","ha","Q","ia","Z","ja","ka","aa","ba","la","ma","R","na","oa","S","U","T","delimiter","needle","toSheet","block","Sheet","ruleSheet","selectors","ns","at","stylisOptions","stylis","inserted","_insert","querySelectorAll","getAttribute","stylisPlugins","selector","shouldCache","styles","registered","len","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","msGridRow","msGridRowSpan","msGridColumn","msGridColumnSpan","orphans","tabSize","widows","zIndex","zoom","WebkitLineClamp","strokeDasharray","strokeDashoffset","strokeMiterlimit","hyphenateRegex","animationRegex","isCustomProperty","isProcessableValue","processStyleName","arg","styleName","processStyleValue","p1","p2","handleInterpolation","mergedProps","interpolation","couldBeSelectorInterpolation","__emotion_styles","anim","_key","interpolated","_i","createStringFromObject","previousCursor","cached","labelPattern","args","stringMode","strings","identifierName","EmotionCacheContext","createContext","HTMLElement","Provider","func","render","registeredStyles","classNames","rawClassName","isStringTag","classnames","cls","toAdd","_len","_len2","_key2","ele","testOmitPropsOnStringTag","testOmitPropsOnComponent","getDefaultShouldForwardProp","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","sym","createStyled","targetClassName","__emotion_forwardProp","propName","isReal","__emotion_real","baseTag","__emotion_base","defaultShouldForwardProp","shouldUseAs","Styled","finalTag","classInterpolations","finalShouldForwardProp","newProps","innerRef","defaultProps","withComponent","nextTag","nextOptions","getOwnPropertyDescriptors","defineProperties","_objectSpread","newStyled","bind","toPropertyKey","_typeof","Symbol","toPrimitive","o"],"sourceRoot":""}